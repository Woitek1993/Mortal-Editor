package me;


import java.awt.Color;
import java.awt.Component;
import java.awt.EventQueue;
import java.awt.Toolkit;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.SwingConstants;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;

import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.JSlider;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicComboBoxRenderer;

import com.sun.jna.platform.win32.Advapi32Util;
import com.sun.jna.platform.win32.WinReg;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JButton;
import javax.swing.border.LineBorder;
import javax.swing.JScrollPane;

public class Main {

	private JFrame frmMortalEditor;
	private JTextField tfUnkOff,tfUnkDataOff;
	private List<ArrayList<Mortal>>data;
	private List<String> text;
	private boolean firstTime;
	private String encoding,gdPath;
	private JComboBox cbMissions,cbMortals,cbModel,cbType,cbModel2,cbSpawn,cbAnimation,cbName,cbBio,cbMood,cbUncFear,cbCovFear,cbImg,cbAI;
	private JSpinner spinnerId,spinnerUnk,spinnerScript,spinnerUnk2,spinnerUnk4,spinnerUnk5,spinnerUnk6,spinnerUnk7,spinnerUnk8;
	private JSlider sliderBel, sliderIns, sliderWill;
	private JCheckBox cb1,cb2,cb3,cb4,cb5,cb6,cb7,cb8,cb9,cb10,cb11,cb12,cb13,cb14,cb15;
	private List<Integer>iconAdd,modelAdd,hashAdd,mortalAdd,animAdd,spawnAdd;
	private int pIndx,pIndx2;
	private JList list;
	private JLabel icon;
	private JPanel panel;
	private JTextField tfTitle;
	private JTextField tfAuthor;
	private JTextField tfVersion;
	private JTextField tfDescription;
	private JLabel lblPathdata_1;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Main window = new Main();
					window.frmMortalEditor.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Main() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	public int toInteger(byte[] data, int index){
		return ((data[index+3] & 0xFF) << 24) | ((data[index+2] & 0xFF) << 16) | ((data[index+1] & 0xFF) << 8) | (data[index] & 0xFF);
	}
	
	public float toFloat(byte[] data, int index){
		return Float.intBitsToFloat(((data[index+3] & 0xFF) << 24) | ((data[index+2] & 0xFF) << 16) | ((data[index+1] & 0xFF) << 8) | (data[index] & 0xFF));
	}
	
	public boolean checkBox(int type, int bit){
		return (((type >> bit) & 1) != 0);
	}
	
	public void checkImage(){
		Mortal temp = data.get(pIndx).get(pIndx2);
		byte[] mData;
		byte[] iData = temp.iconData;
    	if(iData != null){
    		int iconIndex = 0;
    		if(temp.newIconData == null){
    			iconIndex = toInteger(iData,4);
        	}else{
        		iconIndex = toInteger(temp.newIconData,4);
        	}
			cbImg.setSelectedIndex(iconAdd.indexOf(iconIndex));
    	}else{
        	cbImg.setSelectedIndex(-1);
        	icon.setIcon(new ImageIcon());
    	}
	}
	
	public String dataToString(byte[] data){
		StringBuilder builder = new StringBuilder();
		for(int i = 0; i<data.length; i++){
        	builder.append(String.format("%02X ",data[i]));
        }
        return builder.toString();
	}
	
	public byte[] hexStringToByteArray(String s) {
		try{
			int len = s.length();
			byte[] data = new byte[len / 2];
			for (int i = 0; i < len; i += 2) {
				data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) << 4) + Character.digit(s.charAt(i+1), 16));
			}
		
			return data;
		}catch(Exception e){
			JOptionPane.showMessageDialog(null,"Wrong number of arguments");
		}
		return null;
	}
	
	public File getPath(String filterName, String extension, String folder, String dialogTitle, String buttonText, boolean isDirectory){

		JFileChooser openLanguage =  new JFileChooser(gdPath+"\\"+folder);	
		openLanguage.setDialogTitle(dialogTitle);
		if(isDirectory){
			openLanguage.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		}else{
			FileNameExtensionFilter imgfilt = new FileNameExtensionFilter(filterName,extension);
			openLanguage.setFileFilter(imgfilt);		
		}
		openLanguage.setApproveButtonText(buttonText);
		openLanguage.showOpenDialog(null);
		return openLanguage.getSelectedFile();
	}
	
	public File getPath2(String dialog, String buttonText){
		JFileChooser openFile =  new JFileChooser(gdPath);	
		openFile.setDialogTitle(dialog);
		openFile.setApproveButtonText(buttonText);
		openFile.showOpenDialog(null);
		return openFile.getSelectedFile();
	}
	
	public void cleanMortal(){
		int index = cbMissions.getSelectedIndex();
			cbMortals.removeAllItems();
			for(int i = 1; i<data.get(index).size()+1; i++){
				cbMortals.addItem("Mortal "+ i);
			}
	}
	
	public void cleanImage(){
		boolean found = false;
		int index = cbMissions.getSelectedIndex();
		int index2 = cbMortals.getSelectedIndex();
		for(int i = 0; i<list.getModel().getSize(); i++){
			if(list.getModel().getElementAt(i).toString().startsWith(cbImg.getItemAt(cbImg.getSelectedIndex()).toString()+".tga")){
				Path path2 = Paths.get(gdPath + "\\"+"Temp" + "\\" + cbImg.getItemAt(cbImg.getSelectedIndex()).toString() + ".tga");
				icon.setIcon(targaToImageIcon(path2));
				found = true;
			}
		}
		if(!found){
	    	Path iconPath = Paths.get(gdPath+"\\ui\\"+ cbImg.getSelectedItem().toString()+".tga");
	    	ImageIcon imgIcon = targaToImageIcon(iconPath);
		    icon.setIcon(imgIcon);
		}
	}
	
	public int getIntegerFromCheckBox(){
		int test = 0;
		test += (cb1.isSelected()? 1<<0 : 0);
		test += (cb2.isSelected()? 1<<1 : 0);
		test += (cb3.isSelected()?1<<2 : 0);
		test += (cb4.isSelected()?1<<3 : 0);
		test += (cb5.isSelected()?1<<4 : 0);
		test += (cb6.isSelected()?1<<5 : 0);
		test += (cb7.isSelected()?1<<6 : 0);
		test += (cb8.isSelected()?1<<7 : 0);
		test += (cb9.isSelected()?1<<8 : 0);
		test += (cb10.isSelected()?1<<9 : 0);
		test += (cb11.isSelected()?1<<10 : 0);
		test += (cb12.isSelected()?1<<11 : 0);
		test += (cb13.isSelected()?1<<12 : 0);
		test += (cb14.isSelected()?1<<13 : 0);
		test += (cb15.isSelected()?1<<14 : 0);
		return test;
	}
	
	public void getByteArrayFromData(){
		
		Mortal mortal = data.get(pIndx).get(pIndx2);
		
		ByteBuffer bb = ByteBuffer.allocate(104);
		bb.putInt(Integer.reverseBytes((Integer)spinnerId.getValue()));
		bb.putInt(Integer.reverseBytes(modelAdd.get(cbModel.getSelectedIndex())));
		bb.putInt(Integer.reverseBytes(mortalAdd.get(cbType.getSelectedIndex())));
		bb.putInt(Integer.reverseBytes(hashAdd.get(cbModel2.getSelectedIndex())));
		bb.putInt(Integer.reverseBytes(spawnAdd.get(cbSpawn.getSelectedIndex())));
		bb.putInt(Integer.reverseBytes(animAdd.get(cbAnimation.getSelectedIndex())));
		bb.putInt(Integer.reverseBytes((Integer)spinnerUnk.getValue()));
		byte[] temp = hexStringToByteArray(tfUnkOff.getText());
			for(int b = temp.length-1; b>=0; b--){
				bb.put(temp[b]);
			}
		temp = hexStringToByteArray(tfUnkDataOff.getText());
			for(int b = temp.length-1; b>=0; b--){
				bb.put(temp[b]);
			}
		bb.putInt(Integer.reverseBytes((Integer)spinnerScript.getValue()));
		int nameIndx = cbName.getSelectedIndex();
		bb.putInt(Integer.reverseBytes(nameIndx));
		bb.putInt(Integer.reverseBytes(cbBio.getSelectedIndex()));
		bb.putInt(Integer.reverseBytes((Integer)spinnerUnk2.getValue()));
		bb.putInt(Integer.reverseBytes(cbAI.getSelectedIndex()));
		bb.putInt(Integer.reverseBytes(cbMood.getSelectedIndex()+40));
		bb.putInt(Integer.reverseBytes(cbUncFear.getSelectedIndex()));
		bb.putInt(Integer.reverseBytes(cbCovFear.getSelectedIndex()));
		bb.putInt(Integer.reverseBytes((Integer)spinnerUnk4.getValue()));
		bb.putInt(Integer.reverseBytes((Integer)spinnerUnk5.getValue()));
		bb.putInt(Integer.reverseBytes((Integer)spinnerUnk6.getValue()));
		bb.putInt(Integer.reverseBytes(Float.floatToIntBits((float)(-sliderBel.getValue()+100))));
		bb.putInt(Integer.reverseBytes(Float.floatToIntBits((float)(sliderIns.getValue()))));
		bb.putInt(Integer.reverseBytes(Float.floatToIntBits((float)(sliderWill.getValue()))));
		bb.putInt(Integer.reverseBytes((Integer)spinnerUnk7.getValue()));
		bb.putInt(Integer.reverseBytes((Integer)spinnerUnk8.getValue()));
		bb.putInt(Integer.reverseBytes(getIntegerFromCheckBox()));
		
		bb.rewind();
		
		if(!Arrays.equals(mortal.old, bb.array())){
			mortal.user = bb.array();
		}else{
			mortal.user = null;
		}
		int imgIndx = cbImg.getSelectedIndex();
		if(mortal.iconData != null){
		if(imgIndx != -1){
				int iconAdrr = iconAdd.get(imgIndx);
				if(nameIndx != (((mortal.iconData[1] & 0xFF) << 8) | (mortal.iconData[0] & 0xFF)) || iconAdrr != toInteger(mortal.iconData,4) ){
					ByteBuffer bb2 = ByteBuffer.allocate(8);
					bb2.putShort(Short.reverseBytes((short)nameIndx));
					bb2.put(mortal.iconData[2]);
					bb2.put(mortal.iconData[3]);
					bb2.putInt(Integer.reverseBytes(iconAdrr));
					bb2.rewind();
					mortal.newIconData = bb2.array();
				}else{
					mortal.newIconData = null;
				}
			}else{
				if(nameIndx != (((mortal.iconData[1] & 0xFF) << 8) | (mortal.iconData[0] & 0xFF))){
					ByteBuffer bb2 = ByteBuffer.allocate(8);
					bb2.putShort(Short.reverseBytes((short)nameIndx));
					bb2.put(Arrays.copyOfRange(mortal.iconData, 2, 8));
					bb2.rewind();
					mortal.newIconData = bb2.array();
				}
			}
		}
	}
	
	public ImageIcon targaToImageIcon(Path path){
		byte[] targa = null;
		try{
			if(path != null){
				targa = Files.readAllBytes(path);
		
				
				byte[] uncompressed = new byte[] {0,0,2,0,0,0,0,0,0,0,0,0};
				byte[] test = Arrays.copyOfRange(targa, 0, 12);
				if(Arrays.equals(test, uncompressed)){
					int twidth = (targa[13]<<8 | targa[12] & 0xFF);
					int theight = (targa[15]<<8 | targa[14] & 0xFF);
					BufferedImage image = new BufferedImage(twidth, theight, BufferedImage.TYPE_INT_ARGB);
					byte bpp = targa[16];	
				int col = 0;
				int k,l;
				k = 0;
				l = twidth-1;
				int[][]expimage =  new int[theight][twidth];
				if(bpp == 32){ //BRGA
					for(int j = 18+(twidth*theight*4)-1; j>18; j-=4 ){
						//RGBA
						//BGRA
						col = ((targa[j]& 0xFF) << 24) | ((targa[j-1]& 0xFF) << 16) | ((targa[j-2]& 0xFF) << 8) | (targa[j-3] & 0xFF);
						expimage[k][l] = col;
						l--;
							if(l< 0){
								k++;
								l = twidth-1;
							}
						}
						
					}else if(bpp ==24){ //BGR
						for(int j = 18+(twidth*theight*3)-1; j>18; j-=3 ){
							//RGBA
							//BGR
							col = ((targa[j] & 0xFF) << 24) | ((targa[j-1] & 0xFF) << 16) | ((targa[j-2] & 0xFF) << 8) | (byte)255 & 0xFF;
							expimage[k][l] = col;
							l--;
							if(l< 0){
								k++;
								l = twidth-1;
							}	
						}
					
					}
				for(int y = 0; y < theight; y++) {
					for(int x = 0; x < twidth; x++) {
					image.setRGB(x, y, expimage[y][x]);
					}
				}
				return new ImageIcon(image);
			}
		}
	}catch(Exception e){e.printStackTrace();}
		return null;
	}
	
	
	public String makeString(byte[] data,int start, int bytecount){
		StringBuilder builder = new StringBuilder();
		for(int i = start+bytecount-1; i>=start; i--){
		//for(int i = start; i<start+bytecount; i++){
        	builder.append(String.format("%02x",data[i]));
        }
        return builder.toString();
	}
	
    public File[] sortFilesByName(File[]test) {
 
        Comparator<File> comparator = new Comparator<File>() {
 
            @Override
            public int compare(File o1, File o2) {
                	String[] f1 = o1.getName().split("-");
                	String[] f2 = o2.getName().split("-");
                    return (Integer.parseInt(f1[1])-Integer.parseInt(f2[1]));
            }
        };
        Arrays.sort(test, comparator);
        return test;
    }

	
	private void loadfile(){
		//clean code
		DefaultListModel listModel = (DefaultListModel) list.getModel();
		listModel.removeAllElements();
		tfTitle.setText("");
		tfAuthor.setText("");
		tfVersion.setText("");
		tfDescription.setText("");
		///////////////
		
		encoding = Advapi32Util.registryGetStringValue(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor", "encoding");
		
		gdPath = Advapi32Util.registryGetStringValue(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor", "pathFile");
		String path = gdPath+"\\"+"Mods";
		
		File dir = new File(path);
		if(!dir.exists()){
			dir.mkdir();
		}	
		File folder2 = new File(gdPath+"\\"+"Temp" +"\\");
		if(!folder2.exists()){
			folder2.mkdirs();
		}else{
			for(File file : folder2.listFiles()){
				file.delete();
			}
		}
		
		//Make refferences
		data = new ArrayList<ArrayList<Mortal>>();
		for(int i=0; i<15; i++){
			data.add(new ArrayList<Mortal>());
		}
		
		data.get(0).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xD8 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,0x1C ,(byte)0xC2 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x20 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x91 ,0x00 ,0x00 ,0x00 ,(byte)0x92 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x40 ,0x00 ,0x00 ,(byte)0xB0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DC6E8"
				,"8C2A18"
				,new byte[]{
				(byte)0x91 ,0x00 ,0x5F ,0x03 ,0x44 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(0).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE4 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xE4 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,(byte)0xBC ,(byte)0xC2 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,0x1D ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x8A ,0x00 ,0x00 ,0x00 ,(byte)0x8D ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DC680"
				,"8C2A00"
				,new byte[]{
				(byte)0x8A ,0x00 ,0x5F ,0x03 ,0x50 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(0).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xF0 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,0x3C ,(byte)0xC2 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x20 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x90 ,0x00 ,0x00 ,0x00 ,(byte)0x91 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,0x44 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DC618"
				,"8C29E8"
				,new byte[]{
				(byte)0x90 ,0x00 ,0x5F ,0x03 ,0x5C ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(0).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x00 ,(byte)0xC8 ,(byte)0x8D ,0x00 ,0x7C ,(byte)0xC2 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x1E ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x8D ,0x00 ,0x00 ,0x00 ,(byte)0x8F ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xC8 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DC5B0"
				,"8C29D0"
				,new byte[]{
				(byte)0x8D ,0x00 ,0x5F ,0x03 ,0x68 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(0).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,(byte)0xC8 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x0C ,(byte)0xC8 ,(byte)0x8D ,0x00 ,(byte)0x9C ,(byte)0xC2 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x1E ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x8B ,0x00 ,0x00 ,0x00 ,(byte)0x8E ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DC548"
				,"8C29B8"
				,new byte[]{
				(byte)0x8B ,0x00 ,0x5F ,0x03 ,0x74 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(0).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,(byte)0xC8 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x1C ,(byte)0xC8 ,(byte)0x8D ,0x00 ,(byte)0xDC ,(byte)0xC2 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x68 ,0x1D ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x89 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DC4E0"
				,"8C29A0"
				,new byte[]{
				(byte)0x89 ,0x00 ,0x5F ,0x03 ,(byte)0x84 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(0).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,(byte)0xBC ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xA0 ,(byte)0xBC ,(byte)0x8D ,0x00 ,0x5C ,(byte)0xC2 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x1F ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x8E ,0x00 ,0x00 ,0x00 ,(byte)0x90 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DC478"
				,"8C2988"
				,new byte[]{
				(byte)0x8E ,0x00 ,0x5F ,0x03 ,(byte)0x90 ,0x5D ,(byte)0x8C ,0x00 }));

				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x20 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,(byte)0xA8 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x66 ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x92 ,0x00 ,0x00 ,0x00 ,(byte)0x93 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,0x14 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E4238"
				,"8C2A78"
				,new byte[]{
				(byte)0x92 ,0x00 ,0x60 ,0x03 ,0x14 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x14 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,(byte)0xA0 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x43 ,(byte)0x8E ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x93 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0x90 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E41D0"
				,"8C2A90"
				,new byte[]{
				(byte)0x93 ,0x00 ,0x60 ,0x03 ,0x08 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x08 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,(byte)0x98 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x66 ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,0x00 ,0x00 ,0x00 ,(byte)0x95 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0x9C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E4168"
				,"8C2AA8"
				,new byte[]{
				(byte)0x94 ,0x00 ,0x60 ,0x03 ,(byte)0xFC ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xFC ,(byte)0x9F ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xFC ,(byte)0x9F ,(byte)0x8D ,0x00 ,(byte)0x90 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x67 ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x95 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,(byte)0xA4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E4100"
				,"8C2AC0"
				,new byte[]{
				(byte)0x95 ,0x00 ,0x60 ,0x03 ,(byte)0xF0 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x45 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x74 ,0x45 ,(byte)0x8E ,0x00 ,(byte)0x80 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x67 ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,(byte)0x97 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E40A0"
				,"8C2AD8"
				,new byte[]{
				(byte)0x96 ,0x00 ,0x60 ,0x03 ,(byte)0xE4 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x45 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x14 ,0x45 ,(byte)0x8E ,0x00 ,(byte)0x88 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x43 ,(byte)0x8E ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x97 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0x84 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E4030"
				,"8C2AF0"
				,new byte[]{
				(byte)0x97 ,0x00 ,0x60 ,0x03 ,(byte)0xD8 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x45 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x80 ,0x45 ,(byte)0x8E ,0x00 ,0x78 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x68 ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x00 ,0x00 ,0x00 ,(byte)0x99 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E3FC8"
				,"8C2B08"
				,new byte[]{
				(byte)0x98 ,0x00 ,0x60 ,0x03 ,(byte)0xD8 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x45 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x8C ,0x45 ,(byte)0x8E ,0x00 ,0x70 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x78 ,0x68 ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x99 ,0x00 ,0x00 ,0x00 ,(byte)0x9A ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8A ,0x42 ,0x00 ,0x00 ,0x40 ,0x41 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E3F60"
				,"8C2B20"
				,new byte[]{
				(byte)0x99 ,0x00 ,0x60 ,0x03 ,(byte)0xD8 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x3C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x3C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE8 ,0x68 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x00 ,0x00 ,0x00 ,(byte)0x9B ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x78 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E3EF8"
				,"8C2B38"
				,new byte[]{
				(byte)0x88 ,0x00 ,0x60 ,0x03 ,(byte)0xC8 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x2C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x2C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x44 ,(byte)0x8E ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x8B ,0x00 ,0x00 ,0x00 ,(byte)0x8E ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E3E90"
				,"8C2B80"
				,new byte[]{
				(byte)0x8B ,0x00 ,0x60 ,0x03 ,(byte)0x98 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x1C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x44 ,(byte)0x8E ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x00 ,0x00 ,0x00 ,(byte)0x9C ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,0x70 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E3E28"
				,"8C2B50"
				,new byte[]{
				(byte)0x8C ,0x00 ,0x60 ,0x03 ,(byte)0xB8 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x0C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x58 ,0x69 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x8F ,0x00 ,0x00 ,0x00 ,(byte)0x9D ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E3DC0"
				,"8C2B68"
				,new byte[]{
				(byte)0x8F ,0x00 ,0x60 ,0x03 ,(byte)0xA8 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x84 ,0x34 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x84 ,0x34 ,(byte)0x8E ,0x00 ,(byte)0xC0 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,0x69 ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,(byte)0x9A ,0x00 ,0x00 ,0x00 ,(byte)0x9E ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E3D58"
				,"8C2A30"
				,new byte[]{
				(byte)0x9A ,0x00 ,0x60 ,0x03 ,0x38 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x78 ,0x34 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x78 ,0x34 ,(byte)0x8E ,0x00 ,(byte)0xB8 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,0x69 ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,(byte)0x9B ,0x00 ,0x00 ,0x00 ,(byte)0x9F ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E3CF0"
				,"8C2A48"
				,new byte[]{
				(byte)0x9B ,0x00 ,0x60 ,0x03 ,0x2C ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(1).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x6C ,0x34 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x6C ,0x34 ,(byte)0x8E ,0x00 ,(byte)0xB0 ,0x3A ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,0x69 ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,(byte)0x9C ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,0x41 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E3C88"
				,"8C2A60"
				,new byte[]{
				(byte)0x9C ,0x00 ,0x60 ,0x03 ,0x20 ,0x5D ,(byte)0x8C ,0x00 }));

				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x70 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xF4 ,0x4C ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,(byte)0xBC ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xAE ,0x00 ,0x00 ,0x00 ,(byte)0xA6 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D56B0"
				,"8C2BB0"
				,new byte[]{
				(byte)0xAE ,0x00 ,0x63 ,0x03 ,(byte)0x80 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x7C ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x7C ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xCC ,0x4C ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,(byte)0xB9 ,(byte)0x95 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xAD ,0x00 ,0x00 ,0x00 ,(byte)0xA5 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x22 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D5648"
				,"8C2B98"
				,new byte[]{
				(byte)0xAD ,0x00 ,0x63 ,0x03 ,(byte)0x8C ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x40 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x40 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xB8 ,0x4C ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xD6 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD0 ,(byte)0xC5 ,(byte)0x95 ,0x00 ,0x18 ,0x5C ,(byte)0x8E ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,(byte)0xB2 ,0x00 ,0x00 ,0x00 ,(byte)0xAA ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x00 }
				,"008D5850"
				,"8C2C10"
				,new byte[]{
				(byte)0xB2 ,0x00 ,0x63 ,0x03 ,0x50 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x48 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xA4 ,0x4C ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xD6 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF8 ,(byte)0xC2 ,(byte)0x95 ,0x00 ,0x18 ,0x5C ,(byte)0x8E ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,(byte)0xB1 ,0x00 ,0x00 ,0x00 ,(byte)0xA9 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x00 }
				,"008D57E8"
				,"8C2BF8"
				,new byte[]{
				(byte)0xB1 ,0x00 ,0x63 ,0x03 ,0x58 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x50 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xE0 ,0x4C ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,(byte)0xC1 ,(byte)0x95 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0xB0 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D5780"
				,"8C2BE0"
				,new byte[]{
				(byte)0xB0 ,0x00 ,0x63 ,0x03 ,0x60 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x5C ,0x5C ,(byte)0x8D ,0x00 ,(byte)0x90 ,0x4C ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x40 ,(byte)0xBE ,(byte)0x95 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0xAF ,0x00 ,0x00 ,0x00 ,(byte)0xA7 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D5718"
				,"8C2BC8"
				,new byte[]{
				(byte)0xAF ,0x00 ,0x63 ,0x03 ,0x6C ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x30 ,0x5C ,(byte)0x8D ,0x00 ,0x6C ,0x4C ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC0 ,(byte)0xCA ,(byte)0x95 ,0x00 ,(byte)0xE0 ,0x5C ,(byte)0x8E ,0x00 ,0x09 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x00 ,0x00 ,0x00 ,(byte)0xAC ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x46 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D58B8"
				,"8C2C40"
				,new byte[]{
				(byte)0xB4 ,0x00 ,0x63 ,0x03 ,0x30 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD0 ,0x5B ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xD0 ,0x5B ,(byte)0x8D ,0x00 ,0x58 ,0x4C ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB0 ,(byte)0xC7 ,(byte)0x95 ,0x00 ,(byte)0xA8 ,0x5D ,(byte)0x8E ,0x00 ,0x09 ,0x00 ,0x00 ,0x00 ,(byte)0xB3 ,0x00 ,0x00 ,0x00 ,(byte)0xAB ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D55E0"
				,"8C2C28"
				,new byte[]{
				(byte)0xB3 ,0x00 ,0x63 ,0x03 ,0x40 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x24 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,(byte)0xC7 ,0x00 ,0x00 ,0x00 ,(byte)0xC2 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,0x7C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D5920"
				,"8C2CA0"
				,new byte[]{
				(byte)0xC7 ,0x00 ,0x63 ,0x03 ,0x04 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x08 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,(byte)0xC6 ,0x00 ,0x00 ,0x00 ,(byte)0xC1 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D5988"
				,"8C2C88"
				,new byte[]{
				(byte)0xC6 ,0x00 ,0x63 ,0x03 ,0x10 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xF8 ,0x5B ,(byte)0x8D ,0x00 ,0x18 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xCB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x00 ,0x00 ,0x00 ,(byte)0xB0 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D59F0"
				,"8C2CB8"
				,new byte[]{
				(byte)0xB8 ,0x00 ,0x63 ,0x03 ,(byte)0xF8 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xEC ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xF8 ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xEC ,0x5B ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xCB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,(byte)0xB9 ,0x00 ,0x00 ,0x00 ,(byte)0xB1 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D5A58"
				,"8C2CD0"
				,new byte[]{
				(byte)0xB9 ,0x00 ,0x63 ,0x03 ,(byte)0xEC ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE0 ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xF8 ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xE0 ,0x5B ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xCB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,(byte)0xBA ,0x00 ,0x00 ,0x00 ,(byte)0xB2 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D5AC0"
				,"8C2CE8"
				,new byte[]{
				(byte)0xBA ,0x00 ,0x63 ,0x03 ,(byte)0xE0 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(2).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x58 ,0x69 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x58 ,0x69 ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,(byte)0xB7 ,0x00 ,0x00 ,0x00 ,(byte)0xAF ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D6878"
				,"8C2C58"
				,new byte[]{
				(byte)0xB7 ,0x00 ,0x63 ,0x03 ,0x28 ,0x5C ,(byte)0x8C ,0x00 }));

				data.get(3).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x80 ,0x22 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x80 ,0x22 ,(byte)0x8D ,0x00 ,0x20 ,0x38 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x39 ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x9F ,0x00 ,0x00 ,0x00 ,(byte)0xA3 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x16 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x44 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D3C38"
				,"8C2D30"
				,new byte[]{
				(byte)0x9F ,0x00 ,0x61 ,0x03 ,(byte)0xBC ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(3).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x64 ,0x3D ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x64 ,0x3D ,(byte)0x8D ,0x00 ,0x38 ,0x38 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x80 ,0x39 ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x9E ,0x00 ,0x00 ,0x00 ,(byte)0xA2 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x19 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D3BD0"
				,"8C2D18"
				,new byte[]{
				(byte)0x9E ,0x00 ,0x61 ,0x03 ,(byte)0xC8 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(3).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x3D ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x70 ,0x3D ,(byte)0x8D ,0x00 ,0x50 ,0x38 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,(byte)0xA8 ,(byte)0x95 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x9D ,0x00 ,0x00 ,0x00 ,(byte)0xA1 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x19 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D3B68"
				,"8C2D00"
				,new byte[]{
				(byte)0x9D ,0x00 ,0x61 ,0x03 ,(byte)0xD4 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(3).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x1C ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x3A ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xBD ,0x00 ,0x00 ,0x00 ,(byte)0xA4 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x30 ,0x41 ,0x00 ,0x00 ,(byte)0x88 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D3B00"
				,"8C2D60"
				,new byte[]{
				(byte)0xBD ,0x00 ,0x61 ,0x03 ,(byte)0x9C ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(3).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x90 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x90 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7C ,0x3A ,(byte)0x8D ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x00 ,0x00 ,0x00 ,0x77 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x30 ,0x41 ,0x00 ,0x00 ,(byte)0x88 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D3A98"
				,"8C2D48"
				,new byte[]{
				(byte)0xA0 ,0x00 ,0x61 ,0x03 ,(byte)0xA8 ,0x5B ,(byte)0x8C ,0x00 }));

				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x7C ,(byte)0x84 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x7C ,(byte)0x84 ,(byte)0x8D ,0x00 ,(byte)0xF0 ,0x76 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x38 ,(byte)0xEA ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA1 ,0x00 ,0x00 ,0x00 ,(byte)0xB3 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2D ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D8338"
				,"8C2DD8"
				,new byte[]{
				(byte)0xA1 ,0x00 ,0x62 ,0x03 ,0x6C ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,(byte)0x85 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x34 ,(byte)0x85 ,(byte)0x8D ,0x00 ,0x70 ,0x76 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,(byte)0xEB ,(byte)0x95 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA3 ,0x00 ,0x00 ,0x00 ,(byte)0xB5 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1E ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D82D0"
				,"8C2E50"
				,new byte[]{
				(byte)0xA3 ,0x00 ,0x62 ,0x03 ,0x2C ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x6C ,(byte)0x84 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x6C ,(byte)0x84 ,(byte)0x8D ,0x00 ,(byte)0xD4 ,0x76 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,(byte)0xEA ,(byte)0x95 ,0x00 ,0x30 ,0x7D ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA2 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xAA ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D8268"
				,"8C2E38"
				,new byte[]{
				(byte)0xA2 ,0x00 ,0x62 ,0x03 ,0x34 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x40 ,(byte)0x85 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x40 ,(byte)0x85 ,(byte)0x8D ,0x00 ,0x58 ,0x76 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,(byte)0xEB ,(byte)0x95 ,0x00 ,(byte)0xF8 ,0x7D ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA4 ,0x00 ,0x00 ,0x00 ,(byte)0xB6 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x16 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D8200"
				,"8C2D78"
				,new byte[]{
				(byte)0xA4 ,0x00 ,0x62 ,0x03 ,(byte)0x94 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x4C ,(byte)0x85 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x4C ,(byte)0x85 ,(byte)0x8D ,0x00 ,(byte)0x84 ,0x76 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,(byte)0xED ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xAC ,0x00 ,0x00 ,0x00 ,(byte)0xBE ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0x90 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D8198"
				,"8C2E80"
				,new byte[]{
				(byte)0xAC ,0x00 ,0x62 ,0x03 ,0x14 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x58 ,(byte)0x85 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x58 ,(byte)0x85 ,(byte)0x8D ,0x00 ,(byte)0x98 ,0x76 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC0 ,0x7C ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xAB ,0x00 ,0x00 ,0x00 ,(byte)0xBD ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x17 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x40 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D8130"
				,"8C2D90"
				,new byte[]{
				(byte)0xAB ,0x00 ,0x62 ,0x03 ,(byte)0x88 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x64 ,(byte)0x85 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0x85 ,(byte)0x8D ,0x00 ,(byte)0xAC ,0x76 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x7C ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xAA ,0x00 ,0x00 ,0x00 ,(byte)0xBC ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x19 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,0x68 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D80C8"
				,"8C2E68"
				,new byte[]{
				(byte)0xAA ,0x00 ,0x62 ,0x03 ,0x20 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,(byte)0x85 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x70 ,(byte)0x85 ,(byte)0x8D ,0x00 ,(byte)0xC0 ,0x76 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE0 ,0x7B ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA9 ,0x00 ,0x00 ,0x00 ,(byte)0xBB ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D8060"
				,"8C2E08"
				,new byte[]{
				(byte)0xA9 ,0x00 ,0x62 ,0x03 ,0x50 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,(byte)0x84 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x94 ,(byte)0x84 ,(byte)0x8D ,0x00 ,0x30 ,0x76 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x68 ,(byte)0xEC ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA6 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xB8 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D7FF8"
				,"8C2E20"
				,new byte[]{
				(byte)0xA6 ,0x00 ,0x62 ,0x03 ,0x44 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,(byte)0x84 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x88 ,(byte)0x84 ,(byte)0x8D ,0x00 ,0x04 ,0x76 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,(byte)0xED ,(byte)0x95 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,0x00 ,0x00 ,0x00 ,(byte)0xBA ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D7F90"
				,"8C2DF0"
				,new byte[]{
				(byte)0xA8 ,0x00 ,0x62 ,0x03 ,0x60 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,(byte)0x84 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xA0 ,(byte)0x84 ,(byte)0x8D ,0x00 ,0x44 ,0x76 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF8 ,(byte)0xEB ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA5 ,0x00 ,0x00 ,0x00 ,(byte)0xB7 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D7F28"
				,"8C2DC0"
				,new byte[]{
				(byte)0xA5 ,0x00 ,0x62 ,0x03 ,0x74 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(4).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x64 ,(byte)0x84 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0x84 ,(byte)0x8D ,0x00 ,0x1C ,0x76 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,(byte)0xEC ,(byte)0x95 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA7 ,0x00 ,0x00 ,0x00 ,(byte)0xB9 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x19 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0xB0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D7EC0"
				,"8C2DA8"
				,new byte[]{
				(byte)0xA7 ,0x00 ,0x62 ,0x03 ,(byte)0x80 ,0x5B ,(byte)0x8C ,0x00 }));

				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x58 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x58 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x74 ,(byte)0xA8 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x06 ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xC4 ,0x00 ,0x00 ,0x00 ,(byte)0xBF ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xA6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DB298"
				,"8C30C0"
				,new byte[]{
				(byte)0xC4 ,0x00 ,0x65 ,0x03 ,(byte)0x9C ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x2C ,(byte)0xA0 ,(byte)0x8D ,0x00 ,(byte)0xE8 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x09 ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xCB ,0x00 ,0x00 ,0x00 ,(byte)0xC6 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2D ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DB230"
				,"8C30A8"
				,new byte[]{
				(byte)0xCB ,0x00 ,0x65 ,0x03 ,(byte)0xAC ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x3C ,(byte)0xA0 ,(byte)0x8D ,0x00 ,(byte)0xFC ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,0x08 ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xCA ,0x00 ,0x00 ,0x00 ,(byte)0xC5 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x26 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xAA ,0x42 ,0x00 ,0x00 ,0x30 ,0x41 ,0x00 ,0x00 ,0x44 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DB1C8"
				,"8C3090"
				,new byte[]{
				(byte)0xCA ,0x00 ,0x65 ,0x03 ,(byte)0xB8 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x24 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x10 ,(byte)0xA8 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x68 ,0x08 ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xC9 ,0x00 ,0x00 ,0x00 ,(byte)0xC4 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x29 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DB160"
				,"8C3078"
				,new byte[]{
				(byte)0xC9 ,0x00 ,0x65 ,0x03 ,(byte)0xC4 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x4C ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x24 ,(byte)0xA8 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x08 ,(byte)0x96 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,0x00 ,0x00 ,0x00 ,(byte)0xC3 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x25 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,0x2C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DB0F8"
				,"8C3060"
				,new byte[]{
				(byte)0xC8 ,0x00 ,0x65 ,0x03 ,(byte)0xD0 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x24 ,0x5C ,(byte)0x8D ,0x00 ,0x38 ,(byte)0xA8 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x07 ,(byte)0x96 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xC7 ,0x00 ,0x00 ,0x00 ,(byte)0xC2 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,0x7C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DB090"
				,"8C3048"
				,new byte[]{
				(byte)0xC7 ,0x00 ,0x65 ,0x03 ,0x04 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x78 ,(byte)0x9F ,(byte)0x8D ,0x00 ,0x4C ,(byte)0xA8 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x07 ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xC6 ,0x00 ,0x00 ,0x00 ,(byte)0xC1 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DB028"
				,"8C3030"
				,new byte[]{
				(byte)0xC6 ,0x00 ,0x65 ,0x03 ,0x10 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x08 ,0x5C ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xA8 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x06 ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xC5 ,0x00 ,0x00 ,0x00 ,(byte)0xC0 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x22 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x40 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAFC0"
				,"8C3018"
				,new byte[]{
				(byte)0xC5 ,0x00 ,0x65 ,0x03 ,0x1C ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xB4 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x04 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x44 ,0x0A ,(byte)0x96 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xCD ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAC80"
				,"8C2F40"
				,new byte[]{
				(byte)0xCD ,0x00 ,0x65 ,0x03 ,(byte)0xFC ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,(byte)0xB3 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xA8 ,(byte)0xB3 ,(byte)0x8D ,0x00 ,(byte)0xD4 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x80 ,0x09 ,(byte)0x96 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xCC ,0x00 ,0x00 ,0x00 ,(byte)0xC7 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,0x50 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAC18"
				,"8C2F28"
				,new byte[]{
				(byte)0xCC ,0x00 ,0x65 ,0x03 ,0x08 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xAC ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xAC ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x48 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xCC ,0x0B ,(byte)0x96 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xD1 ,0x00 ,0x00 ,0x00 ,(byte)0xD6 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DABB0"
				,"8C2FA0"
				,new byte[]{
				(byte)0xD1 ,0x00 ,0x65 ,0x03 ,(byte)0xDC ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x7C ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x7C ,0x5C ,(byte)0x8D ,0x00 ,(byte)0x80 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,0x0B ,(byte)0x96 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xAD ,0x00 ,0x00 ,0x00 ,(byte)0xCD ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x22 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAAE0"
				,"8C2EC8"
				,new byte[]{
				(byte)0xAD ,0x00 ,0x65 ,0x03 ,(byte)0x8C ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x70 ,0x5C ,(byte)0x8D ,0x00 ,0x6C ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,0x0B ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xAE ,0x00 ,0x00 ,0x00 ,(byte)0xCC ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAA78"
				,"8C2EE0"
				,new byte[]{
				(byte)0xAE ,0x00 ,0x65 ,0x03 ,(byte)0x80 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x1C ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0xD4 ,(byte)0xA6 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE4 ,0x0C ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xBD ,0x00 ,0x00 ,0x00 ,(byte)0xD4 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x36 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DA9A8"
				,"8C2E98"
				,new byte[]{
				(byte)0xBD ,0x00 ,0x65 ,0x03 ,(byte)0x9C ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x48 ,0x5C ,(byte)0x8D ,0x00 ,0x5C ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xD6 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,(byte)0xA9 ,(byte)0x8D ,0x00 ,0x18 ,0x5C ,(byte)0x8E ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,(byte)0xB1 ,0x00 ,0x00 ,0x00 ,(byte)0xCE ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x00 }
				,"008DAB48"
				,"8C2EF8"
				,new byte[]{
				(byte)0xB1 ,0x00 ,0x65 ,0x03 ,0x58 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xFC ,(byte)0x9F ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xFC ,(byte)0x9F ,(byte)0x8D ,0x00 ,(byte)0x94 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xAC ,0x0C ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x95 ,0x00 ,0x00 ,0x00 ,(byte)0xD3 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,(byte)0xA4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAF58"
				,"8C3000"
				,new byte[]{
				(byte)0x95 ,0x00 ,0x65 ,0x03 ,(byte)0xF0 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x08 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,(byte)0xA4 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x0C ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,0x00 ,0x00 ,0x00 ,(byte)0xD2 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0x9C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAEF0"
				,"8C2FE8"
				,new byte[]{
				(byte)0x94 ,0x00 ,0x65 ,0x03 ,(byte)0xFC ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x14 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,(byte)0xB4 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3C ,0x0C ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x93 ,0x00 ,0x00 ,0x00 ,(byte)0xD1 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0x90 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAE88"
				,"8C2FD0"
				,new byte[]{
				(byte)0x93 ,0x00 ,0x65 ,0x03 ,0x08 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x20 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,(byte)0xC4 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x04 ,0x0C ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x92 ,0x00 ,0x00 ,0x00 ,(byte)0xD0 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,0x14 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAE20"
				,"8C2FB8"
				,new byte[]{
				(byte)0x92 ,0x00 ,0x65 ,0x03 ,0x14 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xDC ,(byte)0x9F ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xDC ,(byte)0x9F ,(byte)0x8D ,0x00 ,0x18 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,0x0B ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0xD0 ,0x00 ,0x00 ,0x00 ,(byte)0xCB ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DADB8"
				,"8C2F88"
				,new byte[]{
				(byte)0xD0 ,0x00 ,0x65 ,0x03 ,(byte)0xE4 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE4 ,(byte)0x9F ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xE4 ,(byte)0x9F ,(byte)0x8D ,0x00 ,0x28 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xEC ,0x0A ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0xCF ,0x00 ,0x00 ,0x00 ,(byte)0xCA ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xC8 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAD50"
				,"8C2F70"
				,new byte[]{
				(byte)0xCF ,0x00 ,0x65 ,0x03 ,(byte)0xEC ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xEC ,(byte)0x9F ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xEC ,(byte)0x9F ,(byte)0x8D ,0x00 ,0x38 ,(byte)0xA7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x0A ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0xCE ,0x00 ,0x00 ,0x00 ,(byte)0xC9 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x15 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x40 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DACE8"
				,"8C2F58"
				,new byte[]{
				(byte)0xCE ,0x00 ,0x65 ,0x03 ,(byte)0xF4 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(5).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x90 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x90 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,0x0D ,(byte)0x96 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x00 ,0x00 ,0x00 ,(byte)0xD5 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x25 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x9E ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0xC6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DAA10"
				,"8C2EB0"
				,new byte[]{
				(byte)0xA0 ,0x00 ,0x65 ,0x03 ,(byte)0xA8 ,0x5B ,(byte)0x8C ,0x00 }));

				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x3C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x3C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,0x2C ,(byte)0xE9 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x24 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x00 ,0x00 ,0x00 ,(byte)0x9B ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x78 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DF048"
				,"8C3210"
				,new byte[]{
				(byte)0x88 ,0x00 ,0x67 ,0x03 ,(byte)0xC8 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x2C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x2C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,(byte)0xD8 ,(byte)0xE8 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x68 ,(byte)0xF1 ,(byte)0x8D ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x8B ,0x00 ,0x00 ,0x00 ,(byte)0x8E ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DEFE0"
				,"8C31F8"
				,new byte[]{
				(byte)0x8B ,0x00 ,0x67 ,0x03 ,(byte)0x98 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x1C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,(byte)0xBC ,(byte)0xE8 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF8 ,(byte)0xF1 ,(byte)0x8D ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x00 ,0x00 ,0x00 ,(byte)0x9C ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,0x70 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DEF78"
				,"8C31E0"
				,new byte[]{
				(byte)0x8C ,0x00 ,0x67 ,0x03 ,(byte)0xB8 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x0C ,(byte)0xE4 ,(byte)0x8D ,0x00 ,(byte)0xA0 ,(byte)0xE8 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x80 ,0x25 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x8F ,0x00 ,0x00 ,0x00 ,(byte)0x9D ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DEF10"
				,"8C31C8"
				,new byte[]{
				(byte)0x8F ,0x00 ,0x67 ,0x03 ,(byte)0xA8 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,(byte)0xC8 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x1C ,(byte)0xC8 ,(byte)0x8D ,0x00 ,0x10 ,(byte)0xE9 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x24 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x89 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DEEA8"
				,"8C31B0"
				,new byte[]{
				(byte)0x89 ,0x00 ,0x67 ,0x03 ,(byte)0x84 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE4 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xE4 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,(byte)0xF4 ,(byte)0xE8 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x25 ,(byte)0x96 ,0x00 ,0x38 ,(byte)0xEA ,(byte)0x8D ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x8A ,0x00 ,0x00 ,0x00 ,(byte)0x8D ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DEE40"
				,"8C3198"
				,new byte[]{
				(byte)0x8A ,0x00 ,0x67 ,0x03 ,0x50 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xF0 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xE8 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x26 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x90 ,0x00 ,0x00 ,0x00 ,(byte)0x91 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,0x44 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DEDD8"
				,"8C3180"
				,new byte[]{
				(byte)0x90 ,0x00 ,0x67 ,0x03 ,0x5C ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xD8 ,(byte)0xC7 ,(byte)0x8D ,0x00 ,0x68 ,(byte)0xE8 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x80 ,0x26 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x91 ,0x00 ,0x00 ,0x00 ,(byte)0x92 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x40 ,0x00 ,0x00 ,(byte)0xB0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DED70"
				,"8C3168"
				,new byte[]{
				(byte)0x91 ,0x00 ,0x67 ,0x03 ,0x44 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x20 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x4C ,(byte)0xE8 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x26 ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x92 ,0x00 ,0x00 ,0x00 ,(byte)0x93 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,0x14 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DED08"
				,"8C3150"
				,new byte[]{
				(byte)0x92 ,0x00 ,0x67 ,0x03 ,0x14 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x14 ,(byte)0xA0 ,(byte)0x8D ,0x00 ,0x38 ,(byte)0xE8 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x27 ,(byte)0x96 ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x93 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0x90 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DECA0"
				,"8C3138"
				,new byte[]{
				(byte)0x93 ,0x00 ,0x67 ,0x03 ,0x08 ,0x5D ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x5A ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x8C ,0x5A ,(byte)0x8C ,0x00 ,0x24 ,(byte)0xE8 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8D ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0x97 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x12 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0x84 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DEC38"
				,"8C3120"
				,new byte[]{
				(byte)0x97 ,0x00 ,0x67 ,0x03 ,(byte)0x8C ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE0 ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xF8 ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xE0 ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xEC ,(byte)0xE7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xCB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x40 ,0x28 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,(byte)0xBA ,0x00 ,0x00 ,0x00 ,(byte)0xB2 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DEBD0"
				,"8C3108"
				,new byte[]{
				(byte)0xBA ,0x00 ,0x67 ,0x03 ,(byte)0xE0 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xEC ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xF8 ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xEC ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xF4 ,(byte)0xE7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xCB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,(byte)0xF2 ,(byte)0x8D ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,(byte)0xB9 ,0x00 ,0x00 ,0x00 ,(byte)0xB1 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DEB68"
				,"8C30F0"
				,new byte[]{
				(byte)0xB9 ,0x00 ,0x67 ,0x03 ,(byte)0xEC ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(6).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xF8 ,0x5B ,(byte)0x8D ,0x00 ,0x18 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xFC ,(byte)0xE7 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xCB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD0 ,0x27 ,(byte)0x96 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x00 ,0x00 ,0x00 ,(byte)0xB0 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DEB00"
				,"8C30D8"
				,new byte[]{
				(byte)0xB8 ,0x00 ,0x67 ,0x03 ,(byte)0xF8 ,0x5B ,(byte)0x8C ,0x00 }));

				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x50 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xE8 ,0x5F ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x61 ,(byte)0x8D ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xB0 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D6320"
				,"8C32E8"
				,new byte[]{
				(byte)0xB0 ,0x00 ,0x66 ,0x03 ,0x60 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x70 ,0x5C ,(byte)0x8D ,0x00 ,0x08 ,0x60 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x61 ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xAE ,0x00 ,0x00 ,0x00 ,(byte)0xA6 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D6250"
				,"8C32B8"
				,new byte[]{
				(byte)0xAE ,0x00 ,0x66 ,0x03 ,(byte)0x80 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x7C ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x7C ,0x5C ,(byte)0x8D ,0x00 ,0x18 ,0x60 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,(byte)0xCC ,(byte)0x95 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xAD ,0x00 ,0x00 ,0x00 ,(byte)0xA5 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x22 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D61E8"
				,"8C32A0"
				,new byte[]{
				(byte)0xAD ,0x00 ,0x66 ,0x03 ,(byte)0x8C ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x40 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x40 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xD8 ,0x5F ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xD6 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x4C ,(byte)0xCE ,(byte)0x95 ,0x00 ,0x18 ,0x5C ,(byte)0x8E ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,(byte)0xB2 ,0x00 ,0x00 ,0x00 ,(byte)0xAA ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x00 }
				,"008D6388"
				,"8C3300"
				,new byte[]{
				(byte)0xB2 ,0x00 ,0x66 ,0x03 ,0x50 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x48 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xC4 ,0x5F ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xD6 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC0 ,(byte)0xCD ,(byte)0x95 ,0x00 ,0x18 ,0x5C ,(byte)0x8E ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,(byte)0xB1 ,0x00 ,0x00 ,0x00 ,(byte)0xA9 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x00 }
				,"008D6180"
				,"8C3288"
				,new byte[]{
				(byte)0xB1 ,0x00 ,0x66 ,0x03 ,0x58 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x5C ,0x5C ,(byte)0x8D ,0x00 ,(byte)0xF8 ,0x5F ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,(byte)0xCD ,(byte)0x95 ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0xAF ,0x00 ,0x00 ,0x00 ,(byte)0xA7 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D62B8"
				,"8C32D0"
				,new byte[]{
				(byte)0xAF ,0x00 ,0x66 ,0x03 ,0x6C ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x5C ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x30 ,0x5C ,(byte)0x8D ,0x00 ,(byte)0x9C ,0x5F ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC0 ,(byte)0xCE ,(byte)0x95 ,0x00 ,(byte)0xE0 ,0x5C ,(byte)0x8E ,0x00 ,0x09 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x00 ,0x00 ,0x00 ,(byte)0xAC ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x46 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D6458"
				,"8C3330"
				,new byte[]{
				(byte)0xB4 ,0x00 ,0x66 ,0x03 ,0x30 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD0 ,0x5B ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xD0 ,0x5B ,(byte)0x8D ,0x00 ,(byte)0xB0 ,0x5F ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x84 ,(byte)0xCE ,(byte)0x95 ,0x00 ,(byte)0xA8 ,0x5D ,(byte)0x8E ,0x00 ,0x09 ,0x00 ,0x00 ,0x00 ,(byte)0xB3 ,0x00 ,0x00 ,0x00 ,(byte)0xAB ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D63F0"
				,"8C3318"
				,new byte[]{
				(byte)0xB3 ,0x00 ,0x66 ,0x03 ,0x40 ,0x5C ,(byte)0x8C ,0x00 }));
				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x84 ,0x5A ,(byte)0x8C ,0x00 ,0x48 ,0x66 ,(byte)0x8D ,0x00 ,(byte)0x84 ,0x5A ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xD0 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,(byte)0xD2 ,0x00 ,0x00 ,0x00 ,(byte)0xD7 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D64C0"
				,"8C3348"
				,new byte[]{
				(byte)0xD2 ,0x00 ,0x66 ,0x03 ,(byte)0x84 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x74 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xC0 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x08 ,0x01 ,0x00 ,0x00 ,0x0A ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D6528"
				,"8C3360"
				,new byte[]{
				0x08 ,0x01 ,0x66 ,0x03 ,0x74 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(7).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x58 ,0x69 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x58 ,0x69 ,(byte)0x8D ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,(byte)0xB7 ,0x00 ,0x00 ,0x00 ,(byte)0xAF ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D6878"
				,"8C3228"
				,new byte[]{
				(byte)0xB7 ,0x00 ,0x66 ,0x03 ,0x28 ,0x5C ,(byte)0x8C ,0x00 }));

				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xA0 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x34 ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x40 ,0x6F ,(byte)0x95 ,0x00 ,0x48 ,(byte)0xFF ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x05 ,0x01 ,0x00 ,0x00 ,0x06 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEE90"
				,"8C35D0"
				,new byte[]{
				0x05 ,0x01 ,0x6C ,0x03 ,0x4C ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xB0 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x6C ,(byte)0xE5 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x6F ,(byte)0x95 ,0x00 ,0x48 ,(byte)0xFF ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x04 ,0x01 ,0x00 ,0x00 ,0x05 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x80 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEE28"
				,"8C35B8"
				,new byte[]{
				0x04 ,0x01 ,0x6C ,0x03 ,0x58 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x88 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x48 ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD0 ,0x6E ,(byte)0x95 ,0x00 ,0x48 ,(byte)0xFF ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x03 ,0x01 ,0x00 ,0x00 ,0x04 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x40 ,0x00 ,0x00 ,0x4C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEDC0"
				,"8C35A0"
				,new byte[]{
				0x03 ,0x01 ,0x6C ,0x03 ,0x6C ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xD8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x6E ,(byte)0x95 ,0x00 ,0x48 ,(byte)0xFF ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x02 ,0x01 ,0x00 ,0x00 ,0x03 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0xAE ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CED58"
				,"8C3588"
				,new byte[]{
				0x02 ,0x01 ,0x6C ,0x03 ,0x7C ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xB8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x70 ,(byte)0xCA ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x6E ,(byte)0x95 ,0x00 ,0x48 ,(byte)0xFF ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0x00 ,0x00 ,0x02 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3C ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0x86 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CECF0"
				,"8C3570"
				,new byte[]{
				0x01 ,0x01 ,0x6C ,0x03 ,(byte)0x90 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xEC ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xEC ,(byte)0xDC ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xCA ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x6E ,(byte)0x95 ,0x00 ,0x48 ,(byte)0xFF ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x01 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x40 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEC88"
				,"8C3558"
				,new byte[]{
				0x00 ,0x01 ,0x6C ,0x03 ,(byte)0xA0 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xC8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,(byte)0x80 ,(byte)0xE5 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x6D ,(byte)0x95 ,0x00 ,0x48 ,(byte)0xFF ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xFF ,0x00 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x3C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEC20"
				,"8C3540"
				,new byte[]{
				(byte)0xFF ,0x00 ,0x6C ,0x03 ,(byte)0xB4 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x0C ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0x98 ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x6D ,(byte)0x95 ,0x00 ,0x48 ,(byte)0xFF ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xFE ,0x00 ,0x00 ,0x00 ,(byte)0xFF ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEBB8"
				,"8C3528"
				,new byte[]{
				(byte)0xFE ,0x00 ,0x6C ,0x03 ,(byte)0xC4 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xC4 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xD0 ,(byte)0xE5 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x6C ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF9 ,0x00 ,0x00 ,0x00 ,(byte)0xFA ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x3C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEB50"
				,"8C34B0"
				,new byte[]{
				(byte)0xF9 ,0x00 ,0x6C ,0x03 ,0x00 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xCC ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE4 ,(byte)0xE5 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x68 ,0x6C ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF8 ,0x00 ,0x00 ,0x00 ,(byte)0xF9 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x17 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x28 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEAE8"
				,"8C3498"
				,new byte[]{
				(byte)0xF8 ,0x00 ,0x6C ,0x03 ,0x08 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xD4 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xEC ,(byte)0xCA ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC0 ,0x6B ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF5 ,0x00 ,0x00 ,0x00 ,(byte)0xF6 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x80 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEA80"
				,"8C3450"
				,new byte[]{
				(byte)0xF5 ,0x00 ,0x6C ,0x03 ,0x18 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xDC ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x14 ,(byte)0xCB ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x6B ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF4 ,0x00 ,0x00 ,0x00 ,(byte)0xF5 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x44 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x3C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEA18"
				,"8C3438"
				,new byte[]{
				(byte)0xF4 ,0x00 ,0x6C ,0x03 ,0x20 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xE4 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x08 ,(byte)0xE6 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x6B ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF3 ,0x00 ,0x00 ,0x00 ,(byte)0xF4 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,0x50 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CE9B0"
				,"8C3420"
				,new byte[]{
				(byte)0xF3 ,0x00 ,0x6C ,0x03 ,0x28 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x4C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x00 ,(byte)0xCB ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,0x6B ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF2 ,0x00 ,0x00 ,0x00 ,(byte)0xF3 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x22 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0x86 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CE948"
				,"8C3408"
				,new byte[]{
				(byte)0xF2 ,0x00 ,0x6C ,0x03 ,0x30 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0xF8 ,(byte)0xE5 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE0 ,0x6A ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF1 ,0x00 ,0x00 ,0x00 ,(byte)0xF2 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xA4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CE8E0"
				,"8C33F0"
				,new byte[]{
				(byte)0xF1 ,0x00 ,0x6C ,0x03 ,0x38 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x5C ,0x5A ,(byte)0x8C ,0x00 ,0x48 ,(byte)0xCB ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,0x6A ,(byte)0x95 ,0x00 ,(byte)0xB8 ,(byte)0xFD ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x00 ,0x00 ,0x00 ,(byte)0xF1 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,0x70 ,0x41 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CE878"
				,"8C33D8"
				,new byte[]{
				(byte)0xF0 ,0x00 ,0x6C ,0x03 ,0x40 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5A ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x50 ,0x5A ,(byte)0x8C ,0x00 ,0x38 ,(byte)0xCB ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x6A ,(byte)0x95 ,0x00 ,(byte)0xB8 ,(byte)0xFD ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xEF ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x26 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x86 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0x88 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CE810"
				,"8C33C0"
				,new byte[]{
				(byte)0xEF ,0x00 ,0x6C ,0x03 ,0x50 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x28 ,(byte)0xCB ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x38 ,0x6A ,(byte)0x95 ,0x00 ,(byte)0xB8 ,(byte)0xFD ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xEE ,0x00 ,0x00 ,0x00 ,(byte)0xEF ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0x8A ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CE7A8"
				,"8C33A8"
				,new byte[]{
				(byte)0xEE ,0x00 ,0x6C ,0x03 ,0x5C ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x6C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x6C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x58 ,(byte)0xCB ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x6A ,(byte)0x95 ,0x00 ,(byte)0xB8 ,(byte)0xFD ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xED ,0x00 ,0x00 ,0x00 ,(byte)0xEE ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x29 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x9A ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CE740"
				,"8C3390"
				,new byte[]{
				(byte)0xED ,0x00 ,0x6C ,0x03 ,0x6C ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x24 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x68 ,(byte)0xCB ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,0x69 ,(byte)0x95 ,0x00 ,(byte)0xB8 ,(byte)0xFD ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xEC ,0x00 ,0x00 ,0x00 ,(byte)0xED ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x25 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB0 ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,(byte)0xA4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CE6D8"
				,"8C3378"
				,new byte[]{
				(byte)0xEC ,0x00 ,0x6C ,0x03 ,(byte)0xC4 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xAC ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xAC ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x54 ,(byte)0xE5 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xD6 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB0 ,0x6F ,(byte)0x95 ,0x00 ,0x18 ,0x5C ,(byte)0x8E ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x07 ,0x01 ,0x00 ,0x00 ,0x08 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x00 }
				,"008CEF60"
				,"8C3600"
				,new byte[]{
				0x07 ,0x01 ,0x6C ,0x03 ,0x30 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x3C ,0x59 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x3C ,0x59 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE5 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xD6 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x78 ,0x6F ,(byte)0x95 ,0x00 ,0x18 ,0x5C ,(byte)0x8E ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x06 ,0x01 ,0x00 ,0x00 ,0x07 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0x9C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x00 }
				,"008CEEF8"
				,"8C35E8"
				,new byte[]{
				0x06 ,0x01 ,0x6C ,0x03 ,0x3C ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x90 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x90 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x19 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x00 ,0x00 ,0x00 ,0x09 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2D ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x9E ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0xC6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CEFC8"
				,"8C3618"
				,new byte[]{
				(byte)0xA0 ,0x00 ,0x6C ,0x03 ,(byte)0xA8 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x74 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xC0 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x08 ,0x01 ,0x00 ,0x00 ,0x0A ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x21 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CF030"
				,"8C3630"
				,new byte[]{
				0x08 ,0x01 ,0x6C ,0x03 ,0x74 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x3C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x3C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xC0 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x09 ,0x01 ,0x00 ,0x00 ,0x0B ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x22 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CF098"
				,"8C3648"
				,new byte[]{
				0x09 ,0x01 ,0x6C ,0x03 ,0x20 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(8).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x4C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x4C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xBA ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x0A ,0x01 ,0x00 ,0x00 ,0x0C ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CF100"
				,"8C3660"
				,new byte[]{
				0x0A ,0x01 ,0x6C ,0x03 ,0x10 ,0x59 ,(byte)0x8C ,0x00 }));

				data.get(9).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x0A ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x70 ,0x0A ,(byte)0x8D ,0x00 ,0x44 ,0x1C ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x1E ,(byte)0x8D ,0x00 ,0x70 ,0x1E ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xC3 ,0x00 ,0x00 ,0x00 ,(byte)0xDA ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D2140"
				,"8C36F0"
				,new byte[]{
				(byte)0xC3 ,0x00 ,0x68 ,0x03 ,(byte)0xE0 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(9).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x80 ,0x0A ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x80 ,0x0A ,(byte)0x8D ,0x00 ,0x58 ,0x1C ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,0x1E ,(byte)0x8D ,0x00 ,0x70 ,0x1E ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xC2 ,0x00 ,0x00 ,0x00 ,(byte)0xD9 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D20D8"
				,"8C36D8"
				,new byte[]{
				(byte)0xC2 ,0x00 ,0x68 ,0x03 ,(byte)0xF0 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(9).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x90 ,0x0A ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x90 ,0x0A ,(byte)0x8D ,0x00 ,0x6C ,0x1C ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,0x1E ,(byte)0x8D ,0x00 ,0x70 ,0x1E ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xC1 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x16 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xAA ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D2070"
				,"8C36C0"
				,new byte[]{
				(byte)0xC1 ,0x00 ,0x68 ,0x03 ,0x00 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(9).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x80 ,0x22 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x80 ,0x22 ,(byte)0x8D ,0x00 ,0x34 ,0x1C ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x9F ,0x00 ,0x00 ,0x00 ,(byte)0xDB ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x16 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D2008"
				,"8C36A8"
				,new byte[]{
				(byte)0x9F ,0x00 ,0x68 ,0x03 ,(byte)0xBC ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(9).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x90 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x90 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x00 ,0x00 ,0x00 ,(byte)0xD5 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x30 ,0x41 ,0x00 ,0x00 ,(byte)0x88 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D1FA0"
				,"8C3690"
				,new byte[]{
				(byte)0xA0 ,0x00 ,0x68 ,0x03 ,(byte)0xA8 ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(9).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x1C ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xBD ,0x00 ,0x00 ,0x00 ,(byte)0xD4 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x30 ,0x41 ,0x00 ,0x00 ,(byte)0x88 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D1F38"
				,"8C3678"
				,new byte[]{
				(byte)0xBD ,0x00 ,0x68 ,0x03 ,(byte)0x9C ,0x5B ,(byte)0x8C ,0x00 }));

				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x14 ,0x04 ,(byte)0x8E ,0x00 ,0x50 ,0x0C ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,(byte)0xFC ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xE8 ,0x00 ,0x00 ,0x00 ,(byte)0xE9 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E0248"
				,"8C3840"
				,new byte[]{
				(byte)0xE8 ,0x00 ,0x6A ,0x03 ,0x50 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x1C ,0x04 ,(byte)0x8E ,0x00 ,0x60 ,0x0C ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,(byte)0xFC ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xE7 ,0x00 ,0x00 ,0x00 ,(byte)0xE8 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,0x41 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E01E0"
				,"8C3828"
				,new byte[]{
				(byte)0xE7 ,0x00 ,0x6A ,0x03 ,0x58 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x28 ,0x04 ,(byte)0x8E ,0x00 ,0x74 ,0x0C ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,(byte)0xFC ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xE6 ,0x00 ,0x00 ,0x00 ,(byte)0xE7 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0xC8 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E0178"
				,"8C3810"
				,new byte[]{
				(byte)0xE6 ,0x00 ,0x6A ,0x03 ,0x58 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x34 ,0x04 ,(byte)0x8E ,0x00 ,(byte)0x88 ,0x0C ,(byte)0x8E ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x38 ,(byte)0xFC ,(byte)0x8D ,0x00 ,(byte)0xA8 ,0x5D ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xE5 ,0x00 ,0x00 ,0x00 ,(byte)0xE6 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,(byte)0xC4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E0110"
				,"8C37F8"
				,new byte[]{
				(byte)0xE5 ,0x00 ,0x6A ,0x03 ,0x64 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x40 ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x40 ,0x04 ,(byte)0x8E ,0x00 ,(byte)0xA0 ,0x0C ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,(byte)0xFC ,(byte)0x8D ,0x00 ,(byte)0xE0 ,0x5C ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xE4 ,0x00 ,0x00 ,0x00 ,(byte)0xE5 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x70 ,0x41 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E00A8"
				,"8C37E0"
				,new byte[]{
				(byte)0xE4 ,0x00 ,0x6A ,0x03 ,0x70 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,(byte)0xF7 ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xB4 ,(byte)0xF7 ,(byte)0x8D ,0x00 ,(byte)0xB8 ,0x0C ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xFC ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xE3 ,0x00 ,0x00 ,0x00 ,(byte)0xE4 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E0040"
				,"8C37C8"
				,new byte[]{
				(byte)0xE3 ,0x00 ,0x6A ,0x03 ,0x7C ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x74 ,0x04 ,(byte)0x8E ,0x00 ,0x68 ,0x0D ,(byte)0x8E ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xAC ,(byte)0xFB ,(byte)0x8D ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xE0 ,0x00 ,0x00 ,0x00 ,(byte)0xDF ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DFE38"
				,"8C3750"
				,new byte[]{
				(byte)0xE0 ,0x00 ,0x6A ,0x03 ,(byte)0xB0 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x04 ,(byte)0x8E ,0x00 ,(byte)0x84 ,0x0D ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x58 ,(byte)0xFB ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xDD ,0x00 ,0x00 ,0x00 ,(byte)0xDE ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DFDD0"
				,"8C3738"
				,new byte[]{
				(byte)0xDD ,0x00 ,0x6A ,0x03 ,(byte)0xC4 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x90 ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x90 ,0x04 ,(byte)0x8E ,0x00 ,(byte)0x98 ,0x0D ,(byte)0x8E ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3C ,(byte)0xFB ,(byte)0x8D ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xDC ,0x00 ,0x00 ,0x00 ,(byte)0xDD ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DFD68"
				,"8C3720"
				,new byte[]{
				(byte)0xDC ,0x00 ,0x6A ,0x03 ,(byte)0xCC ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x7C ,0x03 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x7C ,0x03 ,(byte)0x8E ,0x00 ,(byte)0xA8 ,0x0D ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,(byte)0xFB ,(byte)0x8D ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xDB ,0x00 ,0x00 ,0x00 ,(byte)0xDC ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x40 ,0x00 ,0x00 ,(byte)0xC6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DFD00"
				,"8C3708"
				,new byte[]{
				(byte)0xDB ,0x00 ,0x6A ,0x03 ,(byte)0xD4 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x4C ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x4C ,0x04 ,(byte)0x8E ,0x00 ,0x08 ,0x0D ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xD6 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE4 ,(byte)0xFB ,(byte)0x8D ,0x00 ,0x18 ,0x5C ,(byte)0x8E ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,(byte)0xE2 ,0x00 ,0x00 ,0x00 ,(byte)0xE3 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x00 }
				,"008DFFD8"
				,"8C37B0"
				,new byte[]{
				(byte)0xE2 ,0x00 ,0x6A ,0x03 ,(byte)0x88 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x54 ,0x04 ,(byte)0x8E ,0x00 ,0x20 ,0x0D ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xD6 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x90 ,(byte)0xFB ,(byte)0x8D ,0x00 ,0x18 ,0x5C ,(byte)0x8E ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,(byte)0xDF ,0x00 ,0x00 ,0x00 ,(byte)0xE2 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x00 }
				,"008DFF70"
				,"8C3798"
				,new byte[]{
				(byte)0xDF ,0x00 ,0x6A ,0x03 ,(byte)0x90 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x5C ,0x04 ,(byte)0x8E ,0x00 ,0x38 ,0x0D ,(byte)0x8E ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,(byte)0xFB ,(byte)0x8D ,0x00 ,0x70 ,0x5E ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0xE1 ,0x00 ,0x00 ,0x00 ,(byte)0xE1 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DFF08"
				,"8C3780"
				,new byte[]{
				(byte)0xE1 ,0x00 ,0x6A ,0x03 ,(byte)0x98 ,0x58 ,(byte)0x8C ,0x00 }));

				data.get(10).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x68 ,0x04 ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x68 ,0x04 ,(byte)0x8E ,0x00 ,0x54 ,0x0D ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,(byte)0xFB ,(byte)0x8D ,0x00 ,0x38 ,0x5F ,(byte)0x8E ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,(byte)0xDE ,0x00 ,0x00 ,0x00 ,(byte)0xE0 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x40 ,0x40 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008DFEA0"
				,"8C3768"
				,new byte[]{
				(byte)0xDE ,0x00 ,0x6A ,0x03 ,(byte)0xA4 ,0x58 ,(byte)0x8C ,0x00 }));

				data.get(11).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,(byte)0x9E ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x3C ,(byte)0x9E ,(byte)0x8D ,0x00 ,0x58 ,(byte)0x95 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x02 ,(byte)0x96 ,0x00 ,(byte)0xF8 ,(byte)0x96 ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x11 ,0x01 ,0x00 ,0x00 ,0x13 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,(byte)0xB8 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D9B68"
				,"8C3930"
				,new byte[]{
				0x11 ,0x01 ,0x6D ,0x03 ,0x2C ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(11).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,(byte)0x9E ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x28 ,(byte)0x9E ,(byte)0x8D ,0x00 ,0x68 ,(byte)0x95 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x01 ,(byte)0x96 ,0x00 ,(byte)0xF8 ,(byte)0x96 ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x10 ,0x01 ,0x00 ,0x00 ,0x12 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D9B00"
				,"8C3918"
				,new byte[]{
				0x10 ,0x01 ,0x6D ,0x03 ,0x40 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(11).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,(byte)0x9E ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x50 ,(byte)0x9E ,(byte)0x8D ,0x00 ,0x78 ,(byte)0x95 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x01 ,(byte)0x96 ,0x00 ,(byte)0xF8 ,(byte)0x96 ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0F ,0x01 ,0x00 ,0x00 ,0x11 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,0x6C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D9A98"
				,"8C3900"
				,new byte[]{
				0x0F ,0x01 ,0x6D ,0x03 ,0x40 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(11).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,(byte)0x9E ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0x9E ,(byte)0x8D ,0x00 ,(byte)0x88 ,(byte)0x95 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x01 ,(byte)0x96 ,0x00 ,(byte)0xF8 ,(byte)0x96 ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0E ,0x01 ,0x00 ,0x00 ,0x10 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0xBA ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D9A30"
				,"8C38E8"
				,new byte[]{
				0x0E ,0x01 ,0x6D ,0x03 ,0x2C ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(11).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,(byte)0x9E ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x78 ,(byte)0x9E ,(byte)0x8D ,0x00 ,(byte)0x98 ,(byte)0x95 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x01 ,(byte)0x96 ,0x00 ,(byte)0xF8 ,(byte)0x96 ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0D ,0x01 ,0x00 ,0x00 ,0x0F ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2C ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,0x40 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D99C8"
				,"8C38D0"
				,new byte[]{
				0x0D ,0x01 ,0x6D ,0x03 ,0x2C ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(11).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,(byte)0x9E ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x8C ,(byte)0x9E ,(byte)0x8D ,0x00 ,(byte)0xA8 ,(byte)0x95 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x00 ,(byte)0x96 ,0x00 ,(byte)0xF8 ,(byte)0x96 ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0C ,0x01 ,0x00 ,0x00 ,0x0E ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,(byte)0x80 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D9960"
				,"8C38B8"
				,new byte[]{
				0x0C ,0x01 ,0x6D ,0x03 ,0x2C ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(11).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,(byte)0x9E ,(byte)0x8D ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xA0 ,(byte)0x9E ,(byte)0x8D ,0x00 ,(byte)0xB8 ,(byte)0x95 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x00 ,(byte)0x96 ,0x00 ,(byte)0xF8 ,(byte)0x96 ,(byte)0x8D ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0B ,0x01 ,0x00 ,0x00 ,0x0D ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x9C ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,0x3C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D98F8"
				,"8C38A0"
				,new byte[]{
				0x0B ,0x01 ,0x6D ,0x03 ,0x40 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(11).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x4C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x4C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xC8 ,(byte)0x95 ,(byte)0x8D ,0x00 ,(byte)0xE0 ,(byte)0xBA ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x00 ,(byte)0x96 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x0A ,0x01 ,0x00 ,0x00 ,0x0C ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D9890"
				,"8C3888"
				,new byte[]{
				0x0A ,0x01 ,0x6D ,0x03 ,0x10 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(11).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x3C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x3C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xD8 ,(byte)0x95 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xC0 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,(byte)0x96 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x09 ,0x01 ,0x00 ,0x00 ,0x0B ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,(byte)0xC0 ,0x40 ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D9828"
				,"8C3870"
				,new byte[]{
				0x09 ,0x01 ,0x6D ,0x03 ,0x20 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(11).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x74 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,(byte)0xE8 ,(byte)0x95 ,(byte)0x8D ,0x00 ,0x60 ,(byte)0xC0 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,(byte)0xFF ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x08 ,0x01 ,0x00 ,0x00 ,0x0A ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008D97C0"
				,"8C3858"
				,new byte[]{
				0x08 ,0x01 ,0x6D ,0x03 ,0x74 ,0x5A ,(byte)0x8C ,0x00 }));

				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x0C ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0x88 ,(byte)0xB6 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x4C ,(byte)0xBA ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x23 ,0x01 ,0x00 ,0x00 ,0x25 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x42 ,0x00 ,0x00 ,(byte)0x88 ,0x41 ,0x00 ,0x00 ,0x50 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CC150"
				,"8C3AE0"
				,new byte[]{
				0x23 ,0x01 ,0x6E ,0x03 ,0x08 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x18 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0x98 ,(byte)0xB6 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,(byte)0xBA ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x22 ,0x01 ,0x00 ,0x00 ,0x24 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CC0E8"
				,"8C3AC8"
				,new byte[]{
				0x22 ,0x01 ,0x6E ,0x03 ,0x08 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x24 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0xA8 ,(byte)0xB6 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x14 ,(byte)0xBA ,(byte)0x8C ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x21 ,0x01 ,0x00 ,0x00 ,0x23 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,(byte)0xC0 ,0x40 ,0x00 ,0x00 ,0x78 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CC080"
				,"8C3AB0"
				,new byte[]{
				0x21 ,0x01 ,0x6E ,0x03 ,(byte)0xE4 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x34 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0xB8 ,(byte)0xB6 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF8 ,(byte)0xB9 ,(byte)0x8C ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x20 ,0x01 ,0x00 ,0x00 ,0x22 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1E ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,(byte)0x8A ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CC018"
				,"8C3A98"
				,new byte[]{
				0x20 ,0x01 ,0x6E ,0x03 ,(byte)0xE4 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x44 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0xC8 ,(byte)0xB6 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xDC ,(byte)0xB9 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x1F ,0x01 ,0x00 ,0x00 ,0x21 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x19 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x70 ,0x41 ,0x00 ,0x00 ,(byte)0x8A ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBFB0"
				,"8C3A80"
				,new byte[]{
				0x1F ,0x01 ,0x6E ,0x03 ,0x08 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x50 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0xD8 ,(byte)0xB6 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC0 ,(byte)0xB9 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x1E ,0x01 ,0x00 ,0x00 ,0x20 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x16 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA2 ,0x42 ,0x00 ,0x00 ,(byte)0xC0 ,0x40 ,0x00 ,0x00 ,(byte)0x9A ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBF48"
				,"8C3A68"
				,new byte[]{
				0x1E ,0x01 ,0x6E ,0x03 ,0x08 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xDC ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x28 ,(byte)0xB7 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA4 ,(byte)0xB9 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x18 ,0x01 ,0x00 ,0x00 ,0x1B ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1E ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xAA ,0x42 ,0x00 ,0x00 ,0x60 ,0x41 ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBEE0"
				,"8C39F0"
				,new byte[]{
				0x18 ,0x01 ,0x6E ,0x03 ,0x08 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x6C ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0xE8 ,(byte)0xB6 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,(byte)0xB9 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x1D ,0x01 ,0x00 ,0x00 ,0x1F ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x50 ,0x41 ,0x00 ,0x00 ,(byte)0x86 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBE78"
				,"8C3A50"
				,new byte[]{
				0x1D ,0x01 ,0x6E ,0x03 ,0x08 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x78 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0xF8 ,(byte)0xB6 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x6C ,(byte)0xB9 ,(byte)0x8C ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x1C ,0x01 ,0x00 ,0x00 ,0x1E ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x78 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0x80 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBE10"
				,"8C3A38"
				,new byte[]{
				0x1C ,0x01 ,0x6E ,0x03 ,(byte)0xE4 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x98 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x08 ,(byte)0xB7 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,(byte)0xB9 ,(byte)0x8C ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x1B ,0x01 ,0x00 ,0x00 ,0x1D ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x17 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,(byte)0xAE ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBDA8"
				,"8C3A20"
				,new byte[]{
				0x1B ,0x01 ,0x6E ,0x03 ,(byte)0xE4 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xA8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x18 ,(byte)0xB7 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,(byte)0xB9 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x1A ,0x01 ,0x00 ,0x00 ,0x1C ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x19 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x80 ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,0x6C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBD40"
				,"8C3A08"
				,new byte[]{
				0x1A ,0x01 ,0x6E ,0x03 ,0x08 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x88 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x38 ,(byte)0xB7 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x18 ,(byte)0xB9 ,(byte)0x8C ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x17 ,0x01 ,0x00 ,0x00 ,0x1A ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x9C ,0x42 ,0x00 ,0x00 ,(byte)0xC0 ,0x40 ,0x00 ,0x00 ,0x78 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBCD8"
				,"8C39D8"
				,new byte[]{
				0x17 ,0x01 ,0x6E ,0x03 ,(byte)0xE4 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xB4 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x68 ,(byte)0xB7 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xFC ,(byte)0xB8 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x15 ,0x01 ,0x00 ,0x00 ,0x17 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x27 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA2 ,0x42 ,0x00 ,0x00 ,0x30 ,0x41 ,0x00 ,0x00 ,(byte)0x94 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBC70"
				,"8C3990"
				,new byte[]{
				0x15 ,0x01 ,0x6E ,0x03 ,0x08 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xDC ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xDC ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x48 ,(byte)0xB7 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xE0 ,(byte)0xB8 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x16 ,0x01 ,0x00 ,0x00 ,0x19 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x22 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,(byte)0x86 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBBA0"
				,"8C39C0"
				,new byte[]{
				0x16 ,0x01 ,0x6E ,0x03 ,(byte)0xF4 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xE8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x78 ,(byte)0xB7 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC4 ,(byte)0xB8 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x14 ,0x01 ,0x00 ,0x00 ,0x16 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,(byte)0x80 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBB38"
				,"8C3978"
				,new byte[]{
				0x14 ,0x01 ,0x6E ,0x03 ,0x14 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xF8 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0x88 ,(byte)0xB7 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,(byte)0xB8 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x13 ,0x01 ,0x00 ,0x00 ,0x15 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x9A ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBAD0"
				,"8C3960"
				,new byte[]{
				0x13 ,0x01 ,0x6E ,0x03 ,0x14 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x6C ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x6C ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xA0 ,(byte)0xB7 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,(byte)0xB8 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x12 ,0x01 ,0x00 ,0x00 ,0x14 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA8 ,0x42 ,0x00 ,0x00 ,0x40 ,0x41 ,0x00 ,0x00 ,(byte)0x8E ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBA68"
				,"8C3948"
				,new byte[]{
				0x12 ,0x01 ,0x6E ,0x03 ,0x20 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(12).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD4 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0xC4 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,(byte)0xD4 ,(byte)0xC3 ,(byte)0x8C ,0x00 ,0x58 ,(byte)0xB7 ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xC5 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,(byte)0xB8 ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x15 ,0x00 ,0x00 ,0x00 ,0x19 ,0x01 ,0x00 ,0x00 ,0x18 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x33 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xAC ,0x42 ,0x00 ,0x00 ,(byte)0xC0 ,0x40 ,0x00 ,0x00 ,(byte)0x80 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CBC08"
				,"8C39A8"
				,new byte[]{
				0x19 ,0x01 ,0x6E ,0x03 ,0x00 ,0x58 ,(byte)0x8C ,0x00 }));

				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x30 ,(byte)0xDC ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xC9 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,(byte)0xDC ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0x9F ,0x00 ,0x00 ,0x00 ,0x2F ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,0x42 ,0x00 ,0x00 ,(byte)0xF0 ,0x41 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD758"
				,"8C3D08"
				,new byte[]{
				(byte)0x9F ,0x00 ,0x70 ,0x03 ,(byte)0xBC ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x40 ,(byte)0xDC ,(byte)0x8C ,0x00 ,(byte)0xF4 ,(byte)0xC9 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xEC ,(byte)0xDB ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x32 ,0x01 ,0x00 ,0x00 ,0x2E ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,0x68 ,0x42 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD6F0"
				,"8C3CF0"
				,new byte[]{
				0x32 ,0x01 ,0x70 ,0x03 ,(byte)0xD4 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x58 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x04 ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD0 ,(byte)0xDB ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x31 ,0x01 ,0x00 ,0x00 ,0x2D ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC0 ,0x40 ,0x00 ,0x00 ,(byte)0xBA ,0x42 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD688"
				,"8C3CD8"
				,new byte[]{
				0x31 ,0x01 ,0x70 ,0x03 ,(byte)0xD4 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x70 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x14 ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB4 ,(byte)0xDB ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x30 ,0x01 ,0x00 ,0x00 ,0x2C ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x70 ,0x42 ,0x00 ,0x00 ,0x4C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD620"
				,"8C3CC0"
				,new byte[]{
				0x30 ,0x01 ,0x70 ,0x03 ,(byte)0xD4 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x98 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x24 ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,(byte)0xDB ,(byte)0x8C ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x2F ,0x01 ,0x00 ,0x00 ,0x2B ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xAC ,0x42 ,0x00 ,0x00 ,0x38 ,0x42 ,0x00 ,0x00 ,0x0C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD5B8"
				,"8C3CA8"
				,new byte[]{
				0x2F ,0x01 ,0x70 ,0x03 ,(byte)0xD4 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x88 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x48 ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x64 ,0x5E ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x03 ,0x01 ,0x00 ,0x00 ,0x04 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,(byte)0x90 ,0x41 ,0x00 ,0x00 ,0x4C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD4E8"
				,"8C3C60"
				,new byte[]{
				0x03 ,0x01 ,0x70 ,0x03 ,0x6C ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xD8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x5E ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x02 ,0x01 ,0x00 ,0x00 ,0x03 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x17 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,0x50 ,0x41 ,0x00 ,0x00 ,(byte)0xAE ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD480"
				,"8C3C48"
				,new byte[]{
				0x02 ,0x01 ,0x70 ,0x03 ,0x7C ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xB8 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x70 ,(byte)0xCA ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x5D ,(byte)0x95 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0x00 ,0x00 ,0x02 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x15 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3C ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0x86 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD418"
				,"8C3C30"
				,new byte[]{
				0x01 ,0x01 ,0x70 ,0x03 ,(byte)0x90 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xEC ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xEC ,(byte)0xDC ,(byte)0x8C ,0x00 ,(byte)0x84 ,(byte)0xCA ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x5D ,(byte)0x95 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x01 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x13 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x42 ,0x00 ,0x00 ,(byte)0xC0 ,0x40 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD3B0"
				,"8C3C18"
				,new byte[]{
				0x00 ,0x01 ,0x70 ,0x03 ,(byte)0xA0 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x0C ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0x98 ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x5D ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xFE ,0x00 ,0x00 ,0x00 ,(byte)0xFF ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x19 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,0x60 ,0x41 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD348"
				,"8C3C00"
				,new byte[]{
				(byte)0xFE ,0x00 ,0x70 ,0x03 ,(byte)0xC4 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x1C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x1C ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0xCC ,(byte)0xC9 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x5F ,(byte)0x95 ,0x00 ,0x68 ,(byte)0xCC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xBD ,0x00 ,0x00 ,0x00 ,0x30 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x41 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,(byte)0xC4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD2E0"
				,"8C3BE8"
				,new byte[]{
				(byte)0xBD ,0x00 ,0x70 ,0x03 ,(byte)0x9C ,0x5B ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x00 ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0xAC ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x5C ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xFC ,0x00 ,0x00 ,0x00 ,0x2A ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x42 ,0x00 ,0x00 ,0x30 ,0x41 ,0x00 ,0x00 ,0x78 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD278"
				,"8C3BD0"
				,new byte[]{
				(byte)0xFC ,0x00 ,0x70 ,0x03 ,(byte)0xE0 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x34 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x28 ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0xC4 ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x5C ,(byte)0x95 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xFB ,0x00 ,0x00 ,0x00 ,0x29 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x78 ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,0x24 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD210"
				,"8C3BB8"
				,new byte[]{
				(byte)0xFB ,0x00 ,0x70 ,0x03 ,(byte)0xEC ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x4C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x3C ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0xD8 ,(byte)0xCA ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x5B ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF7 ,0x00 ,0x00 ,0x00 ,0x28 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x40 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD1A8"
				,"8C3BA0"
				,new byte[]{
				(byte)0xF7 ,0x00 ,0x70 ,0x03 ,0x10 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x4C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x44 ,(byte)0xDD ,(byte)0x8C ,0x00 ,(byte)0xEC ,(byte)0xCA ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x5B ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF6 ,0x00 ,0x00 ,0x00 ,0x27 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x42 ,0x00 ,0x00 ,0x70 ,0x41 ,0x00 ,0x00 ,(byte)0x8E ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD140"
				,"8C3B88"
				,new byte[]{
				(byte)0xF6 ,0x00 ,0x70 ,0x03 ,0x10 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x4C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x00 ,(byte)0xCB ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB8 ,0x5A ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF2 ,0x00 ,0x00 ,0x00 ,0x26 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x22 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x94 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0x86 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD0D8"
				,"8C3B70"
				,new byte[]{
				(byte)0xF2 ,0x00 ,0x70 ,0x03 ,0x30 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x54 ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x14 ,(byte)0xCB ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x5A ,(byte)0x95 ,0x00 ,(byte)0xF0 ,(byte)0xFC ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF1 ,0x00 ,0x00 ,0x00 ,(byte)0xF2 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xBE ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,(byte)0xA4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD070"
				,"8C3B58"
				,new byte[]{
				(byte)0xF1 ,0x00 ,0x70 ,0x03 ,0x38 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x5C ,0x5A ,(byte)0x8C ,0x00 ,0x28 ,(byte)0xCB ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xD8 ,0x59 ,(byte)0x95 ,0x00 ,(byte)0xB8 ,(byte)0xFD ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xF0 ,0x00 ,0x00 ,0x00 ,(byte)0xF1 ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x8C ,0x42 ,0x00 ,0x00 ,0x70 ,0x41 ,0x00 ,0x00 ,0x64 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CD008"
				,"8C3B40"
				,new byte[]{
				(byte)0xF0 ,0x00 ,0x70 ,0x03 ,0x40 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x48 ,(byte)0xCB ,(byte)0x8C ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x68 ,0x59 ,(byte)0x95 ,0x00 ,(byte)0xB8 ,(byte)0xFD ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xEE ,0x00 ,0x00 ,0x00 ,(byte)0xEF ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,(byte)0xC0 ,0x40 ,0x00 ,0x00 ,(byte)0x8A ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CCFA0"
				,"8C3B28"
				,new byte[]{
				(byte)0xEE ,0x00 ,0x70 ,0x03 ,0x5C ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x6C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x6C ,(byte)0xDD ,(byte)0x8C ,0x00 ,0x58 ,(byte)0xCB ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xF8 ,0x58 ,(byte)0x95 ,0x00 ,(byte)0xB8 ,(byte)0xFD ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xED ,0x00 ,0x00 ,0x00 ,(byte)0xEE ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x29 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x9A ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0x96 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CCF38"
				,"8C3B10"
				,new byte[]{
				(byte)0xED ,0x00 ,0x70 ,0x03 ,0x6C ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x24 ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x68 ,(byte)0xCB ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x58 ,(byte)0x95 ,0x00 ,(byte)0xB8 ,(byte)0xFD ,(byte)0x8C ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,(byte)0xEC ,0x00 ,0x00 ,0x00 ,(byte)0xED ,0x04 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x25 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xB0 ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,(byte)0xA4 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008CCED0"
				,"8C3AF8"
				,new byte[]{
				(byte)0xEC ,0x00 ,0x70 ,0x03 ,(byte)0xC4 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(13).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xAC ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0xAC ,(byte)0xDC ,(byte)0x8C ,0x00 ,0x34 ,(byte)0xCA ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xD6 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x5E ,(byte)0x95 ,0x00 ,0x18 ,0x5C ,(byte)0x8E ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x07 ,0x01 ,0x00 ,0x00 ,0x08 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xA0 ,0x42 ,0x00 ,0x00 ,(byte)0x80 ,0x3F ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x40 ,0x00 ,0x00 ,0x00 }
				,"008CD550"
				,"8C3C90"
				,new byte[]{
				0x07 ,0x01 ,0x70 ,0x03 ,0x30 ,0x59 ,(byte)0x8C ,0x00 }));

				data.get(14).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x4A ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x98 ,0x4A ,(byte)0x8E ,0x00 ,0x34 ,0x53 ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0C ,0x01 ,0x00 ,0x00 ,0x0E ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x5C ,0x42 ,0x00 ,0x00 ,(byte)0xE0 ,0x40 ,0x00 ,0x00 ,(byte)0x80 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E57F0"
				,"8C3D68"
				,new byte[]{
				0x0C ,0x01 ,0x02 ,0x09 ,(byte)0xC0 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(14).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x84 ,0x4A ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,(byte)0x84 ,0x4A ,(byte)0x8E ,0x00 ,0x2C ,0x53 ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0E ,0x01 ,0x00 ,0x00 ,0x10 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0xBA ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E5788"
				,"8C3D80"
				,new byte[]{
				0x0E ,0x01 ,0x02 ,0x09 ,(byte)0xAC ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(14).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x70 ,0x4A ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x70 ,0x4A ,(byte)0x8E ,0x00 ,0x24 ,0x53 ,(byte)0x8E ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x0F ,0x01 ,0x00 ,0x00 ,0x11 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0D ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,0x6C ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E5720"
				,"8C3D98"
				,new byte[]{
				0x0F ,0x01 ,0x02 ,0x09 ,(byte)0x98 ,0x57 ,(byte)0x8C ,0x00 }));
				data.get(14).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x4A ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x60 ,0x4A ,(byte)0x8E ,0x00 ,0x1C ,0x53 ,(byte)0x8E ,0x00 ,(byte)0xE0 ,(byte)0xDB ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x10 ,0x01 ,0x00 ,0x00 ,0x12 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,0x20 ,0x41 ,0x00 ,0x00 ,0x74 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E56B8"
				,"8C3DB0"
				,new byte[]{
				0x10 ,0x01 ,0x02 ,0x09 ,0x40 ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(14).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x4C ,0x4A ,(byte)0x8E ,0x00 ,0x64 ,(byte)0xC2 ,(byte)0x8C ,0x00 ,0x4C ,0x4A ,(byte)0x8E ,0x00 ,0x14 ,0x53 ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xE1 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x11 ,0x01 ,0x00 ,0x00 ,0x13 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x32 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x98 ,0x42 ,0x00 ,0x00 ,0x00 ,0x41 ,0x00 ,0x00 ,(byte)0xB8 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E5650"
				,"8C3DC8"
				,new byte[]{
				0x11 ,0x01 ,0x02 ,0x09 ,0x2C ,0x58 ,(byte)0x8C ,0x00 }));
				data.get(14).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x74 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x74 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x4C ,0x53 ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xC0 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x08 ,0x01 ,0x00 ,0x00 ,0x0A ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x0C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x25 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x20 ,0x42 ,0x00 ,0x00 ,0x10 ,0x41 ,0x00 ,0x00 ,(byte)0xB6 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E5928"
				,"8C3D20"
				,new byte[]{
				0x08 ,0x01 ,0x02 ,0x09 ,0x74 ,0x5A ,(byte)0x8C ,0x00 }));
				data.get(14).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x3C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x3C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x44 ,0x53 ,(byte)0x8E ,0x00 ,0x60 ,(byte)0xC0 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x88 ,0x5A ,(byte)0x8E ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x09 ,0x01 ,0x00 ,0x00 ,0x0B ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x23 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x48 ,0x42 ,0x00 ,0x00 ,(byte)0xC0 ,0x40 ,0x00 ,0x00 ,0x34 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E58C0"
				,"8C3D38"
				,new byte[]{
				0x09 ,0x01 ,0x02 ,0x09 ,0x20 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(14).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x4C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x5C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x4C ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x3C ,0x53 ,(byte)0x8E ,0x00 ,(byte)0xE0 ,(byte)0xBA ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x5B ,(byte)0x8E ,0x00 ,0x18 ,0x00 ,0x00 ,0x00 ,0x0A ,0x01 ,0x00 ,0x00 ,0x0C ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x0B ,0x00 ,0x00 ,0x00 ,0x07 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,(byte)0xA0 ,0x40 ,0x00 ,0x00 ,(byte)0x82 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E5858"
				,"8C3D50"
				,new byte[]{
				0x0A ,0x01 ,0x02 ,0x09 ,0x10 ,0x59 ,(byte)0x8C ,0x00 }));
				data.get(14).add(new Mortal(
				new byte[]{0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x53 ,(byte)0x8E ,0x00 ,0x78 ,0x4C ,(byte)0x8E ,0x00 ,0x78 ,0x4C ,(byte)0x8E ,0x00 ,(byte)0x84 ,(byte)0xF2 ,(byte)0x8C ,0x00 ,0x60 ,(byte)0xB5 ,(byte)0x96 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1B ,0x00 ,0x00 ,0x00 ,0x77 ,0x03 ,0x00 ,0x00 ,0x77 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x28 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,(byte)0xC8 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 }
				,"008E55E8"
				,null,null));
				//translate string
				firstTime = true;
		loadData();
	}
	private void loadData(){
		try{
			if(cbMissions.getActionListeners().length > 0){
				cbMissions.removeActionListener(cbMissions.getActionListeners()[0]);
			}
			if(cbMortals.getActionListeners().length > 0){
				cbMortals.removeActionListener(cbMortals.getActionListeners()[0]);
			}
			text = Arrays.asList("TEXT_SAMPLE","TEXT_HELLO_WORLD","TEXT_DIALOG_BOX","TEXT_ACCEPT","TEXT_REVISIT","TEXT_REVISIT_CAPS","TEXT_SCENARIO","TEXT_SCORE","TEXT_LAID_TO_REST","TEXT_HIGH_SCARES_CAPS","TEXT_SCARE_RATING","TEXT_OK","TEXT_CANCEL","TEXT_YES","TEXT_NO","TEXT_NAME","TEXT_RESET","TEXT_HIDE_MENU","TEXT_SHOW_MENU","TEXT_EXIT","TEXT_QUIT","TEXT_RESUME","TEXT_CLOSE","TEXT_RESUME_HAUNTING","TEXT_RESUME_TRAINING","TEXT_RESUME_GAME","TEXT_RESTART_CURRENT_HAUNTING","TEXT_QUIT_CURRENT_HAUNTING","TEXT_QUIT_GHOULROOM","TEXT_EXIT_GHOULROOM","TEXT_EXIT_GAME","TEXT_OBJECTIVES","TEXT_EXIT_GAME_LEVEL_DIALOG","TEXT_EXIT_GAME_DIALOG","TEXT_EXIT_FRONTEND_DIALOG","TEXT_EXIT_GHOULROOM_DIALOG","TEXT_LINE","TEXT_PRINT","TEXT_SAVE","TEXT_NEW","TEXT_EDIT_TEXT","TEXT_ABOUT","TEXT_HELP","TEXT_NI","TEXT_CONFIRM","TEXT_WIDGET_TEST","TEXT_WIDGET_HELP","TEXT_EDIT_INVOKED","TEXT_EXIT_INVOKED","TEXT_EDIT","TEXT_FILE","TEXT_MG_LEGEND","TEXT_HP_LEGEND","TEXT_MP_LEGEND","TEXT_PA_LEGEND","TEXT_FAMILY","TEXT_CLASS","TEXT_LEVEL","TEXT_FETTER","TEXT_LOCATION","TEXT_ATTIC","TEXT_BATHROOM","TEXT_BEDROOM","TEXT_BOILERROOM","TEXT_CUPBOARD","TEXT_ELECTRICROOM","TEXT_DINING","TEXT_CELLAR","TEXT_CHIMNEY","TEXT_GARAGE","TEXT_GARDEN","TEXT_OUTSIDE","TEXT_HALL","TEXT_CANYON","TEXT_ROAD","TEXT_KITCHEN","TEXT_LANDING","TEXT_LOFT","TEXT_LOUNGE","TEXT_ROOF","TEXT_SECRETROOM","TEXT_STORAGE","TEXT_TERRACE","TEXT_TOILET","TEXT_UTILITY","TEXT_STAIRS","TEXT_VERANDAH","TEXT_BASEMENT","TEXT_FOUNTAIN","TEXT_PATH","TEXT_YARD","TEXT_DRIVEWAY","TEXT_STREET","TEXT_SIDEWALK","TEXT_PATIO","TEXT_FLOWERBED","TEXT_BALCONY","TEXT_FOREST","TEXT_CLEARING","TEXT_RIVER","TEXT_UNDERGROWTH","TEXT_DF_SEABED","TEXT_DF_ENGINEROOM","TEXT_DF_HOLD","TEXT_DF_LIVINGQUARTERS","TEXT_DF_GALLEY","TEXT_DF_STARSTAIRWELL","TEXT_DF_PORTSTAIRWELL","TEXT_DF_STATEROOM","TEXT_DF_SHOWER","TEXT_DF_MASTERBATHROOM","TEXT_DF_MAINSTAIRWAY","TEXT_DF_GAMESROOM","TEXT_DF_FOREDECK","TEXT_DF_PORTDECK","TEXT_DF_STARBOARDDECK","TEXT_DF_AFTDECK","TEXT_DF_DININGROOM","TEXT_DF_OUTSIDEDECK","TEXT_DF_STARLIFEBOAT","TEXT_DF_PORTLIFEBOAT","TEXT_DF_READYROOM","TEXT_DF_FUNNEL","TEXT_DF_BRIDGE","TEXT_DF_OBSERVATION","TEXT_DF_CREWQUARTERS","TEXT_DF_SEA","TEXT_DF_WALKWAY","TEXT_FH_BASEMENTHALL","TEXT_FH_BASKETBALL","TEXT_SNI_MASTERBEDROOM","TEXT_SNI_STUDY","TEXT_SNI_SHED","TEXT_SNI_PORCH","TEXT_SNI_FRONTROOM","TEXT_H101_CONSERVATORY","TEXT_SORORITY_GIRL_A_NAME","TEXT_SORORITY_GIRL_D_NAME","TEXT_SORORITY_GIRL_F_NAME","TEXT_SORORITY_GIRL_G_NAME","TEXT_SORORITY_GIRL_H_NAME","TEXT_SORORITY_GIRL_I_NAME","TEXT_SORORITY_GIRL_J_NAME","TEXT_SORORITY_GIRL_K_NAME","TEXT_SORORITY_GIRL_L_NAME","TEXT_SORORITY_GIRL_M_NAME","TEXT_FRATBOY_A_NAME","TEXT_FRATBOY_C_NAME","TEXT_FRATBOY_E_NAME","TEXT_FRATBOY_F_NAME","TEXT_FRATBOY_I_NAME","TEXT_FRATBOY_K_NAME","TEXT_FRATBOY_N_NAME","TEXT_FRATBOY_O_NAME","TEXT_FRATGEEK_A_NAME","TEXT_FRATGEEK_B_NAME","TEXT_FRATGEEK_C_NAME","TEXT_RESEARCHER_A_NAME","TEXT_RESEARCHER_B_NAME","TEXT_RESEARCHER_C_NAME","TEXT_MIB_ADVISOR_NAME","TEXT_MOB_BOSS","TEXT_DF_RIGHT_HAND_MAN","TEXT_DF_BOSS_MOLL","TEXT_DF_SECOND_MOLL","TEXT_DF_CROUPIER","TEXT_DF_CAPTAIN","TEXT_DF_COOK","TEXT_DF_ENGINEER","TEXT_DF_GOON_A","TEXT_DF_GOON_B","TEXT_DF_GOON_C","TEXT_DF_GOON_D","TEXT_CV_MOTHER","TEXT_CV_FATHER","TEXT_CV_TEENAGE_GIRL","TEXT_CV_TEENAGE_BOY","TEXT_CV_YOUNG_GIRL","TEXT_CV_YOUNG_BOY","TEXT_CV_GRANDMOTHER","TEXT_CV_GRANDFATHER","TEXT_CV_CAT","TEXT_CV_DOG","TEXT_CV_HANDYMAN","TEXT_CV_STUDENT_WITCH_A","TEXT_CV_STUDENT_WITCH_B","TEXT_CV_STUDENT_WITCH_C","TEXT_OLD_MAN_CARTER_NAME","TEXT_PAINTER_NAME","TEXT_DR_KRAUSS_NAME","TEXT_COOK_NAME","TEXT_HOUSEKEEPER_NAME","TEXT_BUTLER_NAME","TEXT_STUDENT_A_NAME","TEXT_STUDENT_B_NAME","TEXT_STUDENT_C_NAME","TEXT_POLICE_CAPTAIN_NAME","TEXT_POLICE_A_NAME","TEXT_POLICE_B_NAME","TEXT_POLICE_C_NAME","TEXT_POLICE_D_NAME","TEXT_POLICE_E_NAME","TEXT_POLICE_F_NAME","TEXT_POLICE_G_NAME","TEXT_CLEANER_NAME","TEXT_WAITRESS_NAME","TEXT_GANG_A_NAME","TEXT_GANG_B_NAME","TEXT_GANG_C_NAME","TEXT_GANG_GIRL_NAME","TEXT_PG_MEDIUM","TEXT_CARTER_WIDOW_NAME","TEXT_CARTER_BROTHER_A_NAME","TEXT_CARTER_BROTHER_B_NAME","TEXT_CARTER_SISTER_NAME","TEXT_CARTER_HUSBAND_NAME","TEXT_CARTER_DAUGHTER_NAME","TEXT_EXECUTOR_NAME","TEXT_DETECTIVE_NAME","TEXT_FARMER_NAME","TEXT_FARMERS_WIFE_NAME","TEXT_FN_ELDEST_SON_NAME","TEXT_FN_MIDDLE_SON_NAME","TEXT_FN_YOUNGEST_SON_NAME","TEXT_FN_ELDEST_DAUGHTER_NAME","TEXT_FN_MIDDLE_DAUGHTER_NAME","TEXT_FN_YOUNGEST_DAUGHTER_NAME","TEXT_COUSIN_NAME","TEXT_FN_GRANDPA_NAME","TEXT_FN_GRANDMA_NAME","TEXT_FARM_HAND_A_NAME","TEXT_FARM_HAND_B_NAME","TEXT_HOBO_NAME","TEXT_SHEEPDOG_NAME","TEXT_CROWS_NAME","TEXT_PRIEST_NAME","TEXT_DOCTOR_A_NAME","TEXT_DOCTOR_B_NAME","TEXT_DOCTOR_C_NAME","TEXT_DOCTOR_D_NAME","TEXT_DOCTOR_E_NAME","TEXT_NURSE_A_NAME","TEXT_NURSE_B_NAME","TEXT_NURSE_C_NAME","TEXT_NURSE_D_NAME","TEXT_NURSE_E_NAME","TEXT_NURSE_F_NAME","TEXT_NURSE_G_NAME","TEXT_NURSE_H_NAME","TEXT_NURSE_I_NAME","TEXT_ORDERLY_A_NAME","TEXT_ORDERLY_B_NAME","TEXT_ORDERLY_C_NAME","TEXT_ORDERLY_D_NAME","TEXT_PATIENT_A_NAME","TEXT_PATIENT_B_NAME","TEXT_PATIENT_C_NAME","TEXT_PATIENT_D_NAME","TEXT_PATIENT_E_NAME","TEXT_PATIENT_F_NAME","TEXT_PATIENT_G_NAME","TEXT_PATIENT_H_NAME","TEXT_COMA_KID_NAME","TEXT_NASTY_KID_NAME","TEXT_GHOSTBREAKER_A_NAME","TEXT_GHOSTBREAKER_B_NAME","TEXT_GHOSTBREAKER_C_NAME","TEXT_GB_STAFF_A_NAME","TEXT_GB_STAFF_B_NAME","TEXT_GB_STAFF_C_NAME","TEXT_GB_STAFF_D_NAME","TEXT_GB_STAFF_E_NAME","TEXT_GB_STAFF_F_NAME","TEXT_GB_STAFF_G_NAME","TEXT_COLONEL_NAME","TEXT_SERGEANT_MAJOR_NAME","TEXT_SERGEANT_A_NAME","TEXT_SERGEANT_B_NAME","TEXT_CORPORAL_A_NAME","TEXT_CORPORAL_B_NAME","TEXT_CORPORAL_C_NAME","TEXT_CHAPLAIN_NAME","TEXT_ARMY_GRUNT_C_NAME","TEXT_ARMY_GRUNT_D_NAME","TEXT_ARMY_GRUNT_E_NAME","TEXT_ARMY_GRUNT_F_NAME","TEXT_ARMY_GRUNT_H_NAME","TEXT_ARMY_GRUNT_I_NAME","TEXT_ARMY_GRUNT_J_NAME","TEXT_ARMY_GRUNT_K_NAME","TEXT_ARMY_GRUNT_L_NAME","TEXT_ARMY_GRUNT_M_NAME","TEXT_LAWYER_A_NAME","TEXT_LAWYER_B_NAME","TEXT_WORKER_A_NAME","TEXT_WORKER_B_NAME","TEXT_FBI_AGENT_A_NAME","TEXT_FBI_AGENT_B_NAME","TEXT_SHAMAN_A_NAME","TEXT_MAD_PERSON_A_NAME","TEXT_MAD_PERSON_B_NAME","TEXT_MAD_PERSON_C_NAME","TEXT_MAD_PERSON_D_NAME","TEXT_MAD_PERSON_E_NAME","TEXT_MAD_PERSON_F_NAME","TEXT_MAD_PERSON_G_NAME","TEXT_MAD_PERSON_H_NAME","TEXT_ENGINEER_NAME","TEXT_GUARD_NAME","TEXT_MIB_AGENT_A_NAME","TEXT_MIB_AGENT_B_NAME","TEXT_MIB_AGENT_C_NAME","TEXT_MIB_AGENT_D_NAME","TEXT_MIB_AGENT_E_NAME","TEXT_MIB_PSYCHIC_NAME","TEXT_LAB_OP_A_NAME","TEXT_LAB_OP_B_NAME","TEXT_LAB_OP_C_NAME","TEXT_LAB_OP_D_NAME","TEXT_LAB_OP_E_NAME","TEXT_LAB_OP_F_NAME","TEXT_WATCHER_A_NAME","TEXT_WATCHER_B_NAME","TEXT_WATCHER_C_NAME","TEXT_WATCHER_D_NAME","TEXT_WATCHER_E_NAME","TEXT_AETHER","TEXT_ARCLIGHT","TEXT_AZRAEL","TEXT_BANZAI","TEXT_BLAIRWISP","TEXT_BLACKCROW","TEXT_BLUEMURDER","TEXT_BOO","TEXT_BRIGIT","TEXT_BUCK","TEXT_CARTER","TEXT_CLATTERCLAWS","TEXT_WINDWALKER","TEXT_COGJAMMER","TEXT_DAYDREAMER","TEXT_DARKLING","TEXT_DRAGOON","TEXT_ELECTROSPASM","TEXT_FINGERS","TEXT_FIRETAIL","TEXT_FLASHJORDAN","TEXT_GHASTLY","TEXT_HARDBOILED","TEXT_HARRIET","TEXT_HOGWASH","TEXT_HYPNOS","TEXT_KNUCKLES","TEXT_LADYROSE","TEXT_LUCKY","TEXT_MAXINEFACTOR","TEXT_MIRAGE","TEXT_MOONSCREAM","TEXT_PAINTER","TEXT_QUIVER","TEXT_RAINDANCER","TEXT_SCARECROW","TEXT_SHIVERS","TEXT_SMOKINJOE","TEXT_SOULSCREECH","TEXT_SPARKLE","TEXT_STATIC","TEXT_STONEWALL","TEXT_STORMTALON","TEXT_TERROREYES","TEXT_THORNE","TEXT_WAVEMASTER","TEXT_WEATHERWITCH","TEXT_WENDEL","TEXT_WHIRLWEIRD","TEXT_WHISPERWIND","TEXT_WILY","TEXT_SPRITE","TEXT_DISTURBANCE","TEXT_ELEMENTAL","TEXT_VAPOUR","TEXT_FRIGHTENER","TEXT_HORROR","TEXT_SPRITES","TEXT_DISTURBANCES","TEXT_ELEMENTALS","TEXT_VAPOURS","TEXT_FRIGHTENERS","TEXT_HORRORS","TEXT_POLTERGEIST","TEXT_PHANTOM","TEXT_GREMLIN","TEXT_HORDE","TEXT_WENDIGO","TEXT_APPARITION","TEXT_FETCH","TEXT_SANDMAN","TEXT_SHADOW","TEXT_WISP","TEXT_TRICKSTER","TEXT_SPECTRE","TEXT_WRAITH","TEXT_MANE","TEXT_BANSHEE","TEXT_SPOOK","TEXT_WIGHT","TEXT_HEADLESS_HORSEMAN","TEXT_AIR_ELEMENTAL","TEXT_EARTH_ELEMENTAL","TEXT_FIRE_ELEMENTAL","TEXT_WATER_ELEMENTAL","TEXT_THUNDER_SPIRIT","TEXT_POLTERGEISTS","TEXT_PHANTOMS","TEXT_GREMLINS","TEXT_HORDES","TEXT_WENDIGOS","TEXT_APPARITIONS","TEXT_FETCHES","TEXT_SANDMEN","TEXT_SHADOWS","TEXT_WISPS","TEXT_TRICKSTERS","TEXT_SPECTRES","TEXT_WRAITHS","TEXT_MANES","TEXT_BANSHEES","TEXT_SPOOKS","TEXT_WIGHTS","TEXT_HEADLESS_HORSEMEN","TEXT_AIR_ELEMENTALS","TEXT_EARTH_ELEMENTALS","TEXT_FIRE_ELEMENTALS","TEXT_WATER_ELEMENTALS","TEXT_THUNDER_SPIRITS","TEXT_BANISHMENT","TEXT_TECH","TEXT_CHANTING","TEXT_HOLY_SYMBOLS","TEXT_HOLY_WATER","TEXT_RITUAL","TEXT_MAGIC","TEXT_NO_POWER_CLASS","TEXT_CORPOREAL_POWER_CLASS","TEXT_PSYCHIC_POWER_CLASS","TEXT_SENSORY_POWER_CLASS","TEXT_SPECIAL_POWER_CLASS","TEXT_WEATHER_POWER_CLASS","TEXT_NO_POWER_FAMILY","TEXT_ELECTRICAL_POWER_FAMILY","TEXT_FLOW_POWER_FAMILY","TEXT_GROUND_POWER_FAMILY","TEXT_MECHANICAL_POWER_FAMILY","TEXT_PURSUIT_POWER_FAMILY","TEXT_VESSEL_POWER_FAMILY","TEXT_ATTRACTION_POWER_FAMILY","TEXT_DREAM_POWER_FAMILY","TEXT_EMOTION_POWER_FAMILY","TEXT_FEAR_POWER_FAMILY","TEXT_MADNESS_POWER_FAMILY","TEXT_SNAPSHOT_POWER_FAMILY","TEXT_TELEKINETIC_POWER_FAMILY","TEXT_DARKNESS_POWER_FAMILY","TEXT_FILM_POWER_FAMILY","TEXT_MANIFEST_POWER_FAMILY","TEXT_MIRROR_POWER_FAMILY","TEXT_NOISE_POWER_FAMILY","TEXT_STENCH_POWER_FAMILY","TEXT_MISCHIEF_POWER_FAMILY","TEXT_NATURE_POWER_FAMILY","TEXT_PORTAL_POWER_FAMILY","TEXT_POSSESSION_POWER_FAMILY","TEXT_SWARM_POWER_FAMILY","TEXT_TIME_POWER_FAMILY","TEXT_COLD_POWER_FAMILY","TEXT_HEAT_POWER_FAMILY","TEXT_RAIN_POWER_FAMILY","TEXT_WIND_POWER_FAMILY","TEXT_NO_POWER","TEXT_CUT_LIGHT_POWER","TEXT_SPARK_POWER","TEXT_BLOW_FUSE_POWER","TEXT_STRANGE_BEHAVIOUR_POWER","TEXT_BLACKOUT_POWER","TEXT_SPARKSTORM_POWER","TEXT_WILD_AND_CRAZY_POWER","TEXT_SURGE_POWER","TEXT_LEAK_POWER","TEXT_GORE_POWER","TEXT_FLOOD_POWER","TEXT_GUSHING_BLOOD_POWER","TEXT_SEEPING_BLOOD_POWER","TEXT_TREMOR_POWER","TEXT_SLOW_POWER","TEXT_TRAP_POWER","TEXT_GRAVE_STALK_POWER","TEXT_SWALLOW_POWER","TEXT_QUAKE_POWER","TEXT_BURIED_ALIVE_POWER","TEXT_BRIEF_SCARE_POWER","TEXT_HIDE_AND_SEEK_POWER","TEXT_CHASE_POWER","TEXT_DEADLY_PURSUIT_POWER","TEXT_ETHEREAL_GIFT_POWER","TEXT_SHAPESHIFTER_POWER","TEXT_LOATHSOME_ASPECT_POWER","TEXT_TROJAN_GIFT_POWER","TEXT_ABHORRENT_ASPECT_POWER","TEXT_INTRIGUE_POWER","TEXT_FASCINATE_POWER","TEXT_OBSESSION_POWER","TEXT_DREAMTHIEF_POWER","TEXT_UNCOVER_FEAR_POWER","TEXT_SLEEP_POWER","TEXT_SLEEPWALK_POWER","TEXT_DREAM_DEMON_POWER","TEXT_FLUSTER_POWER","TEXT_SHATTERED_NERVES_POWER","TEXT_TASTE_AURA_POWER","TEXT_AURA_READING_POWER","TEXT_UNEARTHLY_CALM_POWER","TEXT_EXPOSE_FEARS_POWER","TEXT_FRIGHT_POWER","TEXT_DREAD_POWER","TEXT_NUMB_POWER","TEXT_TERRORISE_POWER","TEXT_PARALYSE_POWER","TEXT_PHOBIA_POWER","TEXT_SCARED_TO_DEATH_POWER","TEXT_DELUSION_POWER","TEXT_MANIA_POWER","TEXT_PSYCHOTIC_RAGE_POWER","TEXT_KINESIS_POWER","TEXT_UNNATURAL_ERECTION_POWER","TEXT_TWISTER_POWER","TEXT_TK_STORM_POWER","TEXT_STRANGE_VISION_POWER","TEXT_HYPNOTIC_IMAGE_POWER","TEXT_SPOOKY_SURPRISE_POWER","TEXT_GHOSTLY_APPARITION_POWER","TEXT_TERROR_INCARNATE_POWER","TEXT_TWIST_REFLECTION_POWER","TEXT_THING_IN_THE_MIRROR_POWER","TEXT_MACABRE_REFLECTION_POWER","TEXT_CLONE_POWER","TEXT_MOAN_POWER","TEXT_FOOTSTEPS_POWER","TEXT_RATTLE_CHAINS_POWER","TEXT_LAUGHTER_POWER","TEXT_HOWL_POWER","TEXT_PIPING_POWER","TEXT_INSANE_INVITATION_POWER","TEXT_SHRIEK_POWER","TEXT_WAIL_POWER","TEXT_WHISPER_POWER","TEXT_SIREN_SONG_POWER","TEXT_VOICE_ON_THE_WIND_POWER","TEXT_DISTANT_THUNDER_POWER","TEXT_THUNDERCLAP_POWER","TEXT_SHATTERING_SONG_POWER","TEXT_CACOPHONY_POWER","TEXT_LINGERING_SMELL_POWER","TEXT_STINK_POWER","TEXT_SUSPICIOUS_STENCH_POWER","TEXT_QUEASY_POWER","TEXT_CHOKING_ODOUR_POWER","TEXT_NAUSEA_POWER","TEXT_FOOLS_ERRAND_POWER","TEXT_WILD_GEESE_POWER","TEXT_JINX_POWER","TEXT_CHARM_POWER","TEXT_LUCKSTORM_POWER","TEXT_FLOWER_POWER_POWER","TEXT_CREEPERS_POWER","TEXT_TWISTED_VINES_POWER","TEXT_ARBOREAL_PRISON_POWER","TEXT_HIDDEN_MAZE_POWER","TEXT_DOMINATE_POWER","TEXT_POSSESS_POWER","TEXT_DANSE_MACABRE_POWER","TEXT_SCATTERED_SWARM_POWER","TEXT_DENSE_SWARM_POWER","TEXT_SWARM_STRIKE_POWER","TEXT_LEGION_POWER","TEXT_BITTER_COLD_POWER","TEXT_ICE_BREATH_POWER","TEXT_ICY_TOUCH_POWER","TEXT_FROZEN_STIFF_POWER","TEXT_FROSTBITE_POWER","TEXT_SWEAT_POWER","TEXT_ROAST_POWER","TEXT_HUMAN_TORCH_POWER","TEXT_BONFIRE_POWER","TEXT_INFERNO_POWER","TEXT_GREAT_BALLS_OF_FIRE_POWER","TEXT_RAIN_POWER","TEXT_FOG_POWER","TEXT_HAILSTONES_POWER","TEXT_HAUNTED_HAIL_POWER","TEXT_GATHER_WINDS_POWER","TEXT_GUSTS_POWER","TEXT_TEMPEST_POWER","TEXT_TYPHOON_POWER","TEXT_NEUTRAL","TEXT_FRIENDLY","TEXT_ANGRY","TEXT_CALM","TEXT_STRESSED","TEXT_RATTLED","TEXT_TERRIFIED","TEXT_INSANE","TEXT_BLOOD","TEXT_COLD","TEXT_CREEPY_CRAWLY","TEXT_DARKNESS","TEXT_ELECTRICAL","TEXT_FIRE","TEXT_HUNTED","TEXT_NOISE","TEXT_NORMAL","TEXT_STORM","TEXT_TRAPPED","TEXT_UNCLEAN","TEXT_WATER","TEXT_PURSUIT","TEXT_GENERICOBJECT","TEXT_FEATURE","TEXT_SPECIAL","TEXT_ELECTRIC","TEXT_APPLIANCE","TEXT_WATERSOURCE","TEXT_FLAME","TEXT_MIRROR","TEXT_MECHANICAL","TEXT_GIFT_FETTER","TEXT_DOOR","TEXT_CURTAIN","TEXT_WALL","TEXT_FLOOR","TEXT_CEILING","TEXT_ROULETTEWHEEL","TEXT_URN","TEXT_SHIPSWHEEL","TEXT_STOVE","TEXT_FURNACE","TEXT_BOOKCASE","TEXT_WINCH","TEXT_HAMMOCK","TEXT_BED","TEXT_PIANO","TEXT_CORPSE","TEXT_RAIL","TEXT_PINBALLTABLE","TEXT_JAR","TEXT_SOFA","TEXT_RATTRAP","TEXT_CRATE","TEXT_TISSUEBOX","TEXT_BASKETBALLHOOP","TEXT_BICYCLE","TEXT_MOOSEHEAD","TEXT_OVEN","TEXT_HOB","TEXT_BOILER","TEXT_WASHING_MACHINE","TEXT_DRYER","TEXT_VCR","TEXT_PLUGSOCKET","TEXT_SWITCHBOX","TEXT_KEYPAD","TEXT_KEYBOARD","TEXT_COMPUTER","TEXT_LAPTOP","TEXT_CONSOLE","TEXT_MONITOR","TEXT_AIRCONDITIONING","TEXT_FAN","TEXT_TAPERECORDER","TEXT_CAMERA","TEXT_VENDINGMACHINE","TEXT_ARCADEMACHINE","TEXT_GENERATOR","TEXT_MOTOR","TEXT_SPEAKER","TEXT_PUMP","TEXT_HEADPHONES","TEXT_HIFI","TEXT_CASH_REGISTER","TEXT_RADIO","TEXT_MICROWAVE","TEXT_FRIDGE","TEXT_COFFEEMAKER","TEXT_VACUUMCLEANER","TEXT_LIGHTSWITCH","TEXT_TELEPHONE","TEXT_SINK","TEXT_TV","TEXT_BATH","TEXT_ETHEREAL_GIFT","TEXT_TROJAN_GIFT","TEXT_SHOWER","TEXT_CHAIR","TEXT_STOOL","TEXT_PUNCHBAG","TEXT_FIREPLACE","TEXT_WEIGHTBENCH","TEXT_CHATTERINGTEETH","TEXT_PAINTING","TEXT_AERIAL","TEXT_BIN","TEXT_BOOK","TEXT_BAT","TEXT_MAGAZINE","TEXT_BOX","TEXT_BARREL","TEXT_BOTTLE","TEXT_LETTER","TEXT_LADDER","TEXT_WARDROBE","TEXT_DRAWERS","TEXT_WEIGHTS","TEXT_CD","TEXT_SHELVES","TEXT_SAW","TEXT_WINERACK","TEXT_TABLE","TEXT_DESK","TEXT_RADIATOR","TEXT_FLOWERS","TEXT_FLOWERQUADS","TEXT_POTPLANT","TEXT_MAT","TEXT_SUITCASE","TEXT_BAG","TEXT_PAN","TEXT_MOP","TEXT_BUCKET","TEXT_BROOM","TEXT_BALL","TEXT_TOOLBOX","TEXT_LAMP","TEXT_PICKAXE","TEXT_KNIFE","TEXT_BOARD","TEXT_CAN","TEXT_CLOCK","TEXT_HATSTAND","TEXT_PLATE","TEXT_CANDLEABRA","TEXT_CANDLESTICK","TEXT_LIGHT","TEXT_SPOTLIGHT","TEXT_LAMPPOST","TEXT_TORCH","TEXT_TREE","TEXT_CHEST","TEXT_MIC","TEXT_FOOD","TEXT_RACK","TEXT_POSTER","TEXT_TRAILER","TEXT_COBWEB","TEXT_POT","TEXT_RUG","TEXT_STATIONARY","TEXT_EASEL","TEXT_DOORBELL","TEXT_SIDEBOARD","TEXT_EQUIPCASE","TEXT_POKER","TEXT_MAP","TEXT_FRAME","TEXT_PALLET","TEXT_LAWNMOWER","TEXT_POLE","TEXT_TOILETROLL","TEXT_LOCKER","TEXT_FLOWERBOX","TEXT_HOOKS","TEXT_BBQ","TEXT_VASE","TEXT_ENGINE","TEXT_SURFBOARD","TEXT_BASKET","TEXT_QUILT","TEXT_FLAGS","TEXT_TYRE","TEXT_CONE","TEXT_ROCK","TEXT_ASHTRAY","TEXT_CUP","TEXT_FILECABINET","TEXT_EXTINGUISHER","TEXT_TOOLS","TEXT_SLAB","TEXT_GASCYLINDER","TEXT_LECTERN","TEXT_CAR","TEXT_URINAL","TEXT_WATERCOOLER","TEXT_FLAP","TEXT_STAND","TEXT_WHEELCHAIR","TEXT_CURTAINRAIL","TEXT_HANGER","TEXT_DRIP","TEXT_TROLLEY","TEXT_COUNTER","TEXT_PICTURE","TEXT_FORK","TEXT_GLASS","TEXT_JUG","TEXT_LIFERING","TEXT_OAR","TEXT_PISTONS","TEXT_CUE","TEXT_COFFIN","TEXT_PRESS","TEXT_STEPS","TEXT_PACKAGE","TEXT_HEATER","TEXT_FREEZER","TEXT_HARP","TEXT_ORGAN","TEXT_HOURGLASS","TEXT_AXE","TEXT_FLOORBOARDS","TEXT_GRAVE","TEXT_PITCHFORK","TEXT_LOGS","TEXT_BRIDGE","TEXT_SHACK","TEXT_WEATHERVANE","TEXT_LEVERS","TEXT_KENNEL","TEXT_LIFT","TEXT_WINDOW","TEXT_GHOSTMACHINE","TEXT_CAGE","TEXT_PANEL","TEXT_ARMOURRING","TEXT_BOWL","TEXT_BRAZIER","TEXT_JACKOLANTERN","TEXT_BALLOONS","TEXT_SICKLE","TEXT_WASPHIVE","TEXT_TREESTUMP","TEXT_DREAMCATCHER","TEXT_KEY","TEXT_RIFLE","TEXT_STAGHEAD","TEXT_NECRONOMICON","TEXT_TRAPDOOR","TEXT_TEATRAY","TEXT_BOARDS","TEXT_PADLOCK","TEXT_HAMMER","TEXT_WALKMAN","TEXT_ANIMAL","TEXT_HUMAN","TEXT_EXTERNAL","TEXT_INTERNAL","TEXT_HAUNTING_101","TEXT_WEIRD_SEANCE","TEXT_SUMMONERS_NOT_INCLUDED","TEXT_DEADFELLAS","TEXT_CALAMITYVILLE_HORROR","TEXT_THE_UNINVITED","TEXT_HELL_STREET_BLUES","TEXT_POULTRYGEIST","TEXT_FACEPACKS","TEXT_BLAIRWISP_PROJ","TEXT_BUTLER_DIDNT_DO_IT","TEXT_SPOOKYHOLLOW","TEXT_ABYSMAL","TEXT_PHANTOM_OF_THE_OPERATING_ROOM","TEXT_GHOSTBREAKERS","TEXT_FULL_MORTAL_JACKET","TEXT_FIELD_OF_NIGHTMARES","TEXT_CUCKOOS_NEST","TEXT_TRAIN_SPOOKING","TEXT_GHOST_IN_THE_MILITARY_MACHINE","TEXT_UNKNOWN_SCENARIO","TEXT_GHOULROOM","TEXT_GHOSTMASTER","TEXT_HIGH_SCORE_TABLE","TEXT_NONE","TEXT_NO_EPITAPH","TEXT_SUPERGHOST","TEXT_UNKNOWN","TEXT_BIO","TEXT_UPKEEP","TEXT_SCEPTICISM","TEXT_TERROR","TEXT_WILLPOWER","TEXT_MADNESS","TEXT_BELIEF","TEXT_MENTALITY","TEXT_VULNERABILITY","TEXT_FEAR","TEXT_FW_LEGEND","TEXT_FEARS","TEXT_SUBCONSCIOUS_FEAR","TEXT_MOOD","TEXT_GOTO","TEXT_VIEW","TEXT_ATTACHCAMERA","TEXT_POV","TEXT_BIOGRAPHY","TEXT_TEAM","TEXT_LOCAL","TEXT_BIND","TEXT_BENCH","TEXT_DAY","TEXT_DAYS","TEXT_ORDERS","TEXT_EPITAPH","TEXT_EVOLVEGHOST","TEXT_BAND","TEXT_POWERS","TEXT_PLASM","TEXT_GOLD_PLASM","TEXT_COST","TEXT_GHOULROOM_POWER_DIALOG","TEXT_BENCHED","TEXT_FLED","TEXT_BINDING","TEXT_TYPE","TEXT_FEAR_LETTER","TEXT_MADNESS_LETTER","TEXT_BELIEF_LETTER","TEXT_TERROR_LETTER","TEXT_WON_MESSAGE","TEXT_LOST_MESSAGE","TEXT_INSUFICCIENT_PLASM","TEXT_MORTALS_FLED","TEXT_RECOMMEND","TEXT_START_HAUNTING","TEXT_HAUNTER_TEAM","TEXT_TEAM_SELECTION","TEXT_TEAM_SELECTION_HELP","TEXT_CONTINUEGAME","TEXT_NEWGAME","TEXT_LOADGAME","TEXT_HIGHSCARETABLE","TEXT_OPTIONS","TEXT_CREDITS","TEXT_SCENARIO_COMPLETED","TEXT_BANISHED_HAUNTERS","TEXT_SCARES","TEXT_SHOCKS","TEXT_SCREAMS","TEXT_FAINTS","TEXT_PARANOIA","TEXT_SUPER_PARANOIA","TEXT_FLEE","TEXT_TOTAL_SCORE","TEXT_TIME","TEXT_TARGET_TIME","TEXT_FINAL_SCORE","TEXT_GOLD_PLASM_ADDITIONAL_CAPS","TEXT_GOLD_PLASM_CAPS","TEXT_GAME","TEXT_CONTROLS","TEXT_AUDIO","TEXT_DISPLAY","TEXT_DEFAULT","TEXT_OPTIONS_CAPS","TEXT_TUTORIAL_ON","TEXT_SHOW_TOOL_TIPS","TEXT_TOOL_TIP_DELAY","TEXT_PAN_SPEED","TEXT_GHOSTLY_VISION","TEXT_EVENT_CAMERAS","TEXT_EVENT_CAMERAS_NONE","TEXT_EVENT_CAMERAS_CRITICAL_ONLY","TEXT_EVENT_CAMERAS_ALL","TEXT_AUTO_MOVE_CURSOR","TEXT_WINDOWS_CURSOR","TEXT_ENHANCED_CURSOR","TEXT_EDGE_OF_SCREEN_SCROLL","TEXT_SECONDS","TEXT_RESOLUTION","TEXT_GRAPHICS_QUALITY","TEXT_BEST","TEXT_AVERAGE","TEXT_FASTEST","TEXT_TEXTURE_QUALITY","TEXT_HIGH_VRAM","TEXT_MEDIUM_VRAM","TEXT_LOW_VRAM","TEXT_GAMMA","TEXT_MASTER_VOLUME","TEXT_EFFECTS_VOLUME","TEXT_VOICES_VOLUME","TEXT_MUSIC_VOLUME","TEXT_AUDIO_QUALITY","TEXT_SUBTITLES","TEXT_GENERAL","TEXT_MISC_KEYS","TEXT_CAMERA_KEYS","TEXT_INVERT_MOUSE_ZOOM","TEXT_INVERT_MOUSE","TEXT_INVERT_MOUSE_ROTATE","TEXT_PAN_LEFT","TEXT_PAN_RIGHT","TEXT_PAN_FORWARD","TEXT_PAN_BACK","TEXT_ROTATE_CAMERA_LEFT","TEXT_ROTATE_CAMERA_RIGHT","TEXT_ZOOM_CAMERA_IN","TEXT_ZOOM_CAMERA_OUT","TEXT_TILT_CAMERA_UP","TEXT_TILT_CAMERA_DOWN","TEXT_ZOOM_IN_FULL","TEXT_ZOOM_OUT_FULL","TEXT_TILT_CAMERA_UP_FULL","TEXT_TILT_CAMERA_DOWN_FULL","TEXT_MOVE_UP_LEVEL","TEXT_MOVE_DOWN_LEVEL","TEXT_MOVE_LEVEL_TOP","TEXT_MOVE_LEVEL_BOTTOM","TEXT_RESET_CAMERA","TEXT_DELETE_CANCEL","TEXT_ROTATE_CAMERA_CLOCK","TEXT_ROTATE_CAMERA_ANTICLOCK","TEXT_MISSION_BRIEFING","TEXT_QUICK_LOAD","TEXT_SCREEN_CAPTURE","TEXT_MENU_HIGHLIGHT_UP","TEXT_MENU_HIGHLIGHT_DOWN","TEXT_MENU_HIGHLIGHT_LEFT","TEXT_MENU_HIGHLIGHT_RIGHT","TEXT_PAUSE","TEXT_AUTOSAVE_DELETE","TEXT_SAVECAM1","TEXT_SAVECAM2","TEXT_SAVECAM3","TEXT_SAVECAM4","TEXT_SAVECAM5","TEXT_LOADCAM1","TEXT_LOADCAM2","TEXT_LOADCAM3","TEXT_LOADCAM4","TEXT_LOADCAM5","TEXT_SAVE_CAMERA_VIEW","TEXT_DEFAULT_CAMERA_VIEW","TEXT_RESTORE_CAMERA_VIEW","TEXT_PLUS","TEXT_NUMPAD_0_KEY","TEXT_NUMPAD_1_KEY","TEXT_NUMPAD_2_KEY","TEXT_NUMPAD_3_KEY","TEXT_NUMPAD_4_KEY","TEXT_NUMPAD_5_KEY","TEXT_NUMPAD_6_KEY","TEXT_NUMPAD_7_KEY","TEXT_NUMPAD_8_KEY","TEXT_NUMPAD_9_KEY","TEXT_NUMPAD_ENTER_KEY","TEXT_NUMPAD_PLUS_KEY","TEXT_NUMPAD_MINUS_KEY","TEXT_NUMPAD_STAR_KEY","TEXT_NUMPAD_FORWARD_SLASH_KEY","TEXT_NUMPAD_PERIOD_KEY","TEXT_NUMPAD_KEY","TEXT_DELETE_KEY","TEXT_INSERT_KEY","TEXT_END_KEY","TEXT_HOME_KEY","TEXT_PAGE_UP_KEY","TEXT_PAGE_DOWN_KEY","TEXT_LEFT_ARROW","TEXT_RIGHT_ARROW","TEXT_UP_ARROW","TEXT_DOWN_ARROW","TEXT_CTRL_KEY","TEXT_SHIFT_KEY","TEXT_ALT_KEY","TEXT_OPENQUOTE_KEY","TEXT_ONE_KEY","TEXT_TWO_KEY","TEXT_THREE_KEY","TEXT_FOUR_KEY","TEXT_FIVE_KEY","TEXT_SIX_KEY","TEXT_SEVEN_KEY","TEXT_EIGHT_KEY","TEXT_NINE_KEY","TEXT_ZERO_KEY","TEXT_MINUS_KEY","TEXT_EQUALS_KEY","TEXT_BACK_ARROW_KEY","TEXT_SPACE_KEY","TEXT_TAB_KEY","TEXT_LSQUAREBRACKET_KEY","TEXT_RSQUAREBRACKET_KEY","TEXT_SEMICOLON_KEY","TEXT_CLOSEQUOTE_KEY","TEXT_HASH_KEY","TEXT_COMMA_KEY","TEXT_PERIOD_KEY","TEXT_FORWARD_SLASH_KEY","TEXT_BACK_SLASH_KEY","TEXT_RETURN_KEY","TEXT_EXCLAMATION_MARK_KEY","TEXT_DOUBLE_QUOTE_KEY","TEXT_DOLLAR_KEY","TEXT_PERCENT_KEY","TEXT_AMPERSAND_KEY","TEXT_LBRACKET_KEY","TEXT_RBRACKET_KEY","TEXT_STAR_KEY","TEXT_PLUS_KEY","TEXT_COLON_KEY","TEXT_LESS_THAN_KEY","TEXT_GREATER_THAN_KEY","TEXT_QUESTION_MARK_KEY","TEXT_AT_KEY","TEXT_HAT_KEY","TEXT_UNDERSCORE_KEY","TEXT_LBRACE_KEY","TEXT_OR_KEY","TEXT_RBRACE_KEY","TEXT_TILDE_KEY","TEXT_A_KEY","TEXT_B_KEY","TEXT_C_KEY","TEXT_D_KEY","TEXT_E_KEY","TEXT_F_KEY","TEXT_G_KEY","TEXT_H_KEY","TEXT_I_KEY","TEXT_J_KEY","TEXT_K_KEY","TEXT_L_KEY","TEXT_M_KEY","TEXT_N_KEY","TEXT_O_KEY","TEXT_P_KEY","TEXT_Q_KEY","TEXT_U_KEY","TEXT_V_KEY","TEXT_R_KEY","TEXT_S_KEY","TEXT_T_KEY","TEXT_W_KEY","TEXT_X_KEY","TEXT_Y_KEY","TEXT_Z_KEY","TEXT_F1_KEY","TEXT_F2_KEY","TEXT_F3_KEY","TEXT_F4_KEY","TEXT_F5_KEY","TEXT_F6_KEY","TEXT_F7_KEY","TEXT_F8_KEY","TEXT_F9_KEY","TEXT_F10_KEY","TEXT_F11_KEY","TEXT_F12_KEY","TEXT_H101_SORORITY_GIRL_D_BIO","TEXT_H101_SORORITY_GIRL_F_BIO","TEXT_H101_SORORITY_GIRL_G_BIO","TEXT_H101_SORORITY_GIRL_I_BIO","TEXT_H101_SORORITY_GIRL_J_BIO","TEXT_H101_SORORITY_GIRL_L_BIO","TEXT_H101_SORORITY_GIRL_M_BIO","TEXT_WS_FRATBOY_A_BIO","TEXT_WS_FRATBOY_C_BIO","TEXT_WS_FRATBOY_E_BIO","TEXT_WS_FRATBOY_F_BIO","TEXT_WS_FRATBOY_I_BIO","TEXT_WS_FRATBOY_K_BIO","TEXT_WS_FRATBOY_N_BIO","TEXT_WS_FRATBOY_O_BIO","TEXT_WS_SORORITY_GIRL_A_BIO","TEXT_WS_SORORITY_GIRL_H_BIO","TEXT_WS_SORORITY_GIRL_K_BIO","TEXT_WS_FRATGEEK_A_BIO","TEXT_WS_FRATGEEK_B_BIO","TEXT_WS_FRATGEEK_C_BIO","TEXT_SNI_RESEARCHER_A_BIO","TEXT_SNI_RESEARCHER_B_BIO","TEXT_SNI_RESEARCHER_C_BIO","TEXT_DRKRAUSS_SUM_BIO","TEXT_CV_MOTHER_BIO","TEXT_CV_FATHER_BIO","TEXT_CV_TEENAGE_GIRL_BIO","TEXT_CV_TEENAGE_BOY_BIO","TEXT_CV_YOUNG_GIRL_BIO","TEXT_CV_YOUNG_BOY_BIO","TEXT_CV_GRANDMOTHER_BIO","TEXT_CV_GRANDFATHER_BIO","TEXT_CV_CAT_BIO","TEXT_CV_DOG_BIO","TEXT_CV_HANDYMAN_BIO","TEXT_CV_STUDENT_WITCH_A_BIO","TEXT_CV_STUDENT_WITCH_B_BIO","TEXT_CV_STUDENT_WITCH_C_BIO","TEXT_MOB_BOSS_BIO","TEXT_DF_RIGHT_HAND_MAN_BIO","TEXT_DF_BOSS_MOLL_BIO","TEXT_DF_SECOND_MOLL_BIO","TEXT_DF_CROUPIER_BIO","TEXT_DF_CAPTAIN_BIO","TEXT_DF_COOK_BIO","TEXT_DF_ENGINEER_BIO","TEXT_DF_GOON_A_BIO","TEXT_DF_GOON_B_BIO","TEXT_DF_GOON_C_BIO","TEXT_DF_GOON_D_BIO","TEXT_HB_POLICE_CAPTAIN_BIO","TEXT_HB_POLICE_A_BIO","TEXT_HB_POLICE_B_BIO","TEXT_HB_POLICE_C_BIO","TEXT_HB_POLICE_D_BIO","TEXT_HB_POLICE_E_BIO","TEXT_HB_POLICE_F_BIO","TEXT_HB_POLICE_G_BIO","TEXT_HB_CLEANER_BIO","TEXT_HB_WAITRESS_BIO","TEXT_HB_GANG_A_BIO","TEXT_HB_GANG_B_BIO","TEXT_HB_GANG_C_BIO","TEXT_HB_MIKE_KLUTZ_BIO","TEXT_HB_CAROL_KLUTZ_BIO","TEXT_HB_CAROL_ANNE_KLUTZ_BIO","TEXT_HB_BILL_RATZENBERGER_BIO","TEXT_HB_FRATBOY_A_BIO","TEXT_HB_FRATBOY_C_BIO","TEXT_HB_FRATBOY_E_BIO","TEXT_HB_FRATBOY_F_BIO","TEXT_HB_MAD_SCIENTIST_BIO","TEXT_HB_MIB_ADVISOR_BIO","TEXT_HB_GANG_GIRL_BIO","TEXT_PG_MEDIUM_BIO","TEXT_HEATHERMYRICK_BWP_BIO","TEXT_JOSHMYRICK_BWP_BIO","TEXT_MIKESANCHEZ_BWP_BIO","TEXT_BW_RESEARCHER_C_BIO","TEXT_SH_FARMER_BIO","TEXT_SH_FARMERS_WIFE_BIO","TEXT_SH_ELDEST_SON_BIO","TEXT_SH_ELDEST_DAUGHTER_BIO","TEXT_SH_MIDDLE_SON_BIO","TEXT_SH_MIDDLE_DAUGHTER_BIO","TEXT_SH_YOUNGEST_SON_BIO","TEXT_SH_YOUNGEST_DAUGHTER_BIO","TEXT_SH_COUSIN_BIO","TEXT_SH_GRANDFATHER_BIO","TEXT_SH_GRANDMOTHER_BIO","TEXT_SH_FARM_HAND_A_BIO","TEXT_SH_FARM_HAND_B_BIO","TEXT_SH_HOBO_BIO","TEXT_SH_SHEEPDOG_BIO","TEXT_SH_CROWS_BIO","TEXT_SH_PRIEST_BIO","TEXT_GI_DOCTOR_A_BIO","TEXT_GI_DOCTOR_B_BIO","TEXT_GI_DOCTOR_C_BIO","TEXT_GI_DOCTOR_D_BIO","TEXT_GI_DOCTOR_E_BIO","TEXT_GI_NURSE_A_BIO","TEXT_GI_NURSE_B_BIO","TEXT_GI_NURSE_C_BIO","TEXT_GI_NURSE_D_BIO","TEXT_GI_NURSE_E_BIO","TEXT_GI_NURSE_F_BIO","TEXT_GI_NURSE_G_BIO","TEXT_GI_NURSE_H_BIO","TEXT_GI_NURSE_I_BIO","TEXT_GI_ORDERLY_A_BIO","TEXT_GI_ORDERLY_B_BIO","TEXT_GI_ORDERLY_C_BIO","TEXT_GI_ORDERLY_D_BIO","TEXT_GI_PATIENT_A_BIO","TEXT_GI_PATIENT_B_BIO","TEXT_GI_PATIENT_C_BIO","TEXT_GI_PATIENT_D_BIO","TEXT_GI_PATIENT_E_BIO","TEXT_GI_PATIENT_F_BIO","TEXT_GI_PATIENT_G_BIO","TEXT_GI_PATIENT_H_BIO","TEXT_GI_COMA_KID_BIO","TEXT_GI_NASTY_KID_BIO","TEXT_GI_MIB_ADVISOR_BIO","TEXT_GI_GHOSTBREAKER_A_BIO","TEXT_GI_GHOSTBREAKER_B_BIO","TEXT_GI_GHOSTBREAKER_C_BIO","TEXT_GB_STAFF_A_BIO","TEXT_GB_STAFF_B_BIO","TEXT_GB_STAFF_C_BIO","TEXT_GB_STAFF_D_BIO","TEXT_GB_STAFF_E_BIO","TEXT_GB_STAFF_F_BIO","TEXT_GB_STAFF_G_BIO","TEXT_FMJ_COLONEL_BIO","TEXT_FMJ_SERGEANT_MAJOR_BIO","TEXT_FMJ_SERGEANT_A_BIO","TEXT_FMJ_SERGEANT_B_BIO","TEXT_FMJ_CHAPLAIN_BIO","TEXT_FMJ_CORPORAL_A_BIO","TEXT_FMJ_CORPORAL_B_BIO","TEXT_FMJ_CORPORAL_C_BIO","TEXT_FMJ_ARMY_GRUNT_C_BIO","TEXT_FMJ_ARMY_GRUNT_D_BIO","TEXT_FMJ_ARMY_GRUNT_E_BIO","TEXT_FMJ_ARMY_GRUNT_F_BIO","TEXT_FMJ_ARMY_GRUNT_H_BIO","TEXT_FMJ_ARMY_GRUNT_I_BIO","TEXT_FMJ_ARMY_GRUNT_J_BIO","TEXT_FMJ_ARMY_GRUNT_K_BIO","TEXT_FMJ_ARMY_GRUNT_L_BIO","TEXT_FMJ_ARMY_GRUNT_M_BIO","TEXT_CN_NURSE_B_BIO","TEXT_CN_NURSE_F_BIO","TEXT_CN_NURSE_G_BIO","TEXT_CN_ORDERLY_B_BIO","TEXT_CN_ORDERLY_C_BIO","TEXT_CN_MAD_PERSON_E_BIO","TEXT_CN_MAD_PERSON_F_BIO","TEXT_CN_MAD_PERSON_G_BIO","TEXT_CN_MAD_PERSON_H_BIO","TEXT_CN_RESEARCHER_C_BIO","TEXT_CN_MAD_SCIENTIST_BIO","TEXT_CN_MIB_AGENT_C_BIO","TEXT_AETHER_EPITAPH","TEXT_ARCLIGHT_EPITAPH","TEXT_AZRAEL_EPITAPH","TEXT_BANZAI_EPITAPH","TEXT_BLAIRWISP_EPITAPH","TEXT_BLACKCROW_EPITAPH","TEXT_BLUEMURDER_EPITAPH","TEXT_BOO_EPITAPH","TEXT_BRIGIT_EPITAPH","TEXT_BUCK_EPITAPH","TEXT_CARTER_EPITAPH","TEXT_CLATTERCLAWS_EPITAPH","TEXT_WINDWALKER_EPITAPH","TEXT_COGJAMMER_EPITAPH","TEXT_DAYDREAMER_EPITAPH","TEXT_DARKLING_EPITAPH","TEXT_DRAGOON_EPITAPH","TEXT_ELECTROSPASM_EPITAPH","TEXT_FINGERS_EPITAPH","TEXT_FIRETAIL_EPITAPH","TEXT_FLASHJORDAN_EPITAPH","TEXT_GHASTLY_EPITAPH","TEXT_HARDBOILED_EPITAPH","TEXT_HARRIET_EPITAPH","TEXT_HOGWASH_EPITAPH","TEXT_HYPNOS_EPITAPH","TEXT_KNUCKLES_EPITAPH","TEXT_LADYROSE_EPITAPH","TEXT_LUCKY_EPITAPH","TEXT_MAXINEFACTOR_EPITAPH","TEXT_MOONSCREAM_EPITAPH","TEXT_PAINTER_EPITAPH","TEXT_QUIVER_EPITAPH","TEXT_RAINDANCER_EPITAPH","TEXT_SCARECROW_EPITAPH","TEXT_SHIVERS_EPITAPH","TEXT_SMOKINJOE_EPITAPH","TEXT_SOULSCREECH_EPITAPH","TEXT_SPARKLE_EPITAPH","TEXT_STATIC_EPITAPH","TEXT_STONEWALL_EPITAPH","TEXT_STORMTALON_EPITAPH","TEXT_TERROREYES_EPITAPH","TEXT_THORNE_EPITAPH","TEXT_WAVEMASTER_EPITAPH","TEXT_WEATHERWITCH_EPITAPH","TEXT_WENDEL_EPITAPH","TEXT_WHIRLWEIRD_EPITAPH","TEXT_WHISPERWIND_EPITAPH","TEXT_ELECTRICAL_FETTER","TEXT_MECHANICAL_FETTER","TEXT_MIRROR_FETTER","TEXT_AIR_FETTER","TEXT_FIRE_FETTER","TEXT_WATER_FETTER","TEXT_GRAVE_FETTER","TEXT_CHILD_FETTER","TEXT_INSIDE_FETTER","TEXT_EARTH_FETTER","TEXT_OUTSIDE_FETTER","TEXT_THOROUGHFARE_FETTER","TEXT_SITE_EMOTIONAL_FETTER","TEXT_SITE_VIOLENCE_FETTER","TEXT_SITE_DEATH_FETTER","TEXT_SLEEPING_FETTER","TEXT_ORDER_NONE","TEXT_ORDER_USE_ONLY_POWER_AT_CURRENT_BAND","TEXT_ORDER_ONLY_USE_POWERS_IF_MORTALS_PRESENT","TEXT_ORDER_PICK_ON_MORTAL","TEXT_ORDER_PICK_ON_TYPE","TEXT_ORDER_DO_NOT_USE_ANY_OF_YOUR_POWERS","TEXT_ORDER_DO_NOT_USE_POWER","TEXT_ORDER_ONLY_COPY_MORTAL","TEXT_ORDER_ONLY_COPY_TYPE","TEXT_ORDER_YOU_MAY_ROAM","TEXT_ORDER_USE_POWER","TEXT_ORDER_DELETE_THIS_ORDER","TEXT_ORDER_IF_MORTALS_PRESENT","TEXT_ORDER_IF_SEVERAL_MORTALS_PRESENT","TEXT_ORDER_IF_ONE_OR_NO_MORTALS_PRESENT","","TEXT_ORDER_IF_MORTAL_PRESENT","TEXT_ORDER_UNTIL_HAUNTER_USES_POWER","TEXT_ORDER_EVER","TEXT_ORDER_IF_TYPE_PRESENT","TEXT_ORDER_UNTIL_POWER_IS_USED","TEXT_ORDER_AT_WILL","TEXT_ORDER_AS_OFTEN_AS_POSSIBLE","TEXT_ORDER_WHEN_SOMEONE_SCREAMS","TEXT_ORDER_WHEN_SOMEONE_FAINTS_OR_FALLS_ASLEEP","TEXT_ORDER_WHEN_MORTAL_ENTERS","TEXT_ORDER_WHEN_MORTAL_LEAVES","TEXT_ORDER_WHEN_MORTAL_SCREAMS","TEXT_ORDER_WHEN_MORTAL_FLEES","TEXT_ORDER_WHEN_POWER_USED","TEXT_ORDER_WHEN_HAUNTER_USES_POWER","","TEXT_ORDER_WHEN_WEATHER_IS_VALUE","","TEXT_ORDER_TO_CHASE_MORTAL","TEXT_ORDER_IF_NO_MORTALS_PRESENT","TEXT_ORDER_UNLESS_SEVERAL_MORTALS_PRESENT","TEXT_ORDER_UNLESS_MORTAL_IS_PRESENT","TEXT_ORDER_UNLESS_TYPE_IS_PRESENT","TEXT_ORDER_IF_MORE_THAN_ONE_MORTAL_IS_PRESENT","TEXT_ORDER_IF_MORTAL_IS_NOT_PRESENT","TEXT_ORDER_IF_NO_TYPE_PRESENT","TEXT_ORDER_IF_POWER_IS_NOT_USED","","TEXT_ORDER_TO_AVOID_MORTAL","TEXT_ORDER_TO_AVOID_TYPE","TEXT_NEW_INSTRUCTION","TEXT_EMPTY_INSTRUCTION","TEXT_EMPTY_CONDITION","TEXT_NULL_CONDITION","TEXT_ORDER_MORTAL","TEXT_ORDER_HAUNTER","TEXT_ORDER_POWER","TEXT_ORDER_TYPE","TEXT_ORDER_VALUE","TEXT_ORDERS_MORTAL_TYPE_ADULTS","TEXT_ORDERS_MORTAL_TYPE_TEENAGERS","","TEXT_ORDERS_MORTAL_TYPE_CHILDREN","TEXT_ORDERS_MORTAL_TYPE_MALES","TEXT_ORDERS_MORTAL_TYPE_FEMALES","TEXT_ORDERS_MORTAL_TYPE_OPPONENTS","TEXT_WEATHER_NONE","TEXT_WEATHER_SNOW","TEXT_WEATHER_RAINING","TEXT_WEATHER_STORM","TEXT_WEATHER_THUNDERSTORM","TEXT_WEATHER_BLIZZARD","TEXT_WEATHER_ICY","TEXT_WEATHER_NIPPY","TEXT_WEATHER_WARM","TEXT_WEATHER_FIRE_RAIN","TEXT_WEATHER_LAVA_RAIN","TEXT_WEATHER_INFERNO","TEXT_WEATHER_WINDY","TEXT_NO_POWER_HELP","TEXT_CUT_LIGHT_POWER_HELP","TEXT_SPARK_POWER_HELP","TEXT_BLOW_FUSE_POWER_HELP","TEXT_STRANGE_BEHAVIOUR_POWER_HELP","TEXT_BLACKOUT_POWER_HELP","TEXT_SPARKSTORM_POWER_HELP","TEXT_WILD_AND_CRAZY_POWER_HELP","TEXT_SURGE_POWER_HELP","TEXT_LEAK_POWER_HELP","TEXT_GORE_POWER_HELP","TEXT_FLOOD_POWER_HELP","TEXT_GUSHING_BLOOD_POWER_HELP","TEXT_SEEPING_BLOOD_POWER_HELP","TEXT_TREMOR_POWER_HELP","TEXT_SLOW_POWER_HELP","TEXT_TRAP_POWER_HELP","TEXT_GRAVE_STALK_POWER_HELP","TEXT_SWALLOW_POWER_HELP","TEXT_QUAKE_POWER_HELP","TEXT_BURIED_ALIVE_POWER_HELP","TEXT_BRIEF_SCARE_POWER_HELP","TEXT_HIDE_AND_SEEK_POWER_HELP","TEXT_CHASE_POWER_HELP","TEXT_DEADLY_PURSUIT_POWER_HELP","TEXT_ETHEREAL_GIFT_POWER_HELP","TEXT_SHAPESHIFTER_POWER_HELP","TEXT_LOATHSOME_ASPECT_POWER_HELP","TEXT_TROJAN_GIFT_POWER_HELP","TEXT_ABHORRENT_ASPECT_POWER_HELP","","TEXT_INTRIGUE_POWER_HELP","TEXT_FASCINATE_POWER_HELP","TEXT_OBSESSION_POWER_HELP","TEXT_DREAMTHIEF_POWER_HELP","TEXT_UNCOVER_FEAR_POWER_HELP","TEXT_SLEEP_POWER_HELP","TEXT_SLEEPWALK_POWER_HELP","TEXT_DREAM_DEMON_POWER_HELP","TEXT_FLUSTER_POWER_HELP","TEXT_SHATTERED_NERVES_POWER_HELP","TEXT_TASTE_AURA_POWER_HELP","TEXT_AURA_READING_POWER_HELP","TEXT_UNEARTHLY_CALM_POWER_HELP","TEXT_EXPOSE_FEARS_POWER_HELP","TEXT_FRIGHT_POWER_HELP","TEXT_DREAD_POWER_HELP","TEXT_NUMB_POWER_HELP","TEXT_TERRORISE_POWER_HELP","TEXT_PARALYSE_POWER_HELP","TEXT_PHOBIA_POWER_HELP","TEXT_SCARED_TO_DEATH_POWER_HELP","TEXT_DELUSION_POWER_HELP","TEXT_MANIA_POWER_HELP","TEXT_PSYCHOTIC_RAGE_POWER_HELP","TEXT_KINESIS_POWER_HELP","TEXT_UNNATURAL_ERECTION_POWER_HELP","TEXT_TWISTER_POWER_HELP","TEXT_TK_STORM_POWER_HELP","TEXT_STRANGE_VISION_POWER_HELP","TEXT_HYPNOTIC_IMAGE_POWER_HELP","TEXT_SPOOKY_SURPRISE_POWER_HELP","TEXT_GHOSTLY_APPARITION_POWER_HELP","","TEXT_TERROR_INCARNATE_POWER_HELP","","TEXT_TWIST_REFLECTION_POWER_HELP","TEXT_THING_IN_THE_MIRROR_POWER_HELP","TEXT_MACABRE_REFLECTION_POWER_HELP","TEXT_CLONE_POWER_HELP","TEXT_MOAN_POWER_HELP","TEXT_FOOTSTEPS_POWER_HELP","TEXT_RATTLE_CHAINS_POWER_HELP","TEXT_LAUGHTER_POWER_HELP","TEXT_HOWL_POWER_HELP","TEXT_PIPING_POWER_HELP","TEXT_INSANE_INVITATION_POWER_HELP","TEXT_SHRIEK_POWER_HELP","TEXT_WAIL_POWER_HELP","TEXT_WHISPER_POWER_HELP","TEXT_SIREN_SONG_POWER_HELP","TEXT_VOICE_ON_THE_WIND_POWER_HELP","TEXT_DISTANT_THUNDER_POWER_HELP","TEXT_THUNDERCLAP_POWER_HELP","TEXT_SHATTERING_SONG_POWER_HELP","TEXT_CACOPHONY_POWER_HELP","TEXT_LINGERING_SMELL_POWER_HELP","TEXT_STINK_POWER_HELP","TEXT_SUSPICIOUS_STENCH_POWER_HELP","TEXT_QUEASY_POWER_HELP","TEXT_CHOKING_ODOUR_POWER_HELP","TEXT_NAUSEA_POWER_HELP","TEXT_FOOLS_ERRAND_POWER_HELP","TEXT_WILD_GEESE_POWER_HELP","TEXT_JINX_POWER_HELP","TEXT_CHARM_POWER_HELP","TEXT_LUCKSTORM_POWER_HELP","TEXT_FLOWER_POWER_POWER_HELP","TEXT_CREEPERS_POWER_HELP","TEXT_TWISTED_VINES_POWER_HELP","TEXT_ARBOREAL_PRISON_POWER_HELP","TEXT_HIDDEN_MAZE_POWER_HELP","TEXT_DOMINATE_POWER_HELP","TEXT_POSSESS_POWER_HELP","TEXT_DANSE_MACABRE_POWER_HELP","TEXT_SCATTERED_SWARM_POWER_HELP","TEXT_DENSE_SWARM_POWER_HELP","TEXT_LEGION_POWER_HELP","TEXT_SWARM_STRIKE_POWER_HELP","TEXT_BITTER_COLD_POWER_HELP","TEXT_ICE_BREATH_POWER_HELP","TEXT_ICY_TOUCH_POWER_HELP","TEXT_FROZEN_STIFF_POWER_HELP","TEXT_FROSTBITE_POWER_HELP","TEXT_SWEAT_POWER_HELP","TEXT_ROAST_POWER_HELP","TEXT_HUMAN_TORCH_POWER_HELP","TEXT_BONFIRE_POWER_HELP","TEXT_INFERNO_POWER_HELP","TEXT_GREAT_BALLS_OF_FIRE_POWER_HELP","TEXT_RAIN_POWER_HELP","TEXT_FOG_POWER_HELP","TEXT_HAILSTONES_POWER_HELP","TEXT_HAUNTED_HAIL_POWER_HELP","TEXT_GATHER_WINDS_POWER_HELP","TEXT_GUSTS_POWER_HELP","TEXT_TEMPEST_POWER_HELP","TEXT_TYPHOON_POWER_HELP","TEXT_HAUNTING101_HELP","TEXT_WEIRDSEANCE_HELP","TEXT_SUMMONERS_HELP","TEXT_DEADFELLAS_HELP","TEXT_CALAMITYVILLE_HELP","TEXT_UNINVITED_HELP","TEXT_UNUSUALSUSPECTS_HELP","TEXT_POULTRYGEIST_HELP","TEXT_FACEPACKS_HELP","TEXT_BLAIRWISP_HELP","TEXT_WHEREWILL_HELP","TEXT_SPOOKYHOLLOW_HELP","TEXT_ABYSMAL_HELP","TEXT_PHANTOM_HELP","TEXT_GHOSTBREAKERS_HELP","TEXT_MORTALJACKET_HELP","TEXT_FIELDNIGHTMARES_HELP","TEXT_CUCKOOSNEST_HELP","TEXT_TRAINSPOOKING_HELP","TEXT_GHOSTMACHINE_HELP","TEXT_TRAINING_LEVEL","TEXT_WILD","TEXT_UNTRAINED","TEXT_HOUSE_BROKEN","TEXT_DOMESTICATED","TEXT_TRAINED","TEXT_MISCHIEVOUS","TEXT_RAMPAGING","TEXT_EMINENT","TEXT_TURBULENT","TEXT_FEARSOME","TEXT_DIABOLICAL","TEXT_TROUBLESOME","TEXT_ANARCHIC","TEXT_DISTINGUISHED","TEXT_RAGING","TEXT_DAUNTING","TEXT_HELLISH","TEXT_VEXATIOUS","TEXT_CHAOTIC","TEXT_GLORIOUS","TEXT_TEMPESTUOUS","TEXT_FORMIDABLE","TEXT_FIENDISH","TEXT_WICKED","TEXT_BERSERK","TEXT_RADIANT","TEXT_FURIOUS","TEXT_AWESOME","TEXT_INFERNAL","TEXT_HAUNTING101_INTRO","TEXT_WEIRD_SEANCE_INTRO","TEXT_SUMMONERS_INTRO","TEXT_DEADFELLAS_INTRO","TEXT_CALAMITYVILLE_HORROR_INTRO","TEXT_UNUSUAL_SUSPECTS_INTRO","TEXT_POULTRYGEIST_INTRO","TEXT_FACEPACKS_INTRO","TEXT_BLAIRWISP_INTRO","TEXT_SPOOKY_HOLLOW_INTRO","TEXT_PHANTOM_OF_THE_OPERATING_ROOM_INTRO","","TEXT_GHOSTBREAKERS_INTRO","TEXT_MORTAL_JACKET_INTRO","TEXT_CUCKOOS_NEST_INTRO","TEXT_TRAINSPOOKING_INTRO","TEXT_HC_FMJ_1","TEXT_HC_CUC_1","TEXT_HC_GI_1","TEXT_HC_BWP_1","TEXT_HC_SUM_1","TEXT_HC_SUM_2B","TEXT_HC_CH_1","TEXT_HC_PG_1","TEXT_HC_DF_1","TEXT_HC_WS_1","TEXT_HC_GB_1","TEXT_HC_US_1","TEXT_HC_H101_1","TEXT_HC_FP_1","TEXT_HC_SH_1","TEXT_HC_TS_1","TEXT_WHIR_BAN","TEXT_SP_HARDBOILED_1","TEXT_SP_HARDBOILED_2","TEXT_SP_HARDBOILED_3","TEXT_SP_HARDBOILED_5","TEXT_SP_SHIVERS_2","TEXT_SP_PAINTER_6","TEXT_SP_FINGERS_1","TEXT_SP_FINGERS_2","TEXT_SP_FINGERS_3","TEXT_SP_FINGERS_4","TEXT_SP_FINGERS_5","TEXT_SP_FINGERS_7","TEXT_SP_COGJAMMER_2","TEXT_SP_HOGWASH_1","TEXT_SP_HOGWASH_2","TEXT_SP_HOGWASH_4","TEXT_SP_HOGWASH_6","TEXT_SP_LUCKY_1","TEXT_SP_LUCKY_2","TEXT_SP_LUCKY_3","TEXT_SP_LUCKY_5","TEXT_CLAT_BAN","TEXT_BUCK_BAN","TEXT_SP_SCARECROW_1","TEXT_SP_SCARECROW_2","TEXT_SP_SCARECROW_3","TEXT_SC_SCARECROW_5","TEXT_SP_TERROREYES_1","TEXT_SP_TERROREYES_2","TEXT_SP_TERROREYES_3","TEXT_SP_TERROREYES_5","TEXT_SP_MAX_FACTOR_1","TEXT_SP_MAX_FACTOR_2","TEXT_SP_MAX_FACTOR_3","TEXT_SP_MAX_FACTOR_5","TEXT_SP_BLUEMURDER_1","TEXT_SP_BLUEMURDER_2","TEXT_SP_BLUEMURDER_LR","TEXT_SP_BLUEMURDER_7","TEXT_SP_MIRAGE_1","TEXT_SP_MIRAGE_2","TEXT_SP_MIRAGE_3","TEXT_SP_MIRAGE_5","TEXT_SP_LADYROSE_5","TEXT_SP_HYPNOS_5","TEXT_SP_DAYDREAMER_1","TEXT_SP_DAYDREAMER_2","TEXT_SP_DAYDREAMER_3","TEXT_SP_DAYDREAMER_7","TEXT_SP_DARKLING_1","TEXT_SP_DARKLING_2","TEXT_SP_DARKLING_3","TEXT_SP_DARKLING_10","TEXT_SP_BLAIRWISP_1","TEXT_SP_BLAIRWISP_2","TEXT_SP_BLAIRWISP_3","TEXT_SP_BLAIRWISP_5","TEXT_GHAST_BAN","TEXT_SP_CARTER_8","TEXT_SP_KNUCKLES_1","TEXT_SP_KNUCKLES_2","TEXT_SP_KNUCKLES_3","TEXT_SP_KNUCKLES_5","TEXT_SP_STATIC_1","TEXT_SP_STATIC_2","TEXT_SP_STATIC_3","TEXT_SP_STATIC_5","TEXT_SP_ELECTROSPASM_1","TEXT_SP_ELECTROSPASM_2","TEXT_SP_ELECTROSPASM_3","TEXT_SP_ELECTROSPASM_5","TEXT_SP_ARCLIGHT_1","TEXT_SP_ARCLIGHT_2","TEXT_SP_ARCLIGHT_3","TEXT_SP_ARCLIGHT_5","TEXT_SP_JORDAN_1","TEXT_SP_JORDAN_2","TEXT_SP_JORDAN_3","TEXT_SP_JORDAN_5","TEXT_SP_MOONSCREAM_1","TEXT_SP_MOONSCREAM_2","TEXT_SP_MOONSCREAM_3","TEXT_SP_MOONSCREAM_5","TEXT_SP_WEATHERWITCH_1","TEXT_SP_WEATHERWITCH_2","TEXT_SP_WEATHERWITCH_3","TEXT_SP_WEATHERWITCH_5","TEXT_SP_BRIG_1","TEXT_SP_BRIG_2","TEXT_SP_BRIG_3","TEXT_SP_BRIG_5","TEXT_SP_BOO_BAN","TEXT_SP_WENDEL_1","TEXT_SP_WENDEL_2","TEXT_SP_WENDEL_3","TEXT_SP_WENDEL_5","TEXT_SP_QUIVER_3","TEXT_WIL_1","TEXT_WIL_2","TEXT_WIL_LR","TEXT_WIL_BAN","TEXT_SP_HARRIET_1","TEXT_SP_HARRIET_2","TEXT_SP_HARRIET_3","TEXT_SP_HARRIET_5","TEXT_SP_BLACKCROW_1","TEXT_SP_BLACKCROW_2","TEXT_SP_BLACKCROW_3","TEXT_SP_BLACKCROW_5","TEXT_SP_DRAGOON_1","TEXT_SP_DRAGOON_2","TEXT_SP_DRAGOON_3","TEXT_SP_DRAGOON_5","TEXT_SP_WINDWALKER_3","TEXT_SP_WHISPERWIND_1","TEXT_SP_WHISPERWIND_2","TEXT_SP_WHISPERWIND_3","TEXT_SP_WHISPERWIND_5","TEXT_SP_AETHER_2","TEXT_SWALL_BAN","TEXT_SP_BANZAI_1","TEXT_SP_BANZAI_3","TEXT_SP_FIRETAIL_1","TEXT_SP_FIRETAIL_2","TEXT_SP_FIRETAIL_3","TEXT_SP_FIRETAIL_5","TEXT_SP_SPARKLE_1","TEXT_SP_SPARKLE_2","TEXT_SP_SPARKLE_3","TEXT_SP_SPARKLE_5","TEXT_SP_RAINDANCER_1","TEXT_SP_RAINDANCER_2","TEXT_SP_RAINDANCER_3","TEXT_SP_RAINDANCER_5","TEXT_SP_WAVEMASTER_1","TEXT_SP_WAVEMASTER_2","TEXT_SP_WAVEMASTER_3","TEXT_SP_WAVEMASTER_5","TEXT_SP_STORMTALON_1","TEXT_SP_STORMTALON_3","TEXT_OUIJA_1","TEXT_OUIJA_2","TEXT_OUIJA_3","TEXT_ACT_I","TEXT_ACT_II","TEXT_ACT_III","TEXT_ACT_EPILOGUE","TEXT_TUT_0_1","TEXT_TUT_0_2","TEXT_TUT_0_4","TEXT_TUT_0_11","TEXT_TUT_0_12","TEXT_TUT_0_13","TEXT_TUT_0_14","TEXT_TUT_0_21","TEXT_TUT_0_22","TEXT_TUT_0_23","TEXT_TUT_0_24","TEXT_TUT_0_25","TEXT_TUT_0_26","TEXT_TUT_0_101","TEXT_TUT_0_102","TEXT_TUT_0_103","TEXT_TUT_0_111","TEXT_TUT_0_112","TEXT_TUT_0_121","TEXT_TUT_1_1","TEXT_TUT_1_3","TEXT_TUT_1_4","TEXT_TUT_1_5","TEXT_TUT_3_1","TEXT_TUT_3_2","TEXT_TUT_3_3","TEXT_TUT_3_4","TEXT_TUT_4_1","TEXT_TUT_4_2","TEXT_TUT_4_3","TEXT_TUT_4_4","TEXT_TUT_4_5","TEXT_TUT_4_6","TEXT_TUT_4_7","TEXT_TUT_5_1","TEXT_TUT_5_2","TEXT_TUT_5_3","TEXT_TUT_6_1","TEXT_TUT_6_2","TEXT_TUT_6_3","TEXT_TUT_6_4","TEXT_TUT_6_5","TEXT_TUT_7_1","TEXT_TUT_7_2","TEXT_TUT_7_3","TEXT_TUT_7_4","TEXT_TUT_8_1","TEXT_TUT_8_2","TEXT_TUT_8_3","TEXT_TUT_8_6","TEXT_TUT_8_7","TEXT_TUT_10_1","TEXT_TUT_10_2","TEXT_TUT_10_3","TEXT_TUT_11_1","TEXT_TUT_12_1","TEXT_TUT_13_1","TEXT_TUT_14_1","TEXT_TUT_21_1","TEXT_TUT_21_2","TEXT_TUT_21_3","TEXT_TUT_21_4","TEXT_TUT_21_5","TEXT_TUT_23_1","TEXT_TUT_24_1","TEXT_TUT_24_3","TEXT_TUT_24_4","TEXT_TUT_26_1","TEXT_TUT_26_2","TEXT_TUT_26_3","TEXT_TUT_27_6","TEXT_TUT_29_1","TEXT_TUT_30_1","TEXT_TUT_30_2","TEXT_TUT_32_11","TEXT_TUT_32_1","TEXT_TUT_32_2","TEXT_TUT_32_3","TEXT_TUT_32_4","TEXT_TUT_32_5","TEXT_TUT_32_6","TEXT_TUT_32_7","TEXT_TUT_32_8","TEXT_TUT_32_9","TEXT_TUT_33_1","TEXT_TUT_33_2","TEXT_TUT_33_3","TEXT_TUT_33_4","TEXT_TUT_33_5","TEXT_TUT_33_6","TEXT_TUT_34_1","TEXT_TUT_35_1","TEXT_TUT_35_2","TEXT_TUT_35_3","TEXT_TUT_35_4","TEXT_TUT_36_1","TEXT_TUT_36_2","TEXT_TUT_37_1","TEXT_TUT_37_2","TEXT_TUT_37_3","TEXT_TUT_37_4","TEXT_TUT_37_5","TEXT_TUT_37_6","TEXT_TUT_39_1","TEXT_TUT_39_2","TEXT_TUT_39_3","TEXT_TUT_40_1","TEXT_TUT_40_2","TEXT_TUT_40_3","TEXT_TUT_40_4","TEXT_TUT_40_5","TEXT_TUT_41_1","TEXT_TUT_41_2","TEXT_TUT_42_1","TEXT_TUT_42_2","TEXT_TUT_42_3","TEXT_TUT_42_4","TEXT_TUT_42_5","TEXT_TUT_42_6","TEXT_TUT_42_7","TEXT_TUT_43_0","TEXT_TUT_43_10","TEXT_TUT_43_1","TEXT_TUT_43_2","TEXT_TUT_43_3","TEXT_TUT_44_1","TEXT_TUT_44_2","TEXT_TUT_44_3","TEXT_TUT_45_1","TEXT_TUT_45_2","TEXT_TUT_45_3","TEXT_TUT_45_4","TEXT_TUT_45_5","TEXT_TUT_45_6","TEXT_TUT_1000_1","TEXT_TUT_1000_2","TEXT_TUT_1001_1","TEXT_TUT_1002_1","TEXT_TUT_1002_2","TEXT_TUT_1003_1","TEXT_TUT_1003_2","TEXT_TUT_1003_3","TEXT_TUT_1003_4","TEXT_TUT_1003_5","TEXT_TUT_1003_6","TEXT_TUT_1003_7","TEXT_TUT_1004_1","TEXT_TUT_1005_1","TEXT_TUT_1005_2","TEXT_TUT_1005_3","TEXT_TUT_1005_4","TEXT_TUT_1005_5","TEXT_TUT_1006_1","TEXT_TUT_1006_2","TEXT_TUT_1007_1","TEXT_TUT_1008_1","TEXT_TUT_1008_2","TEXT_TUT_1009_1","TEXT_TUT_1009_2","TEXT_TUT_1010_1","TEXT_TUT_1010_2","TEXT_TUT_1010_3","TEXT_TUT_1010_4","TEXT_TUT_1011_1","TEXT_TUT_1011_2","TEXT_TUT_1012_1","TEXT_TUT_1012_2","TEXT_TUT_1012_3","TEXT_TUT_1013_1","TEXT_TUT_1013_2","TEXT_TUT_1013_3","TEXT_TUT_1013_4","TEXT_TUT_1013_5","TEXT_TUT_1013_6","TEXT_TUT_1013_7","TEXT_TUT_1013_8","TEXT_TUT_1014_1","TEXT_TUT_1015_1","TEXT_TUT_1015_3","TEXT_TUT_1016_1","TEXT_TUT_1016_2","TEXT_TUT_1017_1","TEXT_TUT_1017_2","TEXT_TUT_1017_3","TEXT_TUT_1018_1","TEXT_TUT_1018_2","TEXT_TUT_1018_3","TEXT_TUT_1018_4","TEXT_TUT_1019_1","TEXT_TUT_1020_1","TEXT_TUT_1021_1","TEXT_TUT_1021_2","TEXT_TUT_1022_1","TEXT_TUT_1022_2","TEXT_TUT_1023_1","TEXT_TUT_1024_1","TEXT_TUT_1024_3","TEXT_TUT_1025_1","TEXT_TUT_1025_2","TEXT_TUT_1025_3","TEXT_TUT_1025_4","TEXT_TUT_1025_5","TEXT_TUT_1025_6","TEXT_TUT_1025_7","TEXT_TUT_1025_8","TEXT_TUT_1025_9","TEXT_TUT_1025_10","TEXT_TUT_1025_11","TEXT_TUT_1025_12","TEXT_TUT_1025_13","TEXT_TUT_1025_14","TEXT_TUT_1025_15","TEXT_TUT_1025_16","TEXT_TUT_1202_1","TEXT_TUT_1204_1","TEXT_TUT_1026_3","TEXT_TUT_1027_1","TEXT_TUT_1027_2","TEXT_TUT_1033_1","TEXT_AUTOSAVE_START","TEXT_AUTOSAVE_AFTER_101","TEXT_AUTOSAVE_AFTER_SEANCE","TEXT_AUTOSAVE_AFTER_CALAMITY","TEXT_AUTOSAVE_AFTER_SUMMONERS","TEXT_AUTOSAVE_AFTER_DEADFELLAS","TEXT_AUTOSAVE_AFTER_SUSPECTS","TEXT_AUTOSAVE_AFTER_BROOMSTICKS","","TEXT_AUTOSAVE_AFTER_POULTRYGEIST","TEXT_AUTOSAVE_AFTER_PHANTOM","TEXT_AUTOSAVE_AFTER_BLAIR","TEXT_AUTOSAVE_AFTER_SPOOKY","TEXT_AUTOSAVE_AFTER_BREAKERS","TEXT_AUTOSAVE_AFTER_JACKET","TEXT_AUTOSAVE_AFTER_CUCKOOS","TEXT_AUTOSAVE_AFTER_TRAINSPOOKING","TEXT_HC_SUM_2A","TEXT_HC_SUM_3B","TEXT_HC_SUM_4","TEXT_HC_SUM_5","TEXT_HC_SUM_6","TEXT_HC_SUM_7","TEXT_HC_DF_3","TEXT_HC_DF_4","TEXT_HC_DF_5","TEXT_HC_DF_6","TEXT_HC_CH_3","TEXT_HC_CH_4","TEXT_HC_CH_5","TEXT_HC_CH_6","TEXT_HC_CH_7","TEXT_HC_CH_8","TEXT_HC_CH_9","TEXT_HC_CH_10","TEXT_HC_CH_11","TEXT_HC_CH_12","TEXT_HC_PG_3","TEXT_HC_PG_4","TEXT_HC_PG_5","TEXT_HC_FP_3","TEXT_HC_FP_4","TEXT_HC_FP_5","TEXT_HC_BWP_3","TEXT_HC_BWP_4","TEXT_HC_BWP_5","TEXT_HC_BWP_6","TEXT_HC_BWP_7","TEXT_HC_SH_3","TEXT_HC_SH_4","TEXT_HC_SH_5","TEXT_HC_SH_6","TEXT_HC_SH_7","TEXT_HC_SH_8","TEXT_HC_SH_9","TEXT_HC_SH_10","TEXT_HC_GI_3","TEXT_HC_GB_3","TEXT_HC_GB_4","TEXT_HC_GB_5","TEXT_HC_GB_6","TEXT_HC_GB_7","TEXT_HC_GB_8","TEXT_HC_GB_9","TEXT_HC_GB_10","TEXT_HC_GB_11","TEXT_HC_GB_12","TEXT_HC_GB_13","TEXT_HC_GB_14","TEXT_HC_GB_15","TEXT_HC_GB_16","TEXT_HC_GB_17","TEXT_HC_GB_18","TEXT_HC_GB_19","TEXT_HC_GB_20","TEXT_HC_GB_21","TEXT_HC_GB_22","TEXT_HC_GB_23","TEXT_HC_GB_24","TEXT_HC_GB_25","TEXT_HC_GB_26","TEXT_HC_GB_27","TEXT_HC_CUC_3","TEXT_HC_CUC_4","TEXT_HC_CUC_5","TEXT_HC_CUC_6","TEXT_HC_CUC_7","TEXT_HC_TS_3","TEXT_HC_TS_4","TEXT_HC_TS_5","TEXT_HC_TS_6","TEXT_HC_TS_7","TEXT_HC_ABORT_1","TEXT_HC_ABORT_2","TEXT_HC_ABORT_3","TEXT_HC_EXIT_1","TEXT_HC_EXIT_2","TEXT_HC_EXIT_3","TEXT_HC_EXIT_4","TEXT_HC_QUIT_1","TEXT_HC_QUIT_2","TEXT_HC_QUIT_3","TEXT_HC_EXTRA_1","TEXT_HC_EXTRA_2","TEXT_HC_EXTRA_3","TEXT_HC_EXTRA_4","TEXT_HC_EXTRA_5","TEXT_HC_EXTRA_6","TEXT_HC_EXTRA_7","TEXT_HC_EXTRA_8","TEXT_HC_EXTRA_9","TEXT_HC_EXTRA_10","TEXT_HC_EXTRA_11","TEXT_HC_EXTRA_12","TEXT_HC_EXTRA_13","TEXT_SP_WEATHERWITCH_4","TEXT_SP_WENDEL_4","TEXT_SP_TERROREYES_4","TEXT_SP_LUCKY_4","TEXT_SP_MOONSCREAM_4","TEXT_SP_MOONSCREAM_6","TEXT_SP_WHISPERWIND_4","TEXT_SP_RAINDANCER_4","TEXT_SP_KNUCKLES_4","TEXT_SP_KNUCKLES_6","TEXT_SP_JORDAN_4","TEXT_SP_JORDAN_6","TEXT_SP_FINGERS_4A","TEXT_SP_FINGERS_6","TEXT_SP_WAVEMASTER_4","TEXT_SP_ARCLIGHT_4","TEXT_SP_ACRLIGHT_6","TEXT_SP_STATIC_4","TEXT_SP_STATIC_6","TEXT_SP_MAX_FACTOR_4","TEXT_SP_ELECTROSPASM_4","TEXT_SP_BLUEMURDER_3","TEXT_SP_BLUEMURDER_4","TEXT_SP_BLUEMURDER_6","TEXT_SP_BANZAI_2","TEXT_SP_HARDBOILED_4","TEXT_SP_FIRETAIL_4","TEXT_SP_MIRAGE_4","TEXT_SP_HOGWASH_3","TEXT_SP_HOGWASH_5","TEXT_SP_BLAIRWISP_4","TEXT_SP_DARKLING_4","TEXT_SP_SPARKLE_4","TEXT_SP_DRAGOON_4","TEXT_SP_BLACKCROW_4","TEXT_SP_BLACKCROW_6","TEXT_SP_SCARECROW_4","TEXT_SP_STORMTALON_2","TEXT_SP_HARRIET_4","TEXT_SP_BRIG_4","TEXT_SP_DAYDREAMER_4","TEXT_SP_DAYDREAMER_5","TEXT_SP_DAYDREAMER_6","TEXT_SP_DARKLING_5","TEXT_SP_DARKLING_6","TEXT_SP_DARKLING_7","TEXT_SP_DARKLING_8","TEXT_SP_DARKLING_9","TEXT_WIL_3","TEXT_WIL_SD","TEXT_SP_DARKLING_11","TEXT_SP_DARKLING_12","TEXT_SP_DARKLING_13","TEXT_SP_SHIVERS_1","TEXT_SP_COGJAMMER_6","TEXT_GHAST_SD","TEXT_SP_BOO_SD","TEXT_SWALL_SD","TEXT_CLAT_SD","TEXT_WHIR_SD","TEXT_SP_AETHER_1","TEXT_SP_QUIVER_2","TEXT_SP_HYPNOS_4","TEXT_BUCK_SD","TEXT_SP_LADYROSE_4","TEXT_SP_PAINTER_5","TEXT_SP_CARTER_9","TEXT_SP_WINDWALKER_1","TEXT_SP_WINDWALKER_2","TEXT_TUT_1028_1","TEXT_TUT_1028_2","TEXT_TUT_1029_1","TEXT_TUT_1029_2","TEXT_TUT_1030_1","TEXT_TUT_1031_1","TEXT_TUT_1032_1","TEXT_DR_KRAUSS_WS_BIO","TEXT_MARCIAHUTZ_PG_BIO","TEXT_FELICITYFARNSWORTH_FP_BIO","TEXT_HELENHIGHWATER_FP_BIO","TEXT_ALLYMCSTICK_FP_BIO","TEXT_CN_MAD_PERSON_A_BIO","TEXT_CN_MAD_PERSON_B_BIO","TEXT_CN_MAD_PERSON_C_BIO","TEXT_CN_MAD_PERSON_D_BIO","TEXT_FATHERWILLIAMMULCAHY_TS_BIO","TEXT_PETERMURRAY_TS_BIO","TEXT_RAYMONDAKROYD_TS_BIO","TEXT_EGONRAMIS_TS_BIO","TEXT_TRICIA_EPITAPH","TEXT_WISAKEJAK_EPITAPH","TEXT_BUCK_NAME","TEXT_PARAPSYCHO_NAME","TEXT_SHAMAN_B_NAME","TEXT_DR_BRUNNER","TEXT_GHOSTBREAKER_D_NAME","TEXT_LAWYER_C_NAME","TEXT_LAWYER_D_NAME","TEXT_LAWYER_E_NAME","TEXT_LAWYER_F_NAME","TEXT_WORKER_C_NAME","TEXT_WORKER_D_NAME","TEXT_WORKER_E_NAME","TEXT_BANK_AGENT_A_NAME","TEXT_BANK_AGENT_B_NAME","TEXT_BANK_AGENT_C_NAME","TEXT_BANK_AGENT_D_NAME","TEXT_BANK_AGENT_E_NAME","TEXT_BANK_AGENT_F_NAME","TEXT_BANKER_A_NAME","TEXT_BANKER_B_NAME","TEXT_BANKER_C_NAME","TEXT_BANKER_D_NAME","TEXT_MR_BIG_A_NAME","TEXT_MR_BIG_B_NAME","TEXT_NO_REFLECTION_POWER","TEXT_NO_REFLECTION_POWER_HELP","TEXT_CALAMITYVILLE","TEXT_ARMYBASE","TEXT_BLAIR","TEXT_TRAIN","TEXT_SORORITY","TEXT_FRAT","TEXT_POLICESTATION","TEXT_GOTHICMANSION","TEXT_ASYLUM","TEXT_SHIP","TEXT_SPOOKY_HOLLOW","TEXT_SPARE1_HELP","TEXT_SPARE2_HELP","TEXT_SPARE3_HELP","TEXT_SPARE4_HELP","TEXT_XX1","TEXT_XX2","TEXT_XX3","TEXT_RESTART_CURRENT_SCENARIO","TEXT_RESTART_CURRENT_SCENARIO_Q","","TEXT_QUIT_CURRENT_SCENARIO","TEXT_FLAMING_HORSEMAN","TEXT_GHOULROOM_POWER_CONFIRM","TEXT_AUTOSAVE_PROGRESS","TEXT_AUTOSAVE_AFTER","TEXT_AUTOSAVE_TEACHING","TEXT_AUTOSAVE_TIMEGATE","TEXT_AUTOSAVE_LOAD","TEXT_AUTOSAVE_DELETE_CONFIRM","TEXT_AUTOSAVE_LOAD_MENU","TEXT_AUTOSAVE_FAILED","TEXT_COPYRIGHT_SCREEN","TEXT_ORDER_PICK_ON_MORTA_WITH_POWER", "TEXT_FINALE");
			File expFile = getPath("GM Language File (.ut8)","ut8","text","Load language file","Open File",false);
			if(expFile != null){
				BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(expFile), encoding));
				String str;
				String[] temp = null;
				boolean notTab = false;
				while ((str = in.readLine()) != null) {
					if(!str.startsWith("//") && str.length() > 0){
						if(!notTab){
							temp = str.split("\t");
						}else{
							Loop: for(int i = 0; i < str.length(); i++)
							{
							   if(str.charAt(i) == '"'){
								   temp = new String[2];
								   temp[0] =  str.substring(0, i);
								   temp[0] = temp[0].replaceAll("\\s","");
								   temp[1] = str.substring(i+1, str.length()-1);
								   break Loop;
							   }
							}
						}
						if(!notTab){
							if(!temp[0].equals("TEXT_HC_H101_1")){
								notTab = true;
								Loop: for(int i = 0; i < str.length(); i++)
								{
								   if(str.charAt(i) == '"'){
									   temp = new String[2];
									   temp[0] =  str.substring(0, i);
									   temp[0] = temp[0].replaceAll("\\s","");
									   temp[1] = str.substring(i+1, str.length()-1);
									   break Loop;
								   }
								}
							}
						}
						if(text.contains(temp[0])){
							text.set(text.indexOf(temp[0]), temp[1].replace("\"", ""));
						}
					}
				}
	
		        in.close();
		        //mods
				File modsFile = getPath("","","Mods","Select Mod","Select", true);
				File modsFile1 = null;
				if(modsFile != null){
					modsFile1 = new File(modsFile.getAbsolutePath() + "\\" + "Addresses" + "\\");
				}
				if(modsFile1 != null){
					try{
						File[] listOfFiles = modsFile1.listFiles();
						for(File file : listOfFiles){
							if(file.isFile()){
									String[] sArray = file.getName().split("-");
									if(sArray.length > 1){
										int index = Integer.parseInt(sArray[0]);
										int index2 = Integer.parseInt(sArray[1]);
										Path path = Paths.get(file.getAbsolutePath());
										if(sArray[2].length() == 8){
											data.get(index).get(index2).user = Files.readAllBytes(path);
										}else{
											data.get(index).get(index2).newIconData = Files.readAllBytes(path);
										}
									}	
							}
						}
					}catch(Exception e){e.printStackTrace();}
				}
				if(modsFile != null){
					try{
						BufferedReader in2 = new BufferedReader(new InputStreamReader(new FileInputStream(gdPath+"\\"+"Mods"+"\\"+modsFile.getName()+".ini"), encoding));
						String str2;
						boolean files = false;
						DefaultListModel dlm = (DefaultListModel) list.getModel();
						while ((str2 = in2.readLine()) != null) {
							String[] tempArray = str2.split("=");
							if(files){
								Path path1 = Paths.get(modsFile.getAbsolutePath()+"\\"+tempArray[0]);
								Path path2 = Paths.get(gdPath+"\\"+"Temp"+"\\"+tempArray[0]);
								Files.copy(path1, path2,StandardCopyOption.REPLACE_EXISTING);
								dlm.addElement(str2);
							}
							
							if(str2.startsWith("Title")){
								tfTitle.setText(tempArray[1]);
							}
							if(str2.startsWith("Author")){
								if(tempArray.length > 1){
									tfAuthor.setText(tempArray[1]);
								}
							}
							if(str2.startsWith("Version")){
								if(tempArray.length > 1){
									tfVersion.setText(tempArray[1]);
								}
							}
							if(str2.startsWith("Info")){
								if(tempArray.length > 1){
									tfDescription.setText(tempArray[1]);
								}
							}
							if(str2.startsWith("[Files]")){
								files = true;
							}
						}
					}catch(Exception e){e.printStackTrace();}
				}
		        
		        
				//make comboBoxes
		        
		        
				modelAdd = Arrays.asList(9291736,9291748,9291760,9291776,9291788,9291804,9288864,9281568,9281556,9281544,9281532,9323892,9323796,9299004,9298988,9298972,9298956,9319556,9319544,9319532,9264240,9264252,9264192,9264200,9264208,9264220,9264176,9264080,9264164,9264136,9264152,9264108,9264096,9267544,9249408,9256292,9256304,9231644,9237136,9274492,9274676,9274476,9274688,9274700,9274712,9274724,9274736,9274516,9274504,9274528,9274468,9281624,9231396,9281716,9286568,9281708,9281500,9281508,9281516,9198220,9198212,9237108,9231628,9231576,9231560,9231596,9231700,9231708,9198160,9231724,9231532,9197884,9237052,9237068,9243248,9243264,9243280,9307156,9307176,9307188,9307200,9303988,9307252,9307272,9307280,9307004,9307212,9307220,9307228,9307240,9281164,9281184,9225128,9225112,9225180,9225208,9224812,9225172,9231408,9231512,9231668,9231692,9325208,9325188,9325168,9325152,9325132,9327368);
				
				hashAdd = Arrays.asList
				
				mortalAdd = Arrays.asList(9224804,9264120,9266760,9237084,9225156,9325688);
				
				animAdd = Arrays.asList(9886688,9888096,9885280,9882464,9883872,9879648,9878240,9881056,9876832);
				
				spawnAdd = Arrays.asList
		        
				iconAdd = Arrays.asList
				
				
				cbMissions.setModel(new DefaultComboBoxModel<String>(new String[]{text.get(863),text.get(864),text.get(867),text.get(865),text.get(866),text.get(869),text.get(871),text.get(870),text.get(876),text.get(872),text.get(874),text.get(877),text.get(878),text.get(880),text.get(2313)}));
				cbModel.setModel(new DefaultComboBoxModel<String>(new String[]{"TowelGirl2","PyjamaGirl","PyjamaGirlBear","TowelGirl","BathrobeGirl","NightieGirl","NightieGirlRough","FratBoy1","FratBoy2","FratBoy3","FratBoy4","FratBoy5","FratBoy6","SororityGirl1","SororityGirl4","SororityGirl2","SororityGirl3","FratGeek1","FratGeek2","FratGeek3","CV_Father","CV_Mother","CV_Boy","CV_Girl","CV_TeenBoy2","GM_TeenRebel_Girl","CV_Grandfather","CV_Grandmother","PS_CopFem","PS_Policeman","TeenWitch1","TeenWitch2","TeenWitch3","Workman","ResearcherC","ResearcherB","ResearcherA","Professor","EN_ParaPsycho","DF_MobbBoss","DF_Moll1","DF_RightHandMan","DF_Moll2","DF_Hench4","DF_Hench3","DF_Hench2","DF_Hench1","DF_Captain","DF_Engineer","Croupier","GM_Cook","PS_CopFat","HL_Doctor","Waitress","GM_Housekeeper","JulieWu","RoClan2","RoClan1","RomeoRodriguez","fratboywalkman","medium","GhoulsRUs_Thin","Patient_Male","Patient_Male_Fat","Patient_Female","Patient_Female_Fat","Nurse","doctor_female","lovedoctor","Surgeon","BoyScout","pyjama_childm","GhoulsRUs_Fat","GhoulsRUs_Fem","FilmStudentC","FilmStudentB","FilmStudentA","SH_Hobo","Farmhand","SH_Grandma","SH_Grandpa","SH_Cousin","SH_Eldest_Daughter","SH_Son","SH_Wife","SH_Farmer","SH_Girl","SH_Boy","SH_TeenGirl","SH_TeenBoy","GhostBreakerMale","GhostBreakerFem","MB_Squadie","MB_Soldierfem","MB_Corporal","MB_Sergeant","MB_Colonel","Priest","MetalBruceElm","MetalStraightJacket","Orderly","Sister","GhostbreakerMale1","GhostbreakerMale2","GhostbreakerFem1","GhostbreakerFem","GhostbreakerMale","StayKold"}));
				cbType.setModel(new DefaultComboBoxModel<String>(new String[]{"Mortal","Wiccan","Medium","Ghostbreaker","Priest","StayKoldMan"}));
				cbModel2.setModel(new DefaultComboBoxModel<String>(new String[]{"TowelGirl2","PyjamaGirl","PyjamaGirlBear","TowelGirl","BathrobeGirl","NightieGirl","NightieGirlRough","FratBoy1","FratBoy2","FratBoy3","FratBoy4","FratBoy5","FratBoy6","SororityGirl1","SororityGirl4","SororityGirl2","SororityGirl3","FratGeek1","FratGeek2","FratGeek3","CV_Father","CV_Mother","CV_Boy","CV_Girl","CV_TeenBoy2","GM_TeenRebel_Girl","CV_Grandfather","CV_Grandmother","PS_CopFem","PS_Policeman","TeenWitch1","TeenWitch2","TeenWitch3","Workman","ResearcherC","ResearcherB","ResearcherA","Professor","EN_ParaPsycho","DF_MobbBoss","DF_Moll1","DF_RightHandMan","DF_Moll2","DF_Hench4","DF_Hench3","DF_Hench2","DF_Hench1","DF_Captain","DF_Engineer","Croupier","GM_Cook","PS_CopFat","HL_Doctor","Waitress","GM_Housekeeper","JulieWu","RoClan2","RoClan1","RomeoRodriguez","fratboywalkman","medium","GhoulsRUs_Thin","Patient_Male","Patient_Male_Fat","Patient_Female","Patient_Female_Fat","Nurse","doctor_female","lovedoctor","Surgeon","BoyScout","pyjama_childm","GhoulsRUs_Fat","GhoulsRUs_Fem","FilmStudentC","FilmStudentB","FilmStudentA","SH_Hobo","Farmhand","SH_Grandma","SH_Grandpa","SH_Cousin","SH_Eldest_Daughter","SH_Son","SH_Wife","SH_Farmer","SH_Girl","SH_Boy","SH_TeenGirl","SH_TeenBoy","GhostBreakerMale","GhostBreakerFem","MB_Squadie","MB_Soldierfem","MB_Corporal","MB_Sergeant","MB_Colonel","Priest","MetalBruceElm","MetalStraightJacket","Orderly","Sister","GhostbreakerMale1","GhostbreakerMale2","GhostbreakerFem1","GhostbreakerFem","GhostbreakerMale","StayKold", "FratBoy7", "FratBoy8","PS_Policeman4","PS_Policeman3","PS_CopFem2","PS_Policeman2","Patient_Male2","Patient_Male_Fat1","Patient_Male1","Patient_Female1","Nurse7","Nurse6","Nurse3","Nurse2","Nurse1","doctor_female1","Farmhand2","GhostBreakerMale_G","GhostBreakerFem_F","GhostBreakerFem_E","GhostBreakerMale_D","GhostBreakerMale_C","MB_Squadie5","MB_Squadie4","MB_Soldierfem3","MB_Soldierfem2","MB_Squadie3","MB_Squadie2","MB_Corporal2","MB_Squadie1","MB_Soldierfem1","MB_Corporal1","MB_Sergeant2","MB_Sergeant1","MetalStraightjacket3","MetalStraightjacket2","MetalStraightjacket1","Orderly2","Orderly1","Nurse5","Nurse4","stayKoldMan"}));
				cbSpawn.setModel(new DefaultComboBoxModel<String>(new String[]{"MDL-SH_SPAWN_SORORITY_GIRL_M","MDL-SH_SPAWN_SORORITY_GIRL_F","MDL-SH_SPAWN_SORORITY_GIRL_L","MDL-SH_SPAWN_SORORITY_GIRL_I","MDL-SH_SPAWN_SORORITY_GIRL_G","Mortal10","MDL-SH_SPAWN_SORORITY_GIRL_J","Mortal1","Mortal3","Mortal4","Mortal5","Mortal7","Mortal6","Mortal8","Mortal9","NOT_SPAWNED","Geek1","Geek2","Geek3","MDL-SPAWN_Dining","MDL-SPAWN_Kitchen","MDL-SPAWN_Bedroom1","MDL-SPAWN_Bedroom2","MDL-SPAWN_Family","MDL-SPAWN_Bedroom3","MDL-SPAWN_Hall","MDL-SPAWN_Lounge","MDL-SPAWN_researcherC","MDL-SPAWN_researcherB","MDL-SPAWN_researcherA","MDL-SPAWN_Mob_Boss","MDL-SPAWN_Boss_Moll","MDL-SPAWN_Right_Hand_Man","MDL-SPAWN_Second_Moll","MDL-SPAWN_Goon_D","MDL-SPAWN_Goon_C","MDL-SPAWN_Goon_B","MDL-SPAWN_Goon_A","MDL-SPAWN_Captain_A","MDL-SPAWN_Engineer_A","MDL-SPAWN_Croupier","MDL-SPAWN_Cook_B","MDL-SPAWN_PoliceCaptain","MDL-SPAWN_PoliceG","MDL-SPAWN_PoliceB","MDL-SPAWN_PoliceE","MDL-SPAWN_PoliceD","MDL-SPAWN_PoliceC","MDL-SPAWN_PoliceF","MDL-SPAWN_PoliceA","MDL-SPAWN_WaitressA","MDL-SPAWN_Cleaner","MDL-SPAWN_Handyman","MDL-SPAWN_MotherA","MDL-SPAWN_FatherA","MDL-SPAWN_MadScientist","MDL-SPAWN_Girl","MDL-SPAWN_FratF","MDL-SPAWN_FratE","MDL-SPAWN_FratC","MDL-SPAWN_FratA","MDL-SPAWN_GangC","MDL-SPAWN_GangB","MDL-SPAWN_GangA","FP_SPAWN_SORORITY_GIRL_A","FP_SPAWN_SORORITY_GIRL_G","FP_SPAWN_SORORITY_GIRL_H","FP_SPAWN_SORORITY_GIRL_K","FP_SPAWN_SORORITY_GIRL_D","FP_SPAWN_SORORITY_GIRL_F","FP_SPAWN_SORORITY_GIRL_L","FP_SPAWN_SORORITY_GIRL_M","FP_SPAWN_FP_HEAD_FRATBOY","SPAWN_FP_FRATBOY_C","SPAWN_FP_FRATBOY_K","CircleC","CircleB","CircleA","SPAWN_TeenBoyA","SPAWN_FatherA","SPAWN_MotherA","SPAWN_YoungBoyA","SPAWN_YoungGirlA","SPAWN_TeenGirlA","SPAWN_GrandFatherA","SPAWN_GrandMotherA","MDL-SPAWN_PatientH","MDL-SPAWN_PatientG","MDL-SPAWN_PatientF","MDL-SPAWN_PatientE","MDL-SPAWN_PatientD","MDL-SPAWN_PatientC","MDL-SPAWN_PatientB","MDL-SPAWN_PatientA","MDL-SPAWN_NurseI","MDL-SPAWN_NurseH","MDL-SPAWN_NurseE","MDL-SPAWN_NurseA","MDL-SPAWN_NurseC","MDL-SPAWN_NurseB","SPAWN_NurseD","SPAWN_DoctorC","SPAWN_DoctorD","SPAWN_DoctorE","SPAWN_DoctorB","MDL-SPAWN_DoctorA","SPAWN_KidB","SPAWN_KidA","MDL-SPAWN_studentC","MDL-SPAWN_studentB","MDL-SPAWN_studentA","SPAWN_madmanA","MDL-SPAWN_hobo","MDL-SPAWN_farmhandb","MDL-SPAWN_farmhanda","MDL-SPAWN_grandmother","MDL-SPAWN_grandfather","MDL-SPAWN_cousina","MDL-SPAWN_eldestdaughter","MDL-SPAWN_eldestson","MDL-SPAWN_wife","MDL-SPAWN_father","SPAWN_youngestdaughter","MDL-SPAWN_youngestson","MDL-SPAWN_middledaughter","MDL-SPAWN_middleson","MDL-SPAWN_GdesG","MDL-SPAWN_GdesF","MDL-SPAWN_GdesE","MDL-SPAWN_GdesD","MDL-SPAWN_GdesC","MDL-SPAWN_GdesB","MDL-SPAWN_GdesA","MDL-SPAWN_GbrC","MDL-SPAWN_GbrB","MDL-SPAWN_GbrA","MDL-Army_Dude_M","MDL-Army_Dude_L","MDL-Army_Dude_K","MDL-Army_Dude_J","MDL-Army_Dude_I","MDL-Army_Dude_H","MDL-Army_Dude_G","MDL-Army_Dude_F","MDL-Army_Dude_E","MDL-Army_Dude_D","MDL-Army_Dude_C","MDL-Army_Dude_B","MDL-Army_Dude_A","MDL-Corporal_A","MDL-Sergeant_A","MDL-Sergeant_Major_A","MDL-Colonel_A","MDL-Chaplin_A","MDL-SPAWN_bruce_elm","MDL-SPAWN_Mad4","MDL-SPAWN_Mad3","MDL-SPAWN_Mad2","MDL-SPAWN_Mad1","MDL-SPAWN_Scientist","MDL-SPAWN_MadEscapeeA","MDL-SPAWN_OrderlyC","MDL-GhostBreaker1","GdesB","GdesD","GdesE","GdesF","GdesG","GbraA","GbraB","GbraC"}));
				cbAnimation.setModel(new DefaultComboBoxModel<String>(new String[]{"Female","Male","Kid","Wiccan","Medium","GB Male","GB Female","Priest","StayCold"}));
				cbName.setModel(new DefaultComboBoxModel<String>(text.toArray(new String[0])));
				cbBio.setModel(new DefaultComboBoxModel<String>(text.toArray(new String[0])));
				cbMood.setModel(new DefaultComboBoxModel<String>(new String[]{text.get(603),text.get(604),text.get(605),text.get(606),text.get(608),text.get(609),text.get(610)}));
				cbUncFear.setModel(new DefaultComboBoxModel<String>(new String[]{text.get(887),text.get(611),text.get(612),text.get(613),text.get(614),text.get(615),text.get(616),text.get(617),text.get(618),text.get(619),text.get(620),text.get(621),text.get(622),text.get(623),text.get(624)}));
				cbCovFear.setModel(new DefaultComboBoxModel<String>(new String[]{text.get(887),text.get(611),text.get(612),text.get(613),text.get(614),text.get(615),text.get(616),text.get(617),text.get(618),text.get(619),text.get(620),text.get(621),text.get(622),text.get(623),text.get(624)}));
				cbImg.setModel(new DefaultComboBoxModel<String>(new String[]{"towelgirl2","pyjamagirl1","pyjamagirl2","towelgirl","bathrobegirl","nightiegirl","nightiegirl2","fratboy1","fratboy2","fratboy3","fratboy4","fratboy5","fratboy6","sororitygirl1","sororitygirl4","sororitygirl2","sororitygirl3","fratgeek1","fratgeek2","fratgeek3","cv_father","cv_mother","cv_boy","cv_girl","cv_teenboy","gm_teenrebel_girl","cv_grandfather","cv_grandmother","Police_C","Police_B","teenwitch1","teenwitch2","teenwitch3","workman","researcherC","researcherB","researcherA","professor","parapsychologist","mobboss","moll1","righthandman","moll2","henchmanB","henchmanA","henchmanpok","henchmanwide","df_captain","engineer","croupier","cook","Police_Captain","Police_G","Police_F","hl_doctor","Police_D","Police_A","waitress","Cleaner_A","juliewu","Gang_C","Gang_B","Gang_A","fratboywalkman","medium","ghoulsrus_thin","patientmale","patient_male_fat1","patient_male1","patient_male_fat","patient_female1","patient_female_fat","patient_female","patient_male","nurse7","nurse6","nurse3","nurse2","nurse1","nurse4","nurse","doctor_female2","lovedoctor","doctor_female1","surgeon","boyscout","pyjama_childm","ghoulsrus_fat","ghoulsrus_fem","filmStudentC","filmStudentB","filmStudentA","sh_hobo","farmhand","sh_grandma","sh_grandpa","sh_cousin","sh_eldestdaughter","sh_son","sh_wife","sh_farmer","sh_girl","sh_boy","sh_teengirl","sh_teenboy","ghostbreakermale","ghostbreakerfem","mb_squadie","mb_soldierfem","mb_corporal","mb_sergeant","mb_colonel","priest","straightjacket","orderly2","orderly1","sister","ghostbreakermale1","ghostbreakermale2","ghostbreakerfem1"}));
				cbAI.setModel(new DefaultComboBoxModel<String>(new String[]{"None","Male","Female"}));
				
				
				cbMissions.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent arg0) {
						cleanMortal();
					}
				});
				

				cbMortals.addActionListener (new ActionListener () {
					public void actionPerformed(ActionEvent arg0) {
						if(cbMortals.getSelectedIndex() != -1){
							if(!firstTime){
								getByteArrayFromData();
							}
							pIndx = cbMissions.getSelectedIndex();
							pIndx2 = cbMortals.getSelectedIndex();
							
							Mortal temp = data.get(pIndx).get(pIndx2);
							byte[] mData;
							byte[] iData = temp.iconData;
							if(temp.user == null){
								mData = temp.old;
							}else{
								mData = temp.user;
							}
							
							//load data
							spinnerId.setValue(toInteger(mData,0));
							cbModel.setSelectedIndex(modelAdd.indexOf(toInteger(mData,4)));
							cbType.setSelectedIndex(mortalAdd.indexOf(toInteger(mData,8)));
							cbModel2.setSelectedIndex(hashAdd.indexOf(toInteger(mData,12)));
							cbSpawn.setSelectedIndex(spawnAdd.indexOf(toInteger(mData,16)));
							cbAnimation.setSelectedIndex(animAdd.indexOf(toInteger(mData,20)));
							spinnerUnk.setValue(toInteger(mData,24));
							tfUnkOff.setText(makeString(mData,28,4));
							tfUnkDataOff.setText(makeString(mData,32,4));
							spinnerScript.setValue(toInteger(mData,36));
							cbName.setSelectedIndex(toInteger(mData,40));
							cbBio.setSelectedIndex(toInteger(mData,44));
							spinnerUnk2.setValue(toInteger(mData,48));
							cbAI.setSelectedIndex(toInteger(mData,52));
							cbMood.setSelectedIndex(toInteger(mData,56)-40);
							cbUncFear.setSelectedIndex(toInteger(mData,60));
							cbCovFear.setSelectedIndex(toInteger(mData,64));
							spinnerUnk4.setValue(toInteger(mData,68));
							spinnerUnk5.setValue(toInteger(mData,72));
							spinnerUnk6.setValue(toInteger(mData,76));
							sliderBel.setValue(100-((int)(toFloat(mData,80))));
							sliderIns.setValue((int)(toFloat(mData,84)));
							sliderWill.setValue((int)(toFloat(mData,88)));
							spinnerUnk7.setValue(toInteger(mData,92));
							spinnerUnk8.setValue(toInteger(mData,96));
							int mortalType = toInteger(mData,100);
				        	cb1.setSelected(checkBox(mortalType, 0));
				        	cb2.setSelected(checkBox(mortalType, 1));
				        	cb3.setSelected(checkBox(mortalType, 2));
				        	cb4.setSelected(checkBox(mortalType, 3));
				        	cb5.setSelected(checkBox(mortalType, 4));
				        	cb6.setSelected(checkBox(mortalType, 5));
				        	cb7.setSelected(checkBox(mortalType, 6));
				        	cb8.setSelected(checkBox(mortalType, 7));
				        	cb9.setSelected(checkBox(mortalType, 8));
				        	cb10.setSelected(checkBox(mortalType, 9));
				        	cb11.setSelected(checkBox(mortalType, 10));
				        	cb12.setSelected(checkBox(mortalType, 11));
				        	cb13.setSelected(checkBox(mortalType, 12));
				        	cb14.setSelected(checkBox(mortalType, 13));
				        	cb15.setSelected(checkBox(mortalType, 14));
				        /*	if(temp.newIconPath != null){
				        		cbCustomImg.setSelected(true);
				        	}else{
				        		cbCustomImg.setSelected(false);
				        	}*/
				        	checkImage();
				        	
							firstTime = false;
						}
					}
				});
				cbImg.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent arg0) {
						if(cbImg.getSelectedIndex() != -1){
							cleanImage();
						}
					}
				});
				cbMissions.setSelectedItem(cbMissions.getItemAt(0));
			}
		}catch(Exception e){e.printStackTrace();}

	}
	
	public static boolean delete(File file) {

	    File[] flist = null;

	    if(file == null){
	        return false;
	    }

	    if (file.isFile()) {
	        return file.delete();
	    }

	    if (!file.isDirectory()) {
	        return false;
	    }

	    flist = file.listFiles();
	    if (flist != null && flist.length > 0) {
	        for (File f : flist) {
	            if (!delete(f)) {
	                return false;
	            }
	        }
	    }

	    return file.delete();
	}
	
	
	private void savefile(){
		getByteArrayFromData();
		if(tfTitle.getText().length() > 0){
			String path = gdPath+"\\"+"Mods" +"\\"+tfTitle.getText();
			File file = new File(path);
			if(!file.exists()){
				file.mkdirs();
			}else{
				delete(file);
				file.mkdirs();
			}
			String path2 = gdPath+"\\"+"Mods" +"\\"+tfTitle.getText()+"\\"+"Addresses";
			File file2 = new File(path2);
			if(!file2.exists()){
				file2.mkdirs();
			}
			StringBuffer sb = new StringBuffer();
			for(int i = 0; i<data.size(); i++){
				for(int j = 0; j<data.get(i).size(); j++){
				 	Mortal temp = data.get(i).get(j);
					if(temp.user != null){
						try{
							FileChannel out = new FileOutputStream(path2+"\\"+i+"-"+j+"-"+temp.mortalAdress).getChannel();
							ByteBuffer bb = ByteBuffer.allocate(104);
							bb.put(temp.user);
							bb.rewind();
							out.write(bb);
							out.close();
						}catch(Exception e){e.printStackTrace();}
					}
					if(temp.newIconData != null){
						try{
							FileChannel out = new FileOutputStream(path2+"\\"+i+"-"+j+"-"+temp.iconAdress).getChannel();
							ByteBuffer bb = ByteBuffer.allocate(8);
							bb.put(temp.newIconData);
							bb.rewind();
							out.write(bb);
							out.close();
						}catch(Exception e){e.printStackTrace();}
					}
				/*	if(temp.newIconPath != null){
						String[] sArray = temp.newIconPath.split("\\\\");
						if(temp.newIconData != null){
							sb.append(sArray[sArray.length-1]+ "=" + "ui" +"\\"+cbImg.getItemAt(iconAdd.indexOf(toInteger(temp.newIconData,4))).toString()+".tga" + System.lineSeparator());
						}else{
							sb.append(sArray[sArray.length-1]+ "=" + "ui" +"\\"+cbImg.getItemAt(iconAdd.indexOf(toInteger(temp.iconData,4))).toString()+".tga" + System.lineSeparator());
						}
					}*/
					/*if(temp.newModelPath != null){
						String[] sArray = temp.newModelPath.split("\\\\");
						String tempName = null;
						if(temp.user != null){
							tempName = cbModel.getItemAt(modelAdd.indexOf(toInteger(temp.user,4))).toString();
						}else{
							tempName = cbModel.getItemAt(modelAdd.indexOf(toInteger(temp.old,4))).toString();
						}
						sb.append(sArray[sArray.length-1] + "=" + "characters" +"\\"+ "MORTALS"+ "\\" + tempName + "\\"+ tempName + ".bsp" + System.lineSeparator());
					}*/
				}
			}
			try{
				PrintWriter out = new PrintWriter(gdPath+"\\"+"Mods"+"\\"+tfTitle.getText()+".ini");
			    out.write("[Info]" + System.lineSeparator());
			    out.write("Title=" + tfTitle.getText()+ System.lineSeparator());
			    out.write("Author=" + tfAuthor.getText()+ System.lineSeparator());
			    LocalDate localDate = LocalDate.now();
			    out.write("Date=" + (DateTimeFormatter.ofPattern("dd/MM/yyy").format(localDate))+ System.lineSeparator());
			    out.write("Version=" + tfVersion.getText()+ System.lineSeparator());
			    out.write("Info=" + tfDescription.getText()+ System.lineSeparator());
			    int size = list.getModel().getSize();
			    boolean filesAdded = false;
			    if(size > 0){
			    	out.write("[Files]" + System.lineSeparator());
			    	filesAdded = true;
			    	for(int j = 0; j<size; j++){
			    		out.write(list.getModel().getElementAt(j).toString() + System.lineSeparator());
			    	}
			    }
			    if(sb.length()> 0){
			    	if(!filesAdded){
			    		out.write("[Files]" + System.lineSeparator());
			    	}
			    	out.write(sb.toString());
			    }
			    out.close();
			}catch(Exception e){e.printStackTrace();}
			File fileTemp = new File(gdPath +"\\" + "Temp" + "\\");
			if(fileTemp.listFiles().length > 0){
				for(File files : fileTemp.listFiles()){
					try{
						Path nPath = Paths.get(path + "\\"+ files.getName());
						Files.copy(files.toPath(), nPath, StandardCopyOption.REPLACE_EXISTING);
					}catch(Exception e){e.printStackTrace();}
				}
			}
			JOptionPane.showMessageDialog(null,"Mod was saved successfully!");
		}else{
			JOptionPane.showMessageDialog(null,"Title of the mod can't be empty");
		}
	}
	
	private void setCurrentDirectory(){
		JFileChooser chooser = new JFileChooser();
		chooser.setDialogTitle("Select GhostData folder");
	    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
	    chooser.setAcceptAllFileFilterUsed(false);
	    if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
	    	 Advapi32Util.registrySetStringValue(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor", "pathFile", chooser.getSelectedFile().toString());
	    }
	}
	
	
	private void initialize() {
		if(!Advapi32Util.registryKeyExists(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor")){
	        Advapi32Util.registryCreateKey(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor");
		}
		if(!Advapi32Util.registryValueExists(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor", "pathFile")){
			setCurrentDirectory();
		}
		if(!Advapi32Util.registryValueExists(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor", "encoding")){
	        Advapi32Util.registrySetStringValue(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor", "encoding", "UTF-8");
		}
		
		
		BasicComboBoxRenderer renderer = new BasicComboBoxRenderer(){
	          public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
	             if (isSelected) {
	                setBackground(list.getSelectionBackground());
	                setForeground(list.getSelectionForeground());
	                if (index > -1) {
	                   list.setToolTipText("Id: " + index +" Hex: "+ String.format("%X",index));
	                }
	             }
	             else {
	                setBackground(list.getBackground());
	                setForeground(list.getForeground());
	             }
	             setFont(list.getFont());
	             setText((value == null) ? "" : value.toString());
	   
	             return this;
	          }
	       };
		
		frmMortalEditor = new JFrame();
		frmMortalEditor.setTitle("Mortal Editor");
		frmMortalEditor.setBounds(100, 100, 714, 538);
		frmMortalEditor.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
		frmMortalEditor.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frmMortalEditor.setResizable(false);
		
		JMenuBar menuBar = new JMenuBar();
		frmMortalEditor.setJMenuBar(menuBar);
		
		JMenu mnFile = new JMenu("File");
		menuBar.add(mnFile);
		
		JMenuItem mntmOpen = new JMenuItem("Open");
		mnFile.add(mntmOpen);
		
		JMenuItem mntmSave = new JMenuItem("Save");
		mnFile.add(mntmSave);
		
		JMenu mnEncoding = new JMenu("Encoding");
		menuBar.add(mnEncoding);
		
		JCheckBoxMenuItem utf8item = new JCheckBoxMenuItem("UTF-8");
		mnEncoding.add(utf8item);
		
		JCheckBoxMenuItem windows1250_item = new JCheckBoxMenuItem("windows-1250");
		mnEncoding.add(windows1250_item);
		
		
		if(Advapi32Util.registryGetStringValue(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor", "encoding").equals("UTF8")){
			utf8item.setSelected(true);
			windows1250_item.setSelected(false);
		}else{
			windows1250_item.setSelected(true);
			utf8item.setSelected(false);
		}
		
		
		JMenu mnHelp = new JMenu("Help");
		menuBar.add(mnHelp);
		
		JMenuItem mntmAbout = new JMenuItem("About");
		mnHelp.add(mntmAbout);
		frmMortalEditor.getContentPane().setLayout(null);
		
		cbMissions = new JComboBox();
		cbMissions.setBounds(383, 129, 224, 20);
		frmMortalEditor.getContentPane().add(cbMissions);
		
		cbMortals = new JComboBox();
		cbMortals.setBounds(618, 129, 84, 20);
		frmMortalEditor.getContentPane().add(cbMortals);
		
		cbModel = new JComboBox();
		cbModel.setBounds(56, 115, 145, 20);
		frmMortalEditor.getContentPane().add(cbModel);
		
		cbType = new JComboBox();
		cbType.setBounds(56, 147, 145, 20);
		frmMortalEditor.getContentPane().add(cbType);
		
		cbModel2 = new JComboBox();
		cbModel2.setBounds(56, 179, 145, 20);
		frmMortalEditor.getContentPane().add(cbModel2);
		
		cbSpawn = new JComboBox();
		cbSpawn.setBounds(65, 211, 136, 20);
		frmMortalEditor.getContentPane().add(cbSpawn);
		
		cbAnimation = new JComboBox();
		cbAnimation.setBounds(83, 243, 118, 20);
		frmMortalEditor.getContentPane().add(cbAnimation);
		
		spinnerScript = new JSpinner();
		spinnerScript.setBounds(59, 276, 142, 20);
		frmMortalEditor.getContentPane().add(spinnerScript);
		
		cbName = new JComboBox();
		cbName.setBounds(140, 10, 229, 20);
		frmMortalEditor.getContentPane().add(cbName);
		
		cbBio = new JComboBox();
		cbBio.setBounds(140, 42, 229, 20);
		frmMortalEditor.getContentPane().add(cbBio);
		
	    cbName.setRenderer(renderer);
	    cbBio.setRenderer(renderer);
		
		cbMood = new JComboBox();
		cbMood.setBounds(257, 147, 112, 20);
		frmMortalEditor.getContentPane().add(cbMood);
		
		cbUncFear = new JComboBox();
		cbUncFear.setBounds(257, 211, 112, 20);
		frmMortalEditor.getContentPane().add(cbUncFear);
		
		cbCovFear = new JComboBox();
		cbCovFear.setBounds(257, 179, 112, 20);
		frmMortalEditor.getContentPane().add(cbCovFear);

		
		sliderWill = new JSlider();
		sliderWill.setBounds(269, 243, 100, 20);
		frmMortalEditor.getContentPane().add(sliderWill);
		
		sliderWill.addChangeListener(new ChangeListener(){
			public void stateChanged(ChangeEvent e){
				sliderWill.setToolTipText(""+sliderWill.getValue());
			}
		});
		
		sliderBel = new JSlider();
		sliderBel.setBounds(269, 305, 100, 20);
		frmMortalEditor.getContentPane().add(sliderBel);
		
		
		sliderBel.addChangeListener(new ChangeListener(){
			public void stateChanged(ChangeEvent e){
				sliderBel.setToolTipText(""+sliderBel.getValue());
			}
		});
		
		sliderIns = new JSlider();
		sliderIns.setBounds(269, 276, 100, 20);
		frmMortalEditor.getContentPane().add(sliderIns);
		
		sliderIns.addChangeListener(new ChangeListener(){
			public void stateChanged(ChangeEvent e){
				sliderIns.setToolTipText(""+sliderIns.getValue());
			}
		});
		
		cb1 = new JCheckBox("Electrical");
		cb1.setBounds(12, 333, 85, 23);
		frmMortalEditor.getContentPane().add(cb1);
		
		cb2 = new JCheckBox("Mirror");
		cb2.setBounds(12, 364, 97, 23);
		frmMortalEditor.getContentPane().add(cb2);
		
		cb3 = new JCheckBox("Air");
		cb3.setBounds(12, 395, 97, 23);
		frmMortalEditor.getContentPane().add(cb3);
		
		cb4 = new JCheckBox("Fire");
		cb4.setBounds(12, 426, 97, 23);
		frmMortalEditor.getContentPane().add(cb4);
		
		cb5 = new JCheckBox("Water");
		cb5.setBounds(12, 457, 68, 23);
		frmMortalEditor.getContentPane().add(cb5);
		
		cb6 = new JCheckBox("Corpse");
		cb6.setBounds(113, 333, 68, 23);
		frmMortalEditor.getContentPane().add(cb6);
		
		cb7 = new JCheckBox("Child");
		cb7.setBounds(113, 364, 68, 23);
		frmMortalEditor.getContentPane().add(cb7);
		
		cb8 = new JCheckBox("Inside");
		cb8.setBounds(113, 395, 68, 23);
		frmMortalEditor.getContentPane().add(cb8);
		
		cb9 = new JCheckBox("Earth");
		cb9.setBounds(113, 426, 97, 23);
		frmMortalEditor.getContentPane().add(cb9);
		
		cb10 = new JCheckBox("Outside");
		cb10.setBounds(113, 457, 97, 23);
		frmMortalEditor.getContentPane().add(cb10);
		
		cb11 = new JCheckBox("Thoroughfare");
		cb11.setBounds(217, 333, 106, 23);
		frmMortalEditor.getContentPane().add(cb11);
		
		cb12 = new JCheckBox("Emotional");
		cb12.setBounds(217, 364, 97, 23);
		frmMortalEditor.getContentPane().add(cb12);
		
		cb13 = new JCheckBox("Violence");
		cb13.setBounds(217, 395, 85, 23);
		frmMortalEditor.getContentPane().add(cb13);
		
		cb14 = new JCheckBox("Murder");
		cb14.setBounds(217, 426, 85, 23);
		frmMortalEditor.getContentPane().add(cb14);
		
		cb15 = new JCheckBox("Sleep");
		cb15.setBounds(217, 457, 85, 23);
		frmMortalEditor.getContentPane().add(cb15);
		
		JLabel lblModel = new JLabel("Model:");
		lblModel.setHorizontalAlignment(SwingConstants.LEFT);
		lblModel.setBounds(12, 117, 39, 16);
		frmMortalEditor.getContentPane().add(lblModel);
		
		JLabel lblType = new JLabel("Type:");
		lblType.setHorizontalAlignment(SwingConstants.LEFT);
		lblType.setBounds(12, 149, 39, 16);
		frmMortalEditor.getContentPane().add(lblType);
		
		JLabel lblHash = new JLabel("Hash:");
		lblHash.setHorizontalAlignment(SwingConstants.LEFT);
		lblHash.setBounds(12, 181, 39, 16);
		frmMortalEditor.getContentPane().add(lblHash);
		
		JLabel lblAnimation = new JLabel("Animation:");
		lblAnimation.setHorizontalAlignment(SwingConstants.LEFT);
		lblAnimation.setBounds(12, 245, 68, 16);
		frmMortalEditor.getContentPane().add(lblAnimation);
		
		JLabel lblSpawn = new JLabel("Spawn:");
		lblSpawn.setHorizontalAlignment(SwingConstants.LEFT);
		lblSpawn.setBounds(12, 213, 46, 16);
		frmMortalEditor.getContentPane().add(lblSpawn);
		
		JLabel lblScript = new JLabel("Script:");
		lblScript.setHorizontalAlignment(SwingConstants.LEFT);
		lblScript.setBounds(12, 275, 39, 16);
		frmMortalEditor.getContentPane().add(lblScript);
		
		JLabel lblName = new JLabel("Name:");
		lblName.setHorizontalAlignment(SwingConstants.LEFT);
		lblName.setBounds(94, 12, 39, 16);
		frmMortalEditor.getContentPane().add(lblName);
		
		JLabel lblBio = new JLabel("Bio:");
		lblBio.setHorizontalAlignment(SwingConstants.LEFT);
		lblBio.setBounds(94, 44, 39, 16);
		frmMortalEditor.getContentPane().add(lblBio);
		
		JLabel lblMood = new JLabel("Mood:");
		lblMood.setHorizontalAlignment(SwingConstants.LEFT);
		lblMood.setBounds(213, 149, 39, 16);
		frmMortalEditor.getContentPane().add(lblMood);
		
		JLabel lblFear = new JLabel("Fear:");
		lblFear.setHorizontalAlignment(SwingConstants.LEFT);
		lblFear.setBounds(213, 181, 39, 16);
		frmMortalEditor.getContentPane().add(lblFear);
		
		JLabel lblSubFear = new JLabel("SFear:");
		lblSubFear.setHorizontalAlignment(SwingConstants.LEFT);
		lblSubFear.setBounds(213, 213, 56, 16);
		frmMortalEditor.getContentPane().add(lblSubFear);
		
		JLabel lblWillpower = new JLabel("Terror:");
		lblWillpower.setHorizontalAlignment(SwingConstants.LEFT);
		lblWillpower.setBounds(213, 245, 68, 16);
		frmMortalEditor.getContentPane().add(lblWillpower);
		
		JLabel lblInsanity = new JLabel("Madness:");
		lblInsanity.setHorizontalAlignment(SwingConstants.LEFT);
		lblInsanity.setBounds(213, 278, 68, 16);
		frmMortalEditor.getContentPane().add(lblInsanity);
		
		JLabel lblBelieve = new JLabel("Belief:");
		lblBelieve.setHorizontalAlignment(SwingConstants.LEFT);
		lblBelieve.setBounds(213, 307, 68, 16);
		frmMortalEditor.getContentPane().add(lblBelieve);
		
		icon = new JLabel("");
		icon.setIcon(null);
		icon.setBounds(12, 10, 64, 64);
		frmMortalEditor.getContentPane().add(icon);
		
		panel = new JPanel();
		panel.setBorder(new TitledBorder(new LineBorder(new Color(184, 207, 229)), "Unknown Values", TitledBorder.CENTER, TitledBorder.TOP, null, new Color(51, 51, 51)));
		panel.setBounds(381, 0, 323, 122);
		frmMortalEditor.getContentPane().add(panel);
		panel.setLayout(null);
		
		spinnerId = new JSpinner();
		spinnerId.setBounds(12, 26, 86, 20);
		panel.add(spinnerId);
		
		spinnerUnk = new JSpinner();
		spinnerUnk.setBounds(12, 58, 86, 20);
		panel.add(spinnerUnk);
		
		spinnerUnk2 = new JSpinner();
		spinnerUnk2.setBounds(12, 90, 86, 20);
		panel.add(spinnerUnk2);
		
		spinnerUnk4 = new JSpinner();
		spinnerUnk4.setBounds(118, 26, 86, 20);
		panel.add(spinnerUnk4);
		
		spinnerUnk5 = new JSpinner();
		spinnerUnk5.setBounds(118, 58, 86, 20);
		panel.add(spinnerUnk5);
		
		spinnerUnk6 = new JSpinner();
		spinnerUnk6.setBounds(118, 90, 86, 20);
		panel.add(spinnerUnk6);
		
		
		spinnerUnk7 = new JSpinner();
		spinnerUnk7.setBounds(225, 58, 86, 20);
		panel.add(spinnerUnk7);
		
		spinnerUnk8 = new JSpinner();
		spinnerUnk8.setBounds(225, 26, 86, 20);
		panel.add(spinnerUnk8);
		
		cbImg = new JComboBox();
		cbImg.setBounds(56, 83, 145, 20);
		frmMortalEditor.getContentPane().add(cbImg);
		
		JLabel lblImage = new JLabel("Image:");
		lblImage.setHorizontalAlignment(SwingConstants.LEFT);
		lblImage.setBounds(12, 85, 39, 16);
		frmMortalEditor.getContentPane().add(lblImage);
		
		tfUnkDataOff = new JTextField();
		tfUnkDataOff.setBounds(77, 305, 124, 20);
		frmMortalEditor.getContentPane().add(tfUnkDataOff);
		tfUnkDataOff.setColumns(10);
		
		JLabel lblPathdata = new JLabel("PathData:");
		lblPathdata.setHorizontalAlignment(SwingConstants.LEFT);
		lblPathdata.setBounds(12, 307, 56, 16);
		frmMortalEditor.getContentPane().add(lblPathdata);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBorder(new TitledBorder(new LineBorder(new Color(184, 207, 229)), "Mod Information", TitledBorder.CENTER, TitledBorder.TOP, null, new Color(51, 51, 51)));
		panel_1.setBounds(379, 161, 323, 149);
		frmMortalEditor.getContentPane().add(panel_1);
		panel_1.setLayout(null);
		
		
		DefaultListModel model = new DefaultListModel();
		
		JButton bAddToList = new JButton("Add");
		bAddToList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				File file1 =  getPath2("Select File to replace", "Select");
    		  	if(file1!= null){
    		  		File file2 =  getPath2("Replace with...", "Select");
    		  		if(file2 != null){
    		  			try{
	    		  			String dirN = (file1.getAbsolutePath().replace(gdPath, ""));
	    		  			Path path = Paths.get(gdPath +"\\"+ "Temp" +"\\"+ file1.getName());
	    		  			Files.copy(file2.toPath(), path, StandardCopyOption.REPLACE_EXISTING);
	    		  			model.addElement(file1.getName() + "=" +dirN.substring(1, dirN.length()));
	    		  			int index = cbMissions.getSelectedIndex();
	    		  			int index2 = cbMortals.getSelectedIndex();
	    		  			
	    		  			for(int i = 0; i<model.size(); i++){
	    		  				if(model.getElementAt(0).toString().startsWith(cbImg.getItemAt(cbImg.getSelectedIndex()).toString())){
	    		  					Path path2 = Paths.get(gdPath + "\\"+"Temp" + "\\" + cbImg.getItemAt(cbImg.getSelectedIndex()).toString() + ".tga");
	    		  					icon.setIcon(targaToImageIcon(path2));
	    		  				}
	    		  			}
    		  			}catch(Exception e){e.printStackTrace();}
    		  		}
    		  	}
			}
		});
		bAddToList.setBounds(171, 122, 64, 16);
		panel_1.add(bAddToList);
		
		JLabel lblNewLabel = new JLabel("Title:");
		lblNewLabel.setBounds(12, 28, 55, 16);
		panel_1.add(lblNewLabel);
		
		JLabel lblAuthor = new JLabel("Author:");
		lblAuthor.setBounds(12, 60, 55, 16);
		panel_1.add(lblAuthor);
		
		JLabel lblInfo = new JLabel("Version:");
		lblInfo.setBounds(12, 92, 55, 16);
		panel_1.add(lblInfo);
		
		JLabel lblDescription = new JLabel("Description:");
		lblDescription.setBounds(12, 120, 80, 16);
		panel_1.add(lblDescription);
		
		tfTitle = new JTextField();
		tfTitle.setBounds(53, 27, 115, 20);
		panel_1.add(tfTitle);
		tfTitle.setColumns(10);
		
		tfAuthor = new JTextField();
		tfAuthor.setColumns(10);
		tfAuthor.setBounds(63, 59, 105, 20);
		panel_1.add(tfAuthor);
		
		tfVersion = new JTextField();
		tfVersion.setColumns(10);
		tfVersion.setBounds(73, 91, 95, 20);
		panel_1.add(tfVersion);
		
		tfDescription = new JTextField();
		tfDescription.setColumns(10);
		tfDescription.setBounds(83, 119, 85, 20);
		panel_1.add(tfDescription);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(171, 26, 136, 95);
		panel_1.add(scrollPane);
		list = new JList(model);
		list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		scrollPane.setViewportView(list);
		
		JButton bDeleteFromList = new JButton("Del");
		bDeleteFromList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				int index = list.getSelectedIndex();
				if(index != -1){
					String[] tempArray = list.getModel().getElementAt(index).toString().split("=");
					try{
						Path path = Paths.get(gdPath+"\\"+"Temp"+"\\" + tempArray[0]);
						Files.delete(path);
					}catch(Exception e){e.printStackTrace();}
					model.remove(index);
					cleanImage();
				}
			}
		});
		bDeleteFromList.setBounds(243, 122, 64, 16);
		panel_1.add(bDeleteFromList);
		
		JLabel lblAi = new JLabel("AI:");
		lblAi.setHorizontalAlignment(SwingConstants.LEFT);
		lblAi.setBounds(213, 117, 39, 16);
		frmMortalEditor.getContentPane().add(lblAi);
		
		cbAI = new JComboBox();
		cbAI.setBounds(257, 115, 112, 20);
		frmMortalEditor.getContentPane().add(cbAI);
		
		tfUnkOff = new JTextField();
		tfUnkOff.setBounds(257, 83, 112, 20);
		frmMortalEditor.getContentPane().add(tfUnkOff);
		tfUnkOff.setColumns(10);
		
		lblPathdata_1 = new JLabel("Path:");
		lblPathdata_1.setHorizontalAlignment(SwingConstants.LEFT);
		lblPathdata_1.setBounds(213, 85, 39, 16);
		frmMortalEditor.getContentPane().add(lblPathdata_1);
		
		utf8item.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
					try {
						encoding = new String("UTF8");
						windows1250_item.setSelected(false);
						utf8item.setSelected(true);
						Advapi32Util.registrySetStringValue(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor", "encoding", "UTF8");
						loadfile();
					}catch(Exception exc){exc.printStackTrace();}
			}
		});
		
		windows1250_item.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
					try {
						encoding = new String("windows-1250");
						utf8item.setSelected(false);
						windows1250_item.setSelected(true);
						Advapi32Util.registrySetStringValue(WinReg.HKEY_CURRENT_USER, "SOFTWARE\\MortalEditor", "encoding", "windows-1250");
						loadfile();
					}catch(Exception exc){exc.printStackTrace();}
			}
		});
		
		mntmOpen.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					loadfile();
				}catch(Exception exc){exc.printStackTrace();}
			}
		});
		
		mntmSave.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				//try {
					savefile();
				//}catch(Exception exc){exc.printStackTrace();}
			}
		});
		
		mntmAbout.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				JOptionPane.showMessageDialog(null,"Contact: bspviewer@gmail.com", "Mortal Editor v1.0", JOptionPane.INFORMATION_MESSAGE);
			}
		});
		loadfile();
	}
}
